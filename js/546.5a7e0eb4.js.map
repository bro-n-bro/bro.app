{"version":3,"file":"js/546.5a7e0eb4.js","mappings":"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","sources":["webpack://bro_app/./src/components/Network.vue","webpack://bro_app/./src/components/Network.vue?2c61","webpack://bro_app/./src/components/Account.vue","webpack://bro_app/./src/components/Account.vue?5e23","webpack://bro_app/./src/components/modal/MakeChoice.vue","webpack://bro_app/./src/components/modal/MakeChoice.vue?1575","webpack://bro_app/./src/config/chain/desmos.js","webpack://bro_app/./src/config/chain/crescent.js","webpack://bro_app/./src/config/chain/omniflix.js","webpack://bro_app/./src/views/Dashboard.vue","webpack://bro_app/./src/views/Dashboard.vue?040e"],"sourcesContent":["<template>\n    <div class=\"network\" :class=\"{\n        empty: !store.auth,\n        disabled: !store.networks[props.network].status && store.auth,\n        default: store.networks[props.network].tokens_sum\n    }\">\n        <template v-if=\"!store.auth\">\n            <div class=\"logo\">\n                <img :src=\"`/${props.network}_logo.png`\" alt=\"\">\n            </div>\n\n            <div>{{ store.networks[props.network].name }}</div>\n        </template>\n\n        <template v-else>\n            <template v-if=\"!store.networks[props.network].status\">\n            <div class=\"head\" @mouseover=\"store.networks[props.network].tokens_sum > 0\n                ? emitter.emit('setNotification', $t('message.network_lock_notice2'))\n                : emitter.emit('setNotification', $t('message.network_lock_notice'))\"\n            >\n                <div class=\"logo\">\n                    <img :src=\"`/${props.network}_logo.png`\" alt=\"\">\n                </div>\n\n                <div class=\"name\">{{ store.networks[props.network].name }}</div>\n            </div>\n            </template>\n\n            <template v-else>\n            <div class=\"head\" @mouseover=\"emitter.emit('setNotification', $t('message.network_notice', {\n                health: $filters.toFixed(store.networks[props.network].health, 2),\n                color: store.networks[props.network].health_color\n            }))\">\n                <div class=\"logo\">\n                    <img :src=\"`/${props.network}_logo.png`\" alt=\"\">\n                </div>\n\n                <div class=\"name\">{{ store.networks[props.network].name }}</div>\n            </div>\n            </template>\n\n            <div class=\"tokens\" v-show=\"store.networks[props.network].status\"\n                @mouseover=\"emitter.emit('setNotification', $t('message.network_sum_notice', { network: store.networks[props.network].name }))\n            \">\n                {{ $filters.toFixed(store.networks[props.network].tokens_sum, 2) }}\n                {{ store.networks[props.network].token_name }}\n            </div>\n\n            <div class=\"visualization\"  v-show=\"store.networks[props.network].status\" @mouseover=\"emitter.emit('setNotification', $t('message.network_tokens_notice', {\n                delegations_tokens: $filters.toFixed(store.networks[props.network].delegations_tokens, 6),\n                availabel_tokens: $filters.toFixed(store.networks[props.network].availabel_tokens, 6),\n                rewards_tokens: $filters.toFixed(store.networks[props.network].rewards_tokens, 6),\n                ibc_tokens: $filters.toFixed(store.networks[props.network].ibc_tokens, 6),\n                denom: store.networks[props.network].token_name,\n                network: store.networks[props.network].name\n            }))\">\n                <div class=\"staked\" :style=\"{'width': $filters.toFixed(store.networks[props.network].delegations_percents, 2) + '%'}\" v-show=\"store.networks[props.network].delegations_tokens\"></div>\n\n                <div class=\"liquid\" :style=\"{'width': $filters.toFixed(store.networks[props.network].availabel_percents, 2) + '%'}\" v-show=\"store.networks[props.network].availabel_tokens\"></div>\n\n                <div class=\"rewards\" :style=\"{'width': $filters.toFixed(store.networks[props.network].rewards_percents, 2) + '%'}\" v-show=\"store.networks[props.network].rewards_tokens\"></div>\n\n                <div class=\"IBC\" :style=\"{'width': $filters.toFixed(store.networks[props.network].ibc_percents, 2) + '%'}\" v-show=\"store.networks[props.network].ibc_tokens\"></div>\n            </div>\n\n            <div class=\"stats\" v-show=\"store.networks[props.network].status\">\n                <div @mouseover=\"emitter.emit('setNotification', $t('message.network_personal_APR_notice'))\">\n                    <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n\n                    <div class=\"val\">{{ $filters.toFixed(store.networks[props.network].personal_APR, 2) }}%</div>\n                </div>\n\n                <div @mouseover=\"emitter.emit('setNotification', $t('message.network_RPDE_notice', { denom: store.networks[props.network].token_name}))\">\n                    <div class=\"label\">{{ $t('message.RPDE') }}</div>\n\n                    <div class=\"val\">{{ $filters.toFixed(store.networks[props.network].RPDE, 2) }}</div>\n                </div>\n            </div>\n\n            <div class=\"lock\" v-show=\"!store.networks[props.network].status\"\n                @mouseover=\"store.networks[props.network].tokens_sum > 0\n                    ? emitter.emit('setNotification', $t('message.network_lock_notice2'))\n                    : emitter.emit('setNotification', $t('message.network_lock_notice'))\"\n            >\n                <svg><use xlink:href=\"/sprite.svg#ic_lock\"></use></svg>\n            </div>\n\n            <!-- <a href=\"/\" class=\"details_btn\" v-if=\"store.networks[props.network].status && store.auth\">{{ $t('message.details') }}</a> -->\n            <button class=\"details_btn\" v-if=\"store.networks[props.network].status && store.auth\" @click.prevent=\"emitter.emit('open_manage_modal', { network: props.network })\">\n                {{ $t('message.manage_btn') }}\n            </button>\n\n            <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: props.network })\">\n                {{ $t('message.delegate_btn') }}\n            </button>\n        </template>\n\n        <div class=\"shadow\" :class=\"[store.networks[props.network].health_color]\" :style=\"{'--speed': store.networks[props.network].speed + 's'}\"></div>\n    </div>\n</template>\n\n\n<script setup>\n    import { inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n\n    const props = defineProps(['network']),\n        store = useGlobalStore(),\n        emitter = inject('emitter')\n</script>\n\n\n\n<style scoped>\n    .network\n    {\n        color: #fff;\n\n        position: relative;\n        z-index: 3;\n\n        display: flex;\n        flex-direction: column;\n\n        width: 280px;\n        height: 324px;\n        margin-bottom: 7px;\n        margin-left: 7px;\n        padding: 58px 38px 64px;\n\n        pointer-events: none;\n    }\n\n    .network:before\n    {\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        content: '';\n\n        background: #141414;\n\n        clip-path: polygon(50% 0, 100% 25%, 100% 75%, 50% 100%, 0 75%, 0 25%);\n    }\n\n    .network.hidden:before\n    {\n        display: none;\n    }\n\n\n    .network .shadow\n    {\n        position: absolute;\n        z-index: -2;\n        top: -3px;\n        left: -3px;\n\n        display: block;\n\n        width: calc(100% + 6px);\n        height: calc(100% + 6px);\n\n        --speed: 10s;\n        clip-path: polygon(50% 0, 100% 25%, 100% 75%, 50% 100%, 0 75%, 0 25%);\n    }\n\n\n    .network .shadow:after\n    {\n        position: absolute;\n        top: -24px;\n        left: -24px;\n\n        display: block;\n\n        width: calc(100% + 48px);\n        height: calc(100% + 48px);\n\n        content: '';\n        -webkit-animation: spin var(--speed) linear infinite;\n           -moz-animation: spin var(--speed) linear infinite;\n                animation: spin var(--speed) linear infinite;\n    }\n\n    .network .shadow.green:after\n    {\n        background:    -moz-linear-gradient(top, rgba(92, 255, 15, 1) 0%, rgba(0, 47, 5, .3) 100%);\n        background: -webkit-linear-gradient(top, rgba(92, 255, 15, 1) 0%, rgba(0, 47, 5, .3) 100%);\n        background:         linear-gradient(to bottom, rgba(92, 255, 15, 1) 0%, rgba(0, 47, 5, .3) 100%);\n    }\n\n    .network .shadow.orange:after\n    {\n        background:    -moz-linear-gradient(top, rgba(255, 101, 15, 1) 0%, rgba(96, 24, 2, .3) 100%);\n        background: -webkit-linear-gradient(top, rgba(255, 101, 15, 1) 0%, rgba(96, 24, 2, .3) 100%);\n        background:         linear-gradient(to bottom, rgba(255, 101, 15, 1) 0%, rgba(96, 24, 2, .3) 100%);\n    }\n\n    .network .shadow.red:after\n    {\n        background:    -moz-linear-gradient(top, rgba(255, 15, 15, 1) 0%, rgba(87, 0, 0, .3) 100%);\n        background: -webkit-linear-gradient(top, rgba(255, 15, 15, 1) 0%, rgba(87, 0, 0, .3) 100%);\n        background:         linear-gradient(to bottom, rgba(255, 15, 15, 1) 0%, rgba(87, 0, 0, .3) 100%);\n    }\n\n    .network .shadow.grey:after\n    {\n        background: #212121;\n    }\n\n\n    .network .head\n    {\n        display: flex;\n\n        width: 100%;\n        margin-bottom: 20px;\n        pointer-events: auto;\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n\n\n    .network:not(.disabled) .head:hover .name\n    {\n        text-shadow: -0   -1px 0   rgba( 149, 15, 255, .6 ),\n        0   -1px 0   rgba( 149, 15, 255, .6 ),\n        -0    1px 0   rgba( 149, 15, 255, .6 ),\n        0    1px 0   rgba( 149, 15, 255, .6 ),\n        -1px -0   0   rgba( 149, 15, 255, .6 ),\n        1px -0   0   rgba( 149, 15, 255, .6 ),\n        -1px  0   0   rgba( 149, 15, 255, .6 ),\n        1px  0   0   rgba( 149, 15, 255, .6 ),\n        -1px -1px 0   rgba( 149, 15, 255, .6 ),\n        1px -1px 0   rgba( 149, 15, 255, .6 ),\n        -1px  1px 0   rgba( 149, 15, 255, .6 ),\n        1px  1px 0   rgba( 149, 15, 255, .6 ),\n        -1px -1px 0   rgba( 149, 15, 255, .6 ),\n        1px -1px 0   rgba( 149, 15, 255, .6 ),\n        -1px  1px 0   rgba( 149, 15, 255, .6 ),\n        1px  1px 0   rgba( 149, 15, 255, .6 ),\n        2px 5px 15px rgba(149, 15, 255, .45);\n    }\n\n\n    .network .logo\n    {\n        position: relative;\n\n        display: flex;\n\n        width: 30px;\n        height: 30px;\n\n        border-radius: 50%;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n\n\n    .network .logo img\n    {\n        display: block;\n\n        max-width: 100%;\n        max-height: 100%;\n\n        border-radius: inherit;\n    }\n\n\n    .network .name\n    {\n        font-size: 18px;\n        font-weight: 500;\n        line-height: 22px;\n\n        max-width: calc(100% - 40px);\n        margin-left: 10px;\n\n        transition: text-shadow .2s linear;\n    }\n\n\n    .network .tokens\n    {\n        font-size: 18px;\n        font-weight: 600;\n        line-height: 22px;\n\n        margin-bottom: 10px;\n\n        transition: text-shadow .2s linear;\n        text-align: center;\n        white-space: nowrap;\n\n        font-feature-settings: 'pnum' on, 'lnum' on;\n    }\n\n    .network .tokens:hover\n    {\n        text-shadow: -0   -1px 0   rgba( 149, 15, 255, .6 ),\n        0   -1px 0   rgba( 149, 15, 255, .6 ),\n        -0    1px 0   rgba( 149, 15, 255, .6 ),\n        0    1px 0   rgba( 149, 15, 255, .6 ),\n        -1px -0   0   rgba( 149, 15, 255, .6 ),\n        1px -0   0   rgba( 149, 15, 255, .6 ),\n        -1px  0   0   rgba( 149, 15, 255, .6 ),\n        1px  0   0   rgba( 149, 15, 255, .6 ),\n        -1px -1px 0   rgba( 149, 15, 255, .6 ),\n        1px -1px 0   rgba( 149, 15, 255, .6 ),\n        -1px  1px 0   rgba( 149, 15, 255, .6 ),\n        1px  1px 0   rgba( 149, 15, 255, .6 ),\n        -1px -1px 0   rgba( 149, 15, 255, .6 ),\n        1px -1px 0   rgba( 149, 15, 255, .6 ),\n        -1px  1px 0   rgba( 149, 15, 255, .6 ),\n        1px  1px 0   rgba( 149, 15, 255, .6 ),\n        2px 5px 15px rgba(149, 15, 255, .45);\n    }\n\n\n    .network .visualization\n    {\n        display: flex;\n        visibility: hidden;\n        overflow: hidden;\n\n        height: 12px;\n        min-height: 12px;\n        margin-bottom: 12px;\n\n        transition: .2s linear;\n        transition-property: opacity, visibility, box-shadow;\n        pointer-events: none;\n\n        opacity: 0;\n        border-radius: 10px;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: nowrap;\n    }\n\n    .network:not(.disabled) .visualization\n    {\n        visibility: visible;\n\n        pointer-events: auto;\n\n        opacity: 1;\n    }\n\n\n    .network .visualization > *\n    {\n        min-width: 2px;\n        height: 12px;\n\n        transition: width .2s linear;\n    }\n\n    .network .visualization .staked\n    {\n        background: #950fff;\n    }\n\n    .network .visualization .liquid\n    {\n        background: #eb5757;\n    }\n\n    .network .visualization .rewards\n    {\n        background: #1bc562;\n    }\n\n    .network .visualization .IBC\n    {\n        background: #c5811b;\n    }\n\n    .network .visualization:hover\n    {\n        box-shadow: 2px 5px 15px rgba(149, 15, 255, .65);\n    }\n\n\n    .network .stats\n    {\n        font-size: 12px;\n        line-height: 15px;\n\n        width: 100%;\n        margin-bottom: 20px;\n    }\n\n    .network:not(.disabled) .stats\n    {\n        pointer-events: auto;\n    }\n\n\n    .network .stats > *\n    {\n        display: flex;\n\n        transition: text-shadow .2s linear;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: nowrap;\n        justify-content: space-between;\n    }\n\n    .network .stats > *:hover\n    {\n        text-shadow: -0   -1px 0   rgba( 149, 15, 255, .6 ),\n        0   -1px 0   rgba( 149, 15, 255, .6 ),\n        -0    1px 0   rgba( 149, 15, 255, .6 ),\n        0    1px 0   rgba( 149, 15, 255, .6 ),\n        -1px -0   0   rgba( 149, 15, 255, .6 ),\n        1px -0   0   rgba( 149, 15, 255, .6 ),\n        -1px  0   0   rgba( 149, 15, 255, .6 ),\n        1px  0   0   rgba( 149, 15, 255, .6 ),\n        -1px -1px 0   rgba( 149, 15, 255, .6 ),\n        1px -1px 0   rgba( 149, 15, 255, .6 ),\n        -1px  1px 0   rgba( 149, 15, 255, .6 ),\n        1px  1px 0   rgba( 149, 15, 255, .6 ),\n        -1px -1px 0   rgba( 149, 15, 255, .6 ),\n        1px -1px 0   rgba( 149, 15, 255, .6 ),\n        -1px  1px 0   rgba( 149, 15, 255, .6 ),\n        1px  1px 0   rgba( 149, 15, 255, .6 ),\n        2px 5px 15px rgba(149, 15, 255, .45);\n    }\n\n\n    .network .stats > * + *\n    {\n        margin-top: 7px;\n        padding-top: 6px;\n\n        border-top: 1px solid rgba(255, 255, 255, .05);\n    }\n\n\n    .network .stats .label\n    {\n        position: relative;\n\n        margin-right: 10px;\n    }\n\n\n    .network .stats .val\n    {\n        font-weight: 500;\n    }\n\n\n\n    .network .lock\n    {\n        margin-top: 8px;\n        pointer-events: auto;\n    }\n\n    .network .lock svg\n    {\n        display: block;\n\n        width: 68px;\n        height: 68px;\n        margin: auto;\n    }\n\n\n    .network .details_btn,\n    .network .delegate_btn\n    {\n        color: currentColor;\n        font-size: 12px;\n        font-weight: 600;\n        line-height: 15px;\n\n        display: block;\n\n        margin: auto auto 0;\n        padding: 9px 29px 10px;\n\n        transition: .2s linear;\n        text-decoration: none;\n        pointer-events: auto;\n\n        border: 1px solid #353535;\n        border-radius: 40px;\n    }\n\n    .network .delegate_btn,\n    .network .details_btn:hover\n    {\n        color: #fff;\n\n        border-color: #950fff;\n        background: #950fff;\n    }\n\n    .network .delegate_btn:hover,\n    .network .delegate_btn:active,\n    .network .details_btn:active\n    {\n        color: #fff;\n\n        border-color: #7700e1;\n        background: #7700e1;\n    }\n\n    .network.disabled:not(.default) .delegate_btn\n    {\n        opacity: .65;\n    }\n\n\n\n    .network.empty\n    {\n        color: #464646;\n        font-size: 30px;\n        font-weight: 700;\n        line-height: 36px;\n\n        flex-direction: row;\n\n        text-align: center;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n\n    .network.empty .shadow:after\n    {\n        background: #212121;\n    }\n\n\n    .network.empty .logo\n    {\n        position: relative;\n\n        display: flex;\n\n        width: 60px;\n        height: 60px;\n        margin: 0 auto 10px;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n\n    .network.empty .logo + div\n    {\n        width: 100%;\n    }\n\n    .network.empty .logo img\n    {\n        display: block;\n\n        max-width: 100%;\n        max-height: 100%;\n\n        border-radius: 50%;\n    }\n\n    .network.empty .logo:after\n    {\n        position: absolute;\n        z-index: 2;\n        top: -1px;\n        left: -1px;\n\n        display: block;\n\n        width: calc(100% + 2px);\n        height: calc(100% + 2px);\n\n        content: '';\n\n        border-radius: 50%;\n        background: rgba(20, 20, 20, .8);\n    }\n\n\n\n    .network.disabled\n    {\n        color: #464646;\n    }\n\n    .network.disabled:not(.default) .logo:after\n    {\n        position: absolute;\n        z-index: 2;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        content: '';\n\n        opacity: .8;\n        border-radius: inherit;\n        background: #141414;\n    }\n\n    .network.disabled .shadow:after\n    {\n        background: #212121;\n    }\n\n\n    .network:not(.disabled) .head,\n    .network:not(.disabled) .tokens\n    {\n        pointer-events: auto;\n    }\n\n    .network.default .head,\n    .network.default .tokens\n    {\n        color: #fff;\n    }\n\n\n    @-moz-keyframes spin\n    {\n        100%\n        {\n            -moz-transform: rotate(360deg);\n        }\n    }\n\n    @-webkit-keyframes spin\n    {\n        100%\n        {\n            -webkit-transform: rotate(360deg);\n        }\n    }\n\n    @keyframes spin\n    {\n        100%\n        {\n            -webkit-transform: rotate(360deg);\n                    transform: rotate(360deg);\n        }\n    }\n\n</style>","import script from \"./Network.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Network.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Network.vue?vue&type=style&index=0&id=ae0602f0&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-ae0602f0\"]])\n\nexport default __exports__","<template>\n    <div class=\"account\">\n        <div class=\"user_name\">{{ store.userName }}</div>\n\n        <div class=\"balance\" @mouseover=\"emitter.emit('setNotification', $t('message.account_balance_notice'))\">\n            <template v-if=\"store.currency == 'USDT'\">\n            {{ $filters.toFixed(store.account.balance_usdt, 1) }}\n            </template>\n\n            <template v-if=\"store.currency == 'ATOM'\">\n            {{ $filters.toFixed(store.account.balance_atom, 2) }}\n            </template>\n\n            <template v-if=\"store.currency == 'ETH'\">\n            {{ $filters.toFixed(store.account.balance_eth, 4) }}\n            </template>\n\n            <template v-if=\"store.currency == 'BTC'\">\n            {{ $filters.toFixed(store.account.balance_btc, 5) }}\n            </template>\n\n            {{ store.currency }}\n        </div>\n\n        <div class=\"stats\">\n            <div @mouseover=\"emitter.emit('setNotification', $t('message.account_RPDE_notice'))\">\n                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n\n                <div class=\"val\">\n                    <template v-if=\"store.currency == 'USDT'\">\n                    {{ $filters.toFixed(store.account.RPDE_usdt, 3) }}\n                    </template>\n\n                    <template v-if=\"store.currency == 'ATOM'\">\n                    {{ $filters.toFixed(store.account.RPDE_atom, 3) }}\n                    </template>\n\n                    <template v-if=\"store.currency == 'ETH'\">\n                    {{ $filters.toFixed(store.account.RPDE_eth, 3) }}\n                    </template>\n\n                    <template v-if=\"store.currency == 'BTC'\">\n                    {{ $filters.toFixed(store.account.RPDE_btc, 3) }}\n                    </template>\n                </div>\n            </div>\n\n            <div @mouseover=\"emitter.emit('setNotification', $t('message.account_personal_APR_notice'))\">\n                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n\n                <div class=\"val\">{{ $filters.toFixed(store.account.personal_APR, 2) }}%</div>\n            </div>\n        </div>\n\n        <router-link to=\"/under_construction\" class=\"details_btn\">{{ $t('message.details_btn') }}</router-link>\n\n        <div class=\"shadow\"></div>\n    </div>\n</template>\n\n\n<script setup>\n    import { inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter')\n</script>\n\n\n<style scoped>\n   .account\n   {\n       color: #fff;\n\n       position: relative;\n       z-index: 3;\n\n       display: flex;\n       flex-direction: column;\n\n       width: calc(20% - 7px);\n       width: 280px;\n       height: 324px;\n       margin-bottom: 7px;\n       margin-left: 7px;\n       padding: 58px 38px 64px;\n\n       pointer-events: none;\n   }\n\n   .account:before\n   {\n       position: absolute;\n       z-index: -1;\n       top: 0;\n       left: 0;\n\n       display: block;\n\n       width: 100%;\n       height: 100%;\n\n       content: '';\n\n       background: #3c0666;\n\n       clip-path: polygon(50% 0, 100% 25%, 100% 75%, 50% 100%, 0 75%, 0 25%);\n   }\n\n\n   .account .shadow\n   {\n       position: absolute;\n       z-index: -2;\n       top: -3px;\n       left: -3px;\n\n       display: block;\n\n       width: calc(100% + 6px);\n       height: calc(100% + 6px);\n\n       --speed: 10s;\n       clip-path: polygon(50% 0, 100% 25%, 100% 75%, 50% 100%, 0 75%, 0 25%);\n   }\n\n   .account .shadow:after\n   {\n       position: absolute;\n       top: -24px;\n       left: -24px;\n\n       display: block;\n\n       width: calc(100% + 48px);\n       height: calc(100% + 48px);\n\n       content: '';\n\n       background: #950fff;\n   }\n\n\n   .account .user_name\n   {\n       font-size: 18px;\n       font-weight: 500;\n       line-height: 22px;\n\n       overflow: hidden;\n\n       width: 102px;\n       margin: 0 auto 20px;\n\n       text-align: center;\n       white-space: nowrap;\n       text-overflow: ellipsis;\n   }\n\n\n   .account .balance\n   {\n       font-size: 30px;\n       font-weight: 700;\n       line-height: 36px;\n\n       margin-bottom: 18px;\n\n       transition: text-shadow .2s linear;\n       text-align: center;\n       pointer-events: auto;\n\n       font-feature-settings: 'pnum' on, 'lnum' on;\n   }\n\n   .account .balance:hover\n   {\n       text-shadow: -0   -1px 0   rgba( 149, 15, 255, .6 ),\n       0   -1px 0   rgba( 149, 15, 255, .6 ),\n       -0    1px 0   rgba( 149, 15, 255, .6 ),\n       0    1px 0   rgba( 149, 15, 255, .6 ),\n       -1px -0   0   rgba( 149, 15, 255, .6 ),\n       1px -0   0   rgba( 149, 15, 255, .6 ),\n       -1px  0   0   rgba( 149, 15, 255, .6 ),\n       1px  0   0   rgba( 149, 15, 255, .6 ),\n       -1px -1px 0   rgba( 149, 15, 255, .6 ),\n       1px -1px 0   rgba( 149, 15, 255, .6 ),\n       -1px  1px 0   rgba( 149, 15, 255, .6 ),\n       1px  1px 0   rgba( 149, 15, 255, .6 ),\n       -1px -1px 0   rgba( 149, 15, 255, .6 ),\n       1px -1px 0   rgba( 149, 15, 255, .6 ),\n       -1px  1px 0   rgba( 149, 15, 255, .6 ),\n       1px  1px 0   rgba( 149, 15, 255, .6 ),\n       2px 5px 15px rgba(149, 15, 255, .45);\n   }\n\n\n   .account .stats\n   {\n       font-size: 12px;\n       line-height: 15px;\n\n       width: 100%;\n       margin-bottom: 20px;\n\n       pointer-events: auto;\n   }\n\n   .account:not(.disabled) .stats\n   {\n       pointer-events: auto;\n   }\n\n\n   .account .stats > *\n   {\n       display: flex;\n\n       transition: text-shadow .2s linear;\n\n       align-content: center;\n       align-items: center;\n       flex-wrap: nowrap;\n       justify-content: space-between;\n   }\n\n   .account .stats > *:hover\n   {\n       text-shadow: -0   -1px 0   rgba( 149, 15, 255, .6 ),\n       0   -1px 0   rgba( 149, 15, 255, .6 ),\n       -0    1px 0   rgba( 149, 15, 255, .6 ),\n       0    1px 0   rgba( 149, 15, 255, .6 ),\n       -1px -0   0   rgba( 149, 15, 255, .6 ),\n       1px -0   0   rgba( 149, 15, 255, .6 ),\n       -1px  0   0   rgba( 149, 15, 255, .6 ),\n       1px  0   0   rgba( 149, 15, 255, .6 ),\n       -1px -1px 0   rgba( 149, 15, 255, .6 ),\n       1px -1px 0   rgba( 149, 15, 255, .6 ),\n       -1px  1px 0   rgba( 149, 15, 255, .6 ),\n       1px  1px 0   rgba( 149, 15, 255, .6 ),\n       -1px -1px 0   rgba( 149, 15, 255, .6 ),\n       1px -1px 0   rgba( 149, 15, 255, .6 ),\n       -1px  1px 0   rgba( 149, 15, 255, .6 ),\n       1px  1px 0   rgba( 149, 15, 255, .6 ),\n       2px 5px 15px rgba(149, 15, 255, .45);\n   }\n\n\n   .account .stats > * + *\n   {\n       margin-top: 7px;\n       padding-top: 6px;\n\n       border-top: 1px solid rgba(255, 255, 255, .05);\n   }\n\n\n   .account .stats .label\n   {\n       position: relative;\n\n       margin-right: 10px;\n   }\n\n\n   .account .stats .val\n   {\n       font-weight: 500;\n   }\n\n\n   .account .details_btn\n   {\n       border-color: rgba(255, 255, 255, .2);\n   }\n\n\n   .account .details_btn\n   {\n       color: currentColor;\n       font-size: 12px;\n       font-weight: 600;\n       line-height: 15px;\n\n       display: block;\n\n       margin: auto auto 0;\n       padding: 9px 29px 10px;\n\n       transition: .2s linear;\n       text-decoration: none;\n       pointer-events: auto;\n\n       border: 1px solid rgba(255, 255, 255, .2);\n       border-radius: 40px;\n   }\n\n   .account .details_btn:hover\n   {\n       color: #fff;\n\n       border-color: #950fff;\n       background: #950fff;\n   }\n\n   .account .details_btn:active\n    {\n        color: #fff;\n\n        border-color: #7700E1;\n        background: #7700E1;\n    }\n\n\n   .account .connect_wallet_btn\n   {\n       color: #000;\n       font-size: 12px;\n       font-weight: 600;\n       line-height: 15px;\n\n       position: absolute;\n       top: 0;\n       right: 0;\n       bottom: 0;\n       left: 0;\n\n       display: block;\n\n       width: 128px;\n       height: 35px;\n       margin: auto;\n\n       transition: .2s linear;\n       pointer-events: auto;\n\n       border-radius: 50px;\n       background: #fff;\n   }\n\n   .account .connect_wallet_btn:hover\n   {\n       color: #fff;\n\n       background: #950fff;\n   }\n\n</style>\n","import script from \"./Account.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Account.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Account.vue?vue&type=style&index=0&id=d6879f30&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d6879f30\"]])\n\nexport default __exports__","<template>\n    <section class=\"make_choise\">\n        <div class=\"cont\">\n            <div class=\"data\">\n                <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_lock\"></use></svg>\n\n                <div class=\"title\">\n                    {{ $t('message.choice_title') }}\n                </div>\n\n                <div class=\"btns\">\n                    <button class=\"btn blue\" @click.prevent=\"close\">\n                        <span>{{ $t('message.no_btn') }}</span>\n                        <img src=\"../../assets/images/pill_blue.png\" alt=\"\">\n                    </button>\n\n                    <router-link to=\"/create_passport\" class=\"btn red\">\n                        <span>{{ $t('message.yes_btn') }}</span>\n                        <img src=\"../../assets/images/pill_red.png\" alt=\"\">\n                    </router-link>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { useGlobalStore } from '@/stores'\n\n    const store = useGlobalStore()\n\n    function close() {\n        store.showMakeChoice = false\n    }\n</script>\n\n\n<style>\n    .make_choise\n    {\n        position: fixed;\n        z-index: 90;\n        top: 0;\n        left: 0;\n\n        display: flex;\n\n        width: 100%;\n        height: 100%;\n        padding-bottom: 100px;\n\n        text-align: center;\n\n        background: rgba(0,0,0,.86);\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .make_choise .data\n    {\n        width: 508px;\n        max-width: 100%;\n        margin-right: auto;\n        margin-left: auto;\n    }\n\n\n    .make_choise .icon\n    {\n        color: #464646;\n\n        display: block;\n\n        width: 144px;\n        height: 144px;\n        margin: 0 auto 30px;\n    }\n\n\n    .make_choise .title\n    {\n        font-size: 30px;\n        font-weight: 700;\n        line-height: 110%;\n    }\n\n\n    .make_choise .btns\n    {\n        display: flex;\n\n        margin-top: 30px;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .make_choise .btns .btn\n    {\n        color: #fff;\n        font-weight: 500;\n        line-height: 19px;\n\n        display: flex;\n\n        width: 212px;\n        height: 47px;\n\n        transition: background .2s linear;\n        text-decoration: none;\n\n        border-radius: 14px;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .make_choise .btns .btn.blue\n    {\n        background: #0343e8;\n    }\n\n    .make_choise .btns .btn.red\n    {\n        background: #eb5757;\n    }\n\n\n    .make_choise .btns .btn + .btn\n    {\n        margin-left: 10px;\n    }\n\n\n    .make_choise .btns .btn img\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n        margin-left: 10px;\n    }\n\n\n    .make_choise .btns .btn.blue:hover\n    {\n        background: #0025ca;\n    }\n\n    .make_choise .btns .btn.red:hover\n    {\n        background: #cd3939;\n    }\n\n</style>\n","import script from \"./MakeChoice.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MakeChoice.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MakeChoice.vue?vue&type=style&index=0&id=70c9a368&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","const config = {\n    chainId: 'desmos-mainnet',\n    chainName: 'Desmos',\n    rpc: 'https://rpc.mainnet.desmos.network',\n    rest: 'https://api.mainnet.desmos.network',\n    bip44: {\n        coinType: 852,\n    },\n    bech32Config: {\n        bech32PrefixAccAddr: 'desmos',\n        bech32PrefixAccPub: 'desmos' + 'pub',\n        bech32PrefixValAddr: 'desmos' + 'valoper',\n        bech32PrefixValPub: 'desmos' + 'valoperpub',\n        bech32PrefixConsAddr: 'desmos' + 'valcons',\n        bech32PrefixConsPub: 'desmos' + 'valconspub',\n    },\n    currencies: [\n        {\n            coinDenom: 'DSM',\n            coinMinimalDenom: 'udsm',\n            coinDecimals: 6,\n            coinGeckoId: 'cosmos',\n            coinImageUrl: 'https://app.osmosis.zone/tokens/dsm.svg'\n        },\n    ],\n    features: [\n        'stargate',\n        'ibc-transfer',\n        'no-legacy-stdTx',\n        'ibc-go'\n    ],\n    feeCurrencies: [\n        {\n            coinDenom: 'DSM',\n            coinMinimalDenom: 'udsm',\n            coinDecimals: 6,\n            coinGeckoId: 'desmos',\n            gasPriceStep: {\n                low: 0.002,\n                average: 0.025,\n                high: 0.03\n            },\n        },\n    ],\n    stakeCurrency: {\n        coinDenom: 'DSM',\n        coinMinimalDenom: 'udsm',\n        coinDecimals: 6,\n        coinGeckoId: 'desmos',\n    },\n    beta: true\n}\n\nexport default config","const config = {\n    chainId: 'crescent-1',\n    chainName: 'crescent',\n    rpc: 'https://mainnet.crescent.network:26657',\n    rest: 'https://mainnet.crescent.network:1317',\n    bip44: {\n        coinType: 118,\n    },\n    bech32Config: {\n        bech32PrefixAccAddr: 'cre',\n        bech32PrefixAccPub: 'cre' + 'pub',\n        bech32PrefixValAddr: 'cre' + 'valoper',\n        bech32PrefixValPub: 'cre' + 'valoperpub',\n        bech32PrefixConsAddr: 'cre' + 'valcons',\n        bech32PrefixConsPub: 'cre' + 'valconspub',\n    },\n    currencies: [\n        {\n            coinDenom: 'CRE',\n            coinMinimalDenom: 'ucre',\n            coinDecimals: 6,\n            coinGeckoId: 'crescent-network',\n        },\n    ],\n    feeCurrencies: [\n        {\n            coinDenom: 'CRE',\n            coinMinimalDenom: 'ucre',\n            coinDecimals: 6,\n            coinGeckoId: 'crescent-network',\n            gasPriceStep: {\n                low: 0.001,\n                average: 0.025,\n                high: 0.04,\n            },\n        },\n    ],\n    stakeCurrency: {\n        coinDenom: 'CRE',\n        coinMinimalDenom: 'ucre',\n        coinDecimals: 6,\n        coinGeckoId: 'crescent-network',\n    }\n}\n\nexport default config","const config = {\n    chainId: 'omniflixhub-1',\n    chainName: 'omniflixhub',\n    rpc: 'https://omniflixhub-rpc.skynetvalidators.com',\n    rest: 'https://omniflixhub-api.skynetvalidators.com',\n    bip44: {\n        coinType: 118,\n    },\n    bech32Config: {\n        bech32PrefixAccAddr: 'omniflix',\n        bech32PrefixAccPub: 'omniflix' + 'pub',\n        bech32PrefixValAddr: 'omniflix' + 'valoper',\n        bech32PrefixValPub: 'omniflix' + 'valoperpub',\n        bech32PrefixConsAddr: 'omniflix' + 'valcons',\n        bech32PrefixConsPub: 'omniflix' + 'valconspub',\n    },\n    currencies: [\n        {\n            coinDenom: 'FLIX',\n            coinMinimalDenom: 'uflix',\n            coinDecimals: 6,\n            coinGeckoId: 'omniflix-network',\n        },\n    ],\n    feeCurrencies: [\n        {\n            coinDenom: 'FLIX',\n            coinMinimalDenom: 'uflix',\n            coinDecimals: 6,\n            coinGeckoId: 'omniflix-network',\n            gasPriceStep: {\n                low: 0.001,\n                average: 0.025,\n                high: 0.04,\n            },\n        },\n    ],\n    stakeCurrency: {\n        coinDenom: 'FLIX',\n        coinMinimalDenom: 'uflix',\n        coinDecimals: 6,\n        coinGeckoId: 'omniflix-network',\n    }\n}\n\nexport default config","<template>\n    <section class=\"dashboard\">\n        <div class=\"cont\">\n            <div class=\"row\">\n                <!-- Evmos -->\n                <Network network=\"evmos\" />\n\n                <!-- Juno -->\n                <Network network=\"juno\" />\n\n                <!-- Сosmos hub -->\n                <Network network=\"cosmoshub\" />\n\n                <!-- Bostrom -->\n                <Network network=\"bostrom\" />\n            </div>\n\n\n            <div class=\"row\">\n                <!-- E-money -->\n                <Network network=\"emoney\" />\n\n                <!-- Desmos -->\n                <Network network=\"desmos\" />\n\n                <!-- Account -->\n                <Account />\n\n                <!-- Osmosis -->\n                <Network network=\"osmosis\" />\n\n                <!-- Crescent -->\n                <Network network=\"crescent\" />\n            </div>\n\n\n            <div class=\"row\">\n                <!-- Gravity bridge -->\n                <Network network=\"gravity\" />\n\n                <!-- Stargaze -->\n                <Network network=\"stargaze\" />\n\n                <!-- Omniflix hub -->\n                <Network network=\"omniflix\" />\n\n                <!-- Stride -->\n                <Network network=\"stride\" />\n            </div>\n        </div>\n    </section>\n\n    <!-- Make choice modal -->\n    <MakeChoice v-if=\"store.showMakeChoice\" />\n</template>\n\n\n<script setup>\n    import { watchEffect } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { fromBech32, toBech32 } from '@cosmjs/encoding'\n\n    // Components\n    import Network from '../components/Network.vue'\n    import Account from '../components/Account.vue'\n    import MakeChoice from '../components/modal/MakeChoice.vue'\n\n    // Config\n    import desmosConfig from '@/config/chain/desmos'\n    import crescentConfig from '@/config/chain/crescent'\n    import omniflixConfig from '@/config/chain/omniflix'\n\n    const store = useGlobalStore()\n\n\n    watchEffect(async () => {\n        // Get data\n        if(store.connected && store.recalc) {\n            await getData()\n        }\n    })\n\n\n    // Change Keplr account\n    window.addEventListener('keplr_keystorechange', () => {\n        // Get data\n        setTimeout(async () => await getData(), 300)\n    })\n\n\n    // Get data\n    async function getData() {\n        // Get currencies price\n        let promiseCurrencies = await store.getCurrenciesPrice()\n\n\n        //======== Evmos\n        try{\n            // Singer\n            const offlineSignerEvmos = await window.getOfflineSigner(store.networks.evmos.chainId),\n                accountsEvmos = await offlineSignerEvmos.getAccounts()\n\n            // Set wallet address\n            store.setWallet('evmos', accountsEvmos[0].address)\n\n            // Get status\n            store.getNetworkStatus('evmos')\n\n            // Get network tokens\n            store.getNetworkTokens('evmos').then(() => {\n                // Calc network tokens sum\n                store.calcNetworkTokensSum('evmos')\n\n                if(store.networks.evmos.status){\n                    // Get network data\n                    let promiseData = store.getNetworkData('evmos')\n\n                    Promise.all([promiseData, promiseCurrencies]).then(() => {\n                        // Calc network RPDE\n                        store.calcNetworkRPDEInCurrency('evmos')\n\n                        // Calc network balance\n                        store.calcNetworkBalance('evmos')\n\n                        // Calc delegations price\n                        store.calcDelegationsPrice('evmos')\n\n                        // Calc rewards price\n                        store.calcRewardsPrice('evmos')\n\n                        // Update account balance\n                        store.updateAccountBalance()\n                    })\n                }\n            })\n        } catch(error) {\n            console.log(error)\n        }\n\n\n        //======== JUNO\n        // Set wallet address\n        store.setWallet('juno', toBech32('juno', fromBech32(store.wallets.cosmoshub).data))\n\n        // Get status\n        store.getNetworkStatus('juno')\n\n        // Get network tokens\n        store.getNetworkTokens('juno').then(() => {\n            // Calc network tokens sum\n            store.calcNetworkTokensSum('juno')\n\n            if(store.networks.juno.status){\n                // Get network data\n                let junoData = store.getNetworkData('juno')\n\n                Promise.all([junoData, promiseCurrencies]).then(() => {\n                    // Calc network RPDE\n                    store.calcNetworkRPDEInCurrency('juno')\n\n                    // Calc network balance\n                    store.calcNetworkBalance('juno')\n\n                    // Calc delegations price\n                    store.calcDelegationsPrice('juno')\n\n                    // Calc rewards price\n                    store.calcRewardsPrice('juno')\n\n                    // Update account balance\n                    store.updateAccountBalance()\n                })\n            }\n        })\n\n\n        //======== Cosmos hub\n        // Get status\n        store.getNetworkStatus('cosmoshub')\n\n        // Get network tokens\n        store.getNetworkTokens('cosmoshub').then(() => {\n            // Calc network tokens sum\n            store.calcNetworkTokensSum('cosmoshub')\n\n            if(store.networks.cosmoshub.status){\n                // Get network data\n                let cosmoshubData = store.getNetworkData('cosmoshub')\n\n                Promise.all([cosmoshubData, promiseCurrencies]).then(() => {\n                    // Calc network RPDE\n                    store.calcNetworkRPDEInCurrency('cosmoshub')\n\n                    // Calc network balance\n                    store.calcNetworkBalance('cosmoshub')\n\n                    // Calc delegations price\n                    store.calcDelegationsPrice('cosmoshub')\n\n                    // Calc rewards price\n                    store.calcRewardsPrice('cosmoshub')\n\n                    // Update account balance\n                    store.updateAccountBalance()\n                })\n            }\n        })\n\n\n        //======== Bostrom\n        // Get status\n        store.getNetworkStatus('bostrom')\n\n        // Connect to network websocket\n        // store.connectNetworkWebsocket('bostrom')\n\n        // store.networks.bostrom.websocket.onopen = () => {\n        //     store.networks.bostrom.websocket.send(JSON.stringify({ \"jsonrpc\": \"2.0\", \"method\": \"subscribe\", \"params\": [\"tm.event = 'Tx'\"], \"id\": 0 }))\n        // }\n\n        // Get network tokens\n        store.getNetworkTokens('bostrom').then(() => {\n            // Calc network tokens sum\n            store.calcNetworkTokensSum('bostrom')\n\n            if(store.networks.bostrom.status){\n                // Get network data\n                let bostromData = store.getNetworkData('bostrom')\n\n                Promise.all([bostromData, promiseCurrencies]).then(() => {\n                    // Calc network RPDE\n                    store.calcNetworkRPDEInCurrency('bostrom')\n\n                    // Calc network balance\n                    store.calcNetworkBalance('bostrom')\n\n                    // Calc delegations price\n                    store.calcDelegationsPrice('bostrom')\n\n                    // Calc rewards price\n                    store.calcRewardsPrice('bostrom')\n\n                    // Update account balance\n                    store.updateAccountBalance()\n                })\n            }\n        })\n\n\n        //======== Osmosis\n        // Set wallet address\n        store.setWallet('osmosis', toBech32('osmo', fromBech32(store.wallets.cosmoshub).data))\n\n        // Get status\n        store.getNetworkStatus('osmosis')\n\n        // Get network tokens\n        store.getNetworkTokens('osmosis').then(() => {\n            // Calc network tokens sum\n            store.calcNetworkTokensSum('osmosis')\n\n            if(store.networks.emoney.status){\n                // Get network data\n                let osmosisData = store.getNetworkData('osmosis')\n\n                Promise.all([osmosisData, promiseCurrencies]).then(() => {\n                    // Calc network RPDE\n                    store.calcNetworkRPDEInCurrency('osmosis')\n\n                    // Calc network balance\n                    store.calcNetworkBalance('osmosis')\n\n                    // Calc delegations price\n                    store.calcDelegationsPrice('osmosis')\n\n                    // Calc rewards price\n                    store.calcRewardsPrice('osmosis')\n\n                    // Update account balance\n                    store.updateAccountBalance()\n                })\n            }\n        })\n\n\n        //======== E-money\n        // Set wallet address\n        store.setWallet('emoney', toBech32('emoney', fromBech32(store.wallets.cosmoshub).data))\n\n        // Get status\n        store.getNetworkStatus('emoney')\n\n        // Get network tokens\n        store.getNetworkTokens('emoney').then(() => {\n            // Calc network tokens sum\n            store.calcNetworkTokensSum('emoney')\n\n            if(store.networks.emoney.status){\n                // Get network data\n                let emoneyData = store.getNetworkData('emoney')\n\n                Promise.all([emoneyData, promiseCurrencies]).then(() => {\n                    // Calc network RPDE\n                    store.calcNetworkRPDEInCurrency('emoney')\n\n                    // Calc network balance\n                    store.calcNetworkBalance('emoney')\n\n                    // Calc delegations price\n                    store.calcDelegationsPrice('emoney')\n\n                    // Calc rewards price\n                    store.calcRewardsPrice('emoney')\n\n                    // Update account balance\n                    store.updateAccountBalance()\n                })\n            }\n        })\n\n\n        //======== Gravity bridge\n        // Set wallet address\n        store.setWallet('gravity', toBech32('gravity', fromBech32(store.wallets.cosmoshub).data))\n\n        // Get status\n        store.getNetworkStatus('gravity')\n\n        // Get network tokens\n        store.getNetworkTokens('gravity').then(() => {\n            // Calc network tokens sum\n            store.calcNetworkTokensSum('gravity')\n\n            if(store.networks.gravity.status){\n                // Get network data\n                let gravityData = store.getNetworkData('gravity')\n\n                Promise.all([gravityData, promiseCurrencies]).then(() => {\n                    // Calc network RPDE\n                    store.calcNetworkRPDEInCurrency('gravity')\n\n                    // Calc network balance\n                    store.calcNetworkBalance('gravity')\n\n                    // Calc delegations price\n                    store.calcDelegationsPrice('gravity')\n\n                    // Calc rewards price\n                    store.calcRewardsPrice('gravity')\n\n                    // Update account balance\n                    store.updateAccountBalance()\n                })\n            }\n        })\n\n\n        //======== Stargaze\n        // Set wallet address\n        store.setWallet('stargaze', toBech32('stars', fromBech32(store.wallets.cosmoshub).data))\n\n        // Get status\n        store.getNetworkStatus('stargaze')\n\n        // Get network tokens\n        store.getNetworkTokens('stargaze').then(() => {\n            // Calc network tokens sum\n            store.calcNetworkTokensSum('stargaze')\n\n            if(store.networks.stargaze.status){\n                // Get network data\n                let stargazeData = store.getNetworkData('stargaze')\n\n                Promise.all([stargazeData, promiseCurrencies]).then(() => {\n                    // Calc network RPDE\n                    store.calcNetworkRPDEInCurrency('stargaze')\n\n                    // Calc network balance\n                    store.calcNetworkBalance('stargaze')\n\n                    // Calc delegations price\n                    store.calcDelegationsPrice('stargaze')\n\n                    // Calc rewards price\n                    store.calcRewardsPrice('stargaze')\n\n                    // Update account balance\n                    store.updateAccountBalance()\n                })\n            }\n        })\n\n\n        //======== Stride\n        // Set wallet address\n        store.setWallet('stride', toBech32('stride', fromBech32(store.wallets.cosmoshub).data))\n\n        // Get status\n        store.getNetworkStatus('stride')\n\n        // Get network tokens\n        store.getNetworkTokens('stride').then(() => {\n            // Calc network tokens sum\n            store.calcNetworkTokensSum('stride')\n\n            if(store.networks.stride.status){\n                // Get network data\n                let strideData = store.getNetworkData('stride')\n\n                Promise.all([strideData, promiseCurrencies]).then(() => {\n                    // Calc network RPDE\n                    store.calcNetworkRPDEInCurrency('stride')\n\n                    // Calc network balance\n                    store.calcNetworkBalance('stride')\n\n                    // Calc delegations price\n                    store.calcDelegationsPrice('stride')\n\n                    // Calc rewards price\n                    store.calcRewardsPrice('stride')\n\n                    // Update account balance\n                    store.updateAccountBalance()\n                })\n            }\n        })\n\n\n        const checkChains = [\n            {\n                chainId: 'desmos-mainnet',\n                name: 'desmos',\n                config: desmosConfig\n            },\n            {\n                chainId: 'crescent-1',\n                name: 'crescent',\n                config: crescentConfig\n            },\n            {\n                chainId: 'omniflixhub-1',\n                name: 'omniflix',\n                config: omniflixConfig\n            }\n        ]\n\n        var accountsDesmos = {}\n\n\n        // Check chains in Keplr\n        for (let i in checkChains) {\n            try{\n                let offlineSigner = await window.getOfflineSignerAuto(checkChains[i].chainId),\n                    accounts = await offlineSigner.getAccounts()\n\n                if(checkChains[i].chainId == 'desmos-mainnet'){\n                    accountsDesmos = accounts\n                }\n            } catch (error) {\n                console.log(error)\n\n                // Add chain in Keplr\n                await window.keplr.experimentalSuggestChain(checkChains[i].config).then(() => store.updateNetwork(checkChains[i].name))\n            }\n        }\n\n\n        // ======== Desmos\n        // Set wallet address\n        store.setWallet('desmos', accountsDesmos[0].address)\n\n        // Get status\n        store.getNetworkStatus('desmos')\n\n        // Get network tokens\n        store.getNetworkTokens('desmos').then(() => {\n            // Calc network tokens sum\n            store.calcNetworkTokensSum('desmos')\n\n            if(store.networks.desmos.status){\n                // Get network data\n                let desmosData = store.getNetworkData('desmos')\n\n                Promise.all([desmosData, promiseCurrencies]).then(() => {\n                    // Calc network RPDE\n                    store.calcNetworkRPDEInCurrency('desmos')\n\n                    // Calc network balance\n                    store.calcNetworkBalance('desmos')\n\n                    // Calc delegations price\n                    store.calcDelegationsPrice('desmos')\n\n                    // Calc rewards price\n                    store.calcRewardsPrice('desmos')\n\n                    // Update account balance\n                    store.updateAccountBalance()\n                })\n            }\n        })\n\n\n        //======== Crescent hub\n        // Set wallet address\n        store.setWallet('crescent', toBech32('cre', fromBech32(store.wallets.cosmoshub).data))\n\n        // Get status\n        store.getNetworkStatus('crescent')\n\n        // Get network tokens\n        store.getNetworkTokens('crescent').then(() => {\n            // Calc network tokens sum\n            store.calcNetworkTokensSum('crescent')\n\n            if(store.networks.crescent.status){\n                // Get network data\n                let crescentData = store.getNetworkData('crescent')\n\n                Promise.all([crescentData, promiseCurrencies]).then(() => {\n                    // Calc network RPDE\n                    store.calcNetworkRPDEInCurrency('crescent')\n\n                    // Calc network balance\n                    store.calcNetworkBalance('crescent')\n\n                    // Calc delegations price\n                    store.calcDelegationsPrice('crescent')\n\n                    // Calc rewards price\n                    store.calcRewardsPrice('crescent')\n\n                    // Update account balance\n                    store.updateAccountBalance()\n                })\n            }\n        })\n\n\n        //======== Omniflix hub\n        // Set wallet address\n        store.setWallet('omniflix', toBech32('omniflix', fromBech32(store.wallets.cosmoshub).data))\n\n        // Get status\n        store.getNetworkStatus('omniflix')\n\n        // Get network tokens\n        store.getNetworkTokens('omniflix').then(() => {\n            // Calc network tokens sum\n            store.calcNetworkTokensSum('omniflix')\n\n            if(store.networks.omniflix.status){\n                // Get network data\n                let omniflixData = store.getNetworkData('omniflix')\n\n                Promise.all([omniflixData, promiseCurrencies]).then(() => {\n                    // Calc network RPDE\n                    store.calcNetworkRPDEInCurrency('omniflix')\n\n                    // Calc network balance\n                    store.calcNetworkBalance('omniflix')\n\n                    // Calc delegations price\n                    store.calcDelegationsPrice('omniflix')\n\n                    // Calc rewards price\n                    store.calcRewardsPrice('omniflix')\n\n                    // Update account balance\n                    store.updateAccountBalance()\n                })\n            }\n        })\n\n\n        // Open manage modal from url\n        if (store.networkManageModal) {\n            emitter.emit('open_manage_modal')\n        }\n    }\n</script>\n\n\n<style>\n    .dashboard\n    {\n        padding-bottom: 24px;\n    }\n\n\n    .dashboard .row\n    {\n        margin-bottom: -7px;\n        margin-left: -7px;\n\n        justify-content: center;\n    }\n\n    .dashboard .row + .row\n    {\n        margin-top: -82px;\n    }\n</style>\n","import script from \"./Dashboard.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Dashboard.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Dashboard.vue?vue&type=style&index=0&id=757ccb0c&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["store","useGlobalStore","emitter","inject","__exports__","close","showMakeChoice","config","chainId","chainName","rpc","rest","bip44","coinType","bech32Config","bech32PrefixAccAddr","bech32PrefixAccPub","bech32PrefixValAddr","bech32PrefixValPub","bech32PrefixConsAddr","bech32PrefixConsPub","currencies","coinDenom","coinMinimalDenom","coinDecimals","coinGeckoId","coinImageUrl","features","feeCurrencies","gasPriceStep","low","average","high","stakeCurrency","beta","async","getData","promiseCurrencies","getCurrenciesPrice","offlineSignerEvmos","window","getOfflineSigner","networks","evmos","accountsEvmos","getAccounts","setWallet","address","getNetworkStatus","getNetworkTokens","then","calcNetworkTokensSum","status","promiseData","getNetworkData","Promise","all","calcNetworkRPDEInCurrency","calcNetworkBalance","calcDelegationsPrice","calcRewardsPrice","updateAccountBalance","error","console","log","toBech32","fromBech32","wallets","cosmoshub","data","juno","junoData","cosmoshubData","bostrom","bostromData","emoney","osmosisData","emoneyData","gravity","gravityData","stargaze","stargazeData","stride","strideData","checkChains","name","desmosConfig","crescentConfig","omniflixConfig","accountsDesmos","i","offlineSigner","getOfflineSignerAuto","accounts","keplr","experimentalSuggestChain","updateNetwork","desmos","desmosData","crescent","crescentData","omniflix","omniflixData","networkManageModal","emit","watchEffect","connected","recalc","addEventListener","setTimeout"],"sourceRoot":""}