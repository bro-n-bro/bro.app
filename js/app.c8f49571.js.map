{"version":3,"file":"js/app.c8f49571.js","mappings":"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","sources":["webpack://bro_app/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://bro_app/./src/components/MobilePlug.vue","webpack://bro_app/./src/components/MobilePlug.vue?80ac","webpack://bro_app/./src/App.vue","webpack://bro_app/./src/App.vue?7ccd","webpack://bro_app/./src/components/Notifications.vue","webpack://bro_app/./src/components/Notifications.vue?e79f","webpack://bro_app/./src/components/header/IPFS.vue","webpack://bro_app/./src/components/header/IPFS.vue?b5b7","webpack://bro_app/./src/components/header/Currency.vue","webpack://bro_app/./src/components/header/Currency.vue?b6f3","webpack://bro_app/./src/components/header/User.vue","webpack://bro_app/./src/components/header/User.vue?d5e2","webpack://bro_app/./src/components/header/ConnectBtn.vue","webpack://bro_app/./src/components/header/ConnectBtn.vue?8a43","webpack://bro_app/./src/components/Header.vue","webpack://bro_app/./src/components/Header.vue?801b","webpack://bro_app/./src/components/Feedback.vue","webpack://bro_app/./src/components/Feedback.vue?d20b","webpack://bro_app/./src/layouts/Error.vue","webpack://bro_app/./src/components/modal/ManageModalValidator.vue","webpack://bro_app/./src/components/modal/ManageModalDelegate.vue","webpack://bro_app/./src/components/modal/ManageModalDelegate.vue?7f5b","webpack://bro_app/./src/components/modal/ManageModalRedelegate.vue","webpack://bro_app/./src/components/modal/ManageModalRedelegate.vue?9eac","webpack://bro_app/./src/components/modal/ManageModalClaim.vue","webpack://bro_app/./src/components/modal/ManageModalClaim.vue?6338","webpack://bro_app/./src/components/modal/ManageModalRestake.vue","webpack://bro_app/./src/components/modal/ManageModalRestake.vue?dddc","webpack://bro_app/./src/components/modal/ManageModal.vue","webpack://bro_app/./src/components/modal/ManageModal.vue?c23b","webpack://bro_app/./src/components/Footer.vue","webpack://bro_app/./src/components/Footer.vue?7cca","webpack://bro_app/./src/layouts/Default.vue","webpack://bro_app/./src/layouts/Default.vue?3951","webpack://bro_app/./src/router/index.js","webpack://bro_app/./src/locale/messages.js","webpack://bro_app/./src/locale/index.js","webpack://bro_app/./src/main.js","webpack://bro_app/./src/stores/account.js","webpack://bro_app/./src/stores/networks/evmos.js","webpack://bro_app/./src/stores/networks/cosmoshub.js","webpack://bro_app/./src/stores/networks/bostrom.js","webpack://bro_app/./src/stores/networks/osmosis.js","webpack://bro_app/./src/stores/networks/juno.js","webpack://bro_app/./src/stores/networks/emoney.js","webpack://bro_app/./src/stores/networks/stargaze.js","webpack://bro_app/./src/stores/networks/gravity.js","webpack://bro_app/./src/stores/networks/crescent.js","webpack://bro_app/./src/stores/networks/omniflix.js","webpack://bro_app/./src/stores/networks/desmos.js","webpack://bro_app/./src/stores/networks/stride.js","webpack://bro_app/./src/config/chain/desmos.js","webpack://bro_app/./src/config/chain/crescent.js","webpack://bro_app/./src/config/chain/omniflix.js","webpack://bro_app/./src/stores/index.js","webpack://bro_app/./src/utils/index.js","webpack://bro_app/webpack/bootstrap","webpack://bro_app/webpack/runtime/chunk loaded","webpack://bro_app/webpack/runtime/compat get default export","webpack://bro_app/webpack/runtime/create fake namespace object","webpack://bro_app/webpack/runtime/define property getters","webpack://bro_app/webpack/runtime/ensure chunk","webpack://bro_app/webpack/runtime/get javascript chunk filename","webpack://bro_app/webpack/runtime/get mini-css chunk filename","webpack://bro_app/webpack/runtime/global","webpack://bro_app/webpack/runtime/hasOwnProperty shorthand","webpack://bro_app/webpack/runtime/load script","webpack://bro_app/webpack/runtime/make namespace object","webpack://bro_app/webpack/runtime/node module decorator","webpack://bro_app/webpack/runtime/publicPath","webpack://bro_app/webpack/runtime/css loading","webpack://bro_app/webpack/runtime/jsonp chunk loading","webpack://bro_app/webpack/startup"],"sourcesContent":["var map = {\n\t\"./af\": 63906,\n\t\"./af.js\": 63906,\n\t\"./ar\": 40902,\n\t\"./ar-dz\": 3853,\n\t\"./ar-dz.js\": 3853,\n\t\"./ar-kw\": 20299,\n\t\"./ar-kw.js\": 20299,\n\t\"./ar-ly\": 96825,\n\t\"./ar-ly.js\": 96825,\n\t\"./ar-ma\": 66379,\n\t\"./ar-ma.js\": 66379,\n\t\"./ar-sa\": 87700,\n\t\"./ar-sa.js\": 87700,\n\t\"./ar-tn\": 2059,\n\t\"./ar-tn.js\": 2059,\n\t\"./ar.js\": 40902,\n\t\"./az\": 76043,\n\t\"./az.js\": 76043,\n\t\"./be\": 7936,\n\t\"./be.js\": 7936,\n\t\"./bg\": 34078,\n\t\"./bg.js\": 34078,\n\t\"./bm\": 14014,\n\t\"./bm.js\": 14014,\n\t\"./bn\": 29554,\n\t\"./bn-bd\": 17114,\n\t\"./bn-bd.js\": 17114,\n\t\"./bn.js\": 29554,\n\t\"./bo\": 6529,\n\t\"./bo.js\": 6529,\n\t\"./br\": 65437,\n\t\"./br.js\": 65437,\n\t\"./bs\": 19647,\n\t\"./bs.js\": 19647,\n\t\"./ca\": 59951,\n\t\"./ca.js\": 59951,\n\t\"./cs\": 26113,\n\t\"./cs.js\": 26113,\n\t\"./cv\": 37965,\n\t\"./cv.js\": 37965,\n\t\"./cy\": 35858,\n\t\"./cy.js\": 35858,\n\t\"./da\": 33515,\n\t\"./da.js\": 33515,\n\t\"./de\": 62831,\n\t\"./de-at\": 6263,\n\t\"./de-at.js\": 6263,\n\t\"./de-ch\": 51127,\n\t\"./de-ch.js\": 51127,\n\t\"./de.js\": 62831,\n\t\"./dv\": 4510,\n\t\"./dv.js\": 4510,\n\t\"./el\": 68616,\n\t\"./el.js\": 68616,\n\t\"./en-au\": 24595,\n\t\"./en-au.js\": 24595,\n\t\"./en-ca\": 73545,\n\t\"./en-ca.js\": 73545,\n\t\"./en-gb\": 79609,\n\t\"./en-gb.js\": 79609,\n\t\"./en-ie\": 43727,\n\t\"./en-ie.js\": 43727,\n\t\"./en-il\": 93302,\n\t\"./en-il.js\": 93302,\n\t\"./en-in\": 46305,\n\t\"./en-in.js\": 46305,\n\t\"./en-nz\": 39128,\n\t\"./en-nz.js\": 39128,\n\t\"./en-sg\": 84569,\n\t\"./en-sg.js\": 84569,\n\t\"./eo\": 50650,\n\t\"./eo.js\": 50650,\n\t\"./es\": 26358,\n\t\"./es-do\": 64214,\n\t\"./es-do.js\": 64214,\n\t\"./es-mx\": 38639,\n\t\"./es-mx.js\": 38639,\n\t\"./es-us\": 30232,\n\t\"./es-us.js\": 30232,\n\t\"./es.js\": 26358,\n\t\"./et\": 47279,\n\t\"./et.js\": 47279,\n\t\"./eu\": 15515,\n\t\"./eu.js\": 15515,\n\t\"./fa\": 27981,\n\t\"./fa.js\": 27981,\n\t\"./fi\": 37090,\n\t\"./fi.js\": 37090,\n\t\"./fil\": 79208,\n\t\"./fil.js\": 79208,\n\t\"./fo\": 2799,\n\t\"./fo.js\": 2799,\n\t\"./fr\": 23463,\n\t\"./fr-ca\": 2213,\n\t\"./fr-ca.js\": 2213,\n\t\"./fr-ch\": 52848,\n\t\"./fr-ch.js\": 52848,\n\t\"./fr.js\": 23463,\n\t\"./fy\": 41468,\n\t\"./fy.js\": 41468,\n\t\"./ga\": 88163,\n\t\"./ga.js\": 88163,\n\t\"./gd\": 2898,\n\t\"./gd.js\": 2898,\n\t\"./gl\": 76312,\n\t\"./gl.js\": 76312,\n\t\"./gom-deva\": 20682,\n\t\"./gom-deva.js\": 20682,\n\t\"./gom-latn\": 49178,\n\t\"./gom-latn.js\": 49178,\n\t\"./gu\": 31400,\n\t\"./gu.js\": 31400,\n\t\"./he\": 52795,\n\t\"./he.js\": 52795,\n\t\"./hi\": 17009,\n\t\"./hi.js\": 17009,\n\t\"./hr\": 46506,\n\t\"./hr.js\": 46506,\n\t\"./hu\": 69565,\n\t\"./hu.js\": 69565,\n\t\"./hy-am\": 29215,\n\t\"./hy-am.js\": 29215,\n\t\"./id\": 5626,\n\t\"./id.js\": 5626,\n\t\"./is\": 36649,\n\t\"./is.js\": 36649,\n\t\"./it\": 90151,\n\t\"./it-ch\": 95348,\n\t\"./it-ch.js\": 95348,\n\t\"./it.js\": 90151,\n\t\"./ja\": 79830,\n\t\"./ja.js\": 79830,\n\t\"./jv\": 33751,\n\t\"./jv.js\": 33751,\n\t\"./ka\": 63365,\n\t\"./ka.js\": 63365,\n\t\"./kk\": 85980,\n\t\"./kk.js\": 85980,\n\t\"./km\": 99571,\n\t\"./km.js\": 99571,\n\t\"./kn\": 25880,\n\t\"./kn.js\": 25880,\n\t\"./ko\": 16809,\n\t\"./ko.js\": 16809,\n\t\"./ku\": 96773,\n\t\"./ku.js\": 96773,\n\t\"./ky\": 65505,\n\t\"./ky.js\": 65505,\n\t\"./lb\": 50553,\n\t\"./lb.js\": 50553,\n\t\"./lo\": 51237,\n\t\"./lo.js\": 51237,\n\t\"./lt\": 91563,\n\t\"./lt.js\": 91563,\n\t\"./lv\": 61057,\n\t\"./lv.js\": 61057,\n\t\"./me\": 96495,\n\t\"./me.js\": 96495,\n\t\"./mi\": 83096,\n\t\"./mi.js\": 83096,\n\t\"./mk\": 43874,\n\t\"./mk.js\": 43874,\n\t\"./ml\": 46055,\n\t\"./ml.js\": 46055,\n\t\"./mn\": 87747,\n\t\"./mn.js\": 87747,\n\t\"./mr\": 17113,\n\t\"./mr.js\": 17113,\n\t\"./ms\": 8687,\n\t\"./ms-my\": 7948,\n\t\"./ms-my.js\": 7948,\n\t\"./ms.js\": 8687,\n\t\"./mt\": 14532,\n\t\"./mt.js\": 14532,\n\t\"./my\": 4655,\n\t\"./my.js\": 4655,\n\t\"./nb\": 56961,\n\t\"./nb.js\": 56961,\n\t\"./ne\": 2512,\n\t\"./ne.js\": 2512,\n\t\"./nl\": 90742,\n\t\"./nl-be\": 72936,\n\t\"./nl-be.js\": 72936,\n\t\"./nl.js\": 90742,\n\t\"./nn\": 49031,\n\t\"./nn.js\": 49031,\n\t\"./oc-lnc\": 5174,\n\t\"./oc-lnc.js\": 5174,\n\t\"./pa-in\": 30118,\n\t\"./pa-in.js\": 30118,\n\t\"./pl\": 93448,\n\t\"./pl.js\": 93448,\n\t\"./pt\": 33518,\n\t\"./pt-br\": 62447,\n\t\"./pt-br.js\": 62447,\n\t\"./pt.js\": 33518,\n\t\"./ro\": 70817,\n\t\"./ro.js\": 70817,\n\t\"./ru\": 10262,\n\t\"./ru.js\": 10262,\n\t\"./sd\": 58990,\n\t\"./sd.js\": 58990,\n\t\"./se\": 43842,\n\t\"./se.js\": 43842,\n\t\"./si\": 37711,\n\t\"./si.js\": 37711,\n\t\"./sk\": 80756,\n\t\"./sk.js\": 80756,\n\t\"./sl\": 3772,\n\t\"./sl.js\": 3772,\n\t\"./sq\": 6187,\n\t\"./sq.js\": 6187,\n\t\"./sr\": 40732,\n\t\"./sr-cyrl\": 75713,\n\t\"./sr-cyrl.js\": 75713,\n\t\"./sr.js\": 40732,\n\t\"./ss\": 99455,\n\t\"./ss.js\": 99455,\n\t\"./sv\": 69770,\n\t\"./sv.js\": 69770,\n\t\"./sw\": 80959,\n\t\"./sw.js\": 80959,\n\t\"./ta\": 36459,\n\t\"./ta.js\": 36459,\n\t\"./te\": 25302,\n\t\"./te.js\": 25302,\n\t\"./tet\": 67975,\n\t\"./tet.js\": 67975,\n\t\"./tg\": 71294,\n\t\"./tg.js\": 71294,\n\t\"./th\": 2385,\n\t\"./th.js\": 2385,\n\t\"./tk\": 24613,\n\t\"./tk.js\": 24613,\n\t\"./tl-ph\": 58668,\n\t\"./tl-ph.js\": 58668,\n\t\"./tlh\": 58190,\n\t\"./tlh.js\": 58190,\n\t\"./tr\": 74506,\n\t\"./tr.js\": 74506,\n\t\"./tzl\": 63440,\n\t\"./tzl.js\": 63440,\n\t\"./tzm\": 69852,\n\t\"./tzm-latn\": 42350,\n\t\"./tzm-latn.js\": 42350,\n\t\"./tzm.js\": 69852,\n\t\"./ug-cn\": 70730,\n\t\"./ug-cn.js\": 70730,\n\t\"./uk\": 40099,\n\t\"./uk.js\": 40099,\n\t\"./ur\": 72100,\n\t\"./ur.js\": 72100,\n\t\"./uz\": 96002,\n\t\"./uz-latn\": 53974,\n\t\"./uz-latn.js\": 53974,\n\t\"./uz.js\": 96002,\n\t\"./vi\": 14207,\n\t\"./vi.js\": 14207,\n\t\"./x-pseudo\": 24674,\n\t\"./x-pseudo.js\": 24674,\n\t\"./yo\": 10570,\n\t\"./yo.js\": 10570,\n\t\"./zh-cn\": 73644,\n\t\"./zh-cn.js\": 73644,\n\t\"./zh-hk\": 22591,\n\t\"./zh-hk.js\": 22591,\n\t\"./zh-mo\": 89503,\n\t\"./zh-mo.js\": 89503,\n\t\"./zh-tw\": 88080,\n\t\"./zh-tw.js\": 88080\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","<template>\n    <div class=\"mobile_plug\">\n        <div class=\"image\">\n            <img src=\"/mobile_plug_img.svg\" alt=\"\">\n        </div>\n\n        <div class=\"title\">{{ $t('message.mobile_plug_title') }}</div>\n\n        <div class=\"desc\">{{ $t('message.mobile_plug_desc') }}</div>\n    </div>\n</template>\n\n\n<style scope>\n    .mobile_plug\n    {\n        color: #f2f2f2;\n        line-height: 19px;\n\n        display: flex;\n\n        text-align: center;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n        flex: 1 0 auto;\n    }\n\n\n    .mobile_plug .image\n    {\n        width: 100%;\n        margin-bottom: 16px;\n    }\n\n    .mobile_plug .image img\n    {\n        display: block;\n\n        max-width: 100%;\n        max-height: 100%;\n        margin-right: auto;\n        margin-left: auto;\n    }\n\n\n    .mobile_plug .title\n    {\n        font-size: 36px;\n        font-weight: 600;\n        line-height: 90%;\n\n        width: 100%;\n\n        letter-spacing: -.02em;\n        text-transform: uppercase;\n    }\n\n\n    .mobile_plug .desc\n    {\n        width: 100%;\n        margin-top: 16px;\n    }\n\n</style>","import { render } from \"./MobilePlug.vue?vue&type=template&id=8188557a\"\nconst script = {}\n\nimport \"./MobilePlug.vue?vue&type=style&index=0&id=8188557a&scope=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <MobilePlug v-if=\"WW < 1280\" />\n\n    <template v-else>\n    <div class=\"loader_wrap\" v-if=\"!store.appLoaded\">\n        <div class=\"loader\"><span></span></div>\n    </div>\n\n    <component :is=\"layout\" v-else />\n\n    <notifications width=\"280px\" v-for=\"(network, index) in store.networks\" :key=\"index\" :group=\"network.denom\">\n        <template #body=\"props\">\n            <div class=\"notification\">\n                <div class=\"icon green\" v-if=\"props.item.type == 'success'\">\n                    <svg><use xlink:href=\"/sprite.svg#ic_notification_success\"></use></svg>\n                </div>\n\n                <div class=\"icon red\" v-if=\"props.item.type == 'error'\">\n                    <svg><use xlink:href=\"/sprite.svg#ic_notification_error\"></use></svg>\n                </div>\n\n                <div class=\"icon\" v-if=\"!props.item.type\">\n                    <svg><use xlink:href=\"/sprite.svg#ic_notification_progress\"></use></svg>\n                </div>\n\n                <div v-if=\"props.item.data.chain && props.item.data.tx_type\">\n                    <div class=\"chain\">{{ props.item.data.chain }}</div>\n                    <div class=\"tx_type\">{{ props.item.data.tx_type }}</div>\n                </div>\n\n                <div class=\"title\">{{ props.item.title }}</div>\n\n                <div class=\"text\" v-html=\"props.item.text\" v-if=\"props.item.text\"></div>\n\n                <div class=\"explorer\" v-if=\"props.item.data.tx_hash\">\n                    <template v-if=\"store.networkManageModal == 'cosmoshub'\">\n                    <a :href=\"`https://www.mintscan.io/cosmos/txs/${props.item.data.tx_hash}`\" target=\"_blank\" rel=\"noopener nofollow\">\n                        <span>{{ $t('message.notification_explorer_link') }}</span>\n                        <svg><use xlink:href=\"/sprite.svg#ic_link_arrow\"></use></svg>\n                    </a>\n                    </template>\n\n                    <template v-else-if=\"store.networkManageModal == 'gravity'\">\n                    <a :href=\"`https://www.mintscan.io/gravity-bridge/txs/${props.item.data.tx_hash}`\" target=\"_blank\" rel=\"noopener nofollow\">\n                        <span>{{ $t('message.notification_explorer_link') }}</span>\n                        <svg><use xlink:href=\"/sprite.svg#ic_link_arrow\"></use></svg>\n                    </a>\n                    </template>\n\n                    <template v-else>\n                    <a :href=\"`https://www.mintscan.io/${store.networkManageModal}/txs/${props.item.data.tx_hash}`\" target=\"_blank\" rel=\"noopener nofollow\">\n                        <span>{{ $t('message.notification_explorer_link') }}</span>\n                        <svg><use xlink:href=\"/sprite.svg#ic_link_arrow\"></use></svg>\n                    </a>\n                    </template>\n                </div>\n            </div>\n        </template>\n    </notifications>\n\n\n    <notifications width=\"280px\" group=\"default\">\n        <template #body=\"props\">\n            <div class=\"notification\">\n                <div class=\"icon green\" v-if=\"props.item.type == 'success'\">\n                    <svg><use xlink:href=\"/sprite.svg#ic_notification_success\"></use></svg>\n                </div>\n\n                <div class=\"icon red\" v-if=\"props.item.type == 'error'\">\n                    <svg><use xlink:href=\"/sprite.svg#ic_notification_error\"></use></svg>\n                </div>\n\n                <div class=\"icon\" v-if=\"!props.item.type\">\n                    <svg><use xlink:href=\"/sprite.svg#ic_notification_progress\"></use></svg>\n                </div>\n\n                <div class=\"title\">{{ props.item.title }}</div>\n\n                <div class=\"text\" v-html=\"props.item.text\" v-if=\"props.item.text\"></div>\n            </div>\n        </template>\n    </notifications>\n    </template>\n</template>\n\n\n<script setup>\n    import { computed, onBeforeMount, inject, ref } from 'vue'\n    import { useRoute } from 'vue-router'\n    import { useGlobalStore } from '@/stores'\n\n    // Components\n    import MobilePlug from '@/components/MobilePlug.vue'\n\n\n    const route = useRoute(),\n        layout = computed(() => route.meta.layout || 'default-layout'),\n        store = useGlobalStore(),\n        i18n = inject('i18n'),\n        emitter = inject('emitter')\n\n    let WW = ref(window.innerWidth)\n\n\n    onBeforeMount(() => {\n        // Set title\n        document.title = i18n.global.t('message.page_title')\n\n        // Window resize\n        window.addEventListener('resize', () => WW.value = window.innerWidth)\n    })\n\n\n    // Event \"connect wallet\"\n    emitter.on('connectWallet', async () => await store.connectWallet())\n\n\n    // Event \"set notification\"\n    emitter.on('setNotification', notice => store.tooltip = notice)\n\n\n    // Event \"open manage modal\"\n    emitter.on('openManageModal', async function(modal_data = { network: store.networkManageModal }) {\n        await fetch(`${store.networks[modal_data.network].lcd_api}/cosmos/staking/v1beta1/params`)\n            .then(response => response.json())\n            .then(data => {\n                store.showManageModal = true,\n                store.manageModalNetwork = modal_data.network,\n                store.validatorManageModal = modal_data.validator,\n                store.networks[modal_data.network].unbonding_time = parseInt(data.params.unbonding_time)\n\n                document.body.classList.add('lock')\n            })\n    })\n\n\n    // Event \"close manage modal\"\n    emitter.on('closeManageModal', function() {\n        store.showManageModal = false\n        state.networkManageModal = ''\n        store.validatorManageModal = {}\n\n        document.body.classList.remove('lock')\n    })\n\n\n    // Event \"open manage success modal\"\n    emitter.on('openManageSuccessModal', async function() {\n        store.showManageSuccessModal = true\n\n        document.body.classList.add('lock')\n    })\n\n\n    // Event \"close manage success modal\"\n    emitter.on('closeManageSuccessModal', function() {\n        store.showManageSuccessModal = false\n\n        document.body.classList.remove('lock')\n    })\n\n\n    // Event \"open manage error modal\"\n    emitter.on('openManageErrorModal', async function() {\n        store.showManageErrorModal = true\n\n        document.body.classList.add('lock')\n    })\n\n\n    // Event \"close manage error modal\"\n    emitter.on('closeManageErrorModal', function() {\n        store.showManageErrorModal = false\n\n        document.body.classList.remove('lock')\n    })\n</script>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <section class=\"notifications\" v-if=\"store.tooltip\">\n        <div class=\"cont\">\n            <div class=\"data\">\n                <div class=\"icon\">\n                    <svg><use xlink:href=\"/sprite.svg#ic_notification\"></use></svg>\n                </div>\n\n                <span>{{ store.tooltip }}</span>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { useGlobalStore } from '@/stores'\n\n    const store = useGlobalStore()\n</script>\n\n\n<style>\n    .notifications\n    {\n        width: calc(100% - 720px);\n    }\n\n\n    .notifications .data\n    {\n        font-size: 14px;\n        line-height: 150%;\n\n        display: flex;\n\n        min-height: 70px;\n        padding: 10px 20px 10px 10px;\n\n        transition: .2s linear;\n\n        border-radius: 20px;\n        background: #141414;\n\n        align-content: flex-start;\n        align-items: flex-start;\n        flex-wrap: wrap;\n        justify-content: space-between;\n        font-feature-settings: 'pnum' on, 'lnum' on;\n    }\n\n\n    .notifications .icon\n    {\n        display: flex;\n\n        width: 52px;\n        height: 52px;\n\n        border: 1px solid rgba(217, 217, 217, .1);\n        border-radius: 50%;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n\n    .notifications .icon svg\n    {\n        display: block;\n\n        width: 30px;\n        height: 30px;\n    }\n\n    .notifications .icon + *\n    {\n        width: calc(100% - 67px);\n        margin-left: auto;\n    }\n\n    .notifications span\n    {\n        display: -webkit-box;\n        overflow: hidden;\n\n        text-overflow: ellipsis;\n\n        align-self: center;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: 3;\n    }\n</style>","import script from \"./Notifications.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Notifications.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Notifications.vue?vue&type=style&index=0&id=40a8e9d4&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"ipfs_status\" :class=\"{ green: store.IPFSStatus }\" @mouseover=\"setNotice\">\n        <div>{{ $t('message.ipfs') }}</div>\n    </div>\n</template>\n\n\n<script setup>\n    import { inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter'),\n        i18n = inject('i18n')\n\n\n    // Set notice\n    function setNotice() {\n        store.IPFSStatus\n            ? emitter.emit('setNotification', i18n.global.t('message.ipfs_active_notice'))\n            : emitter.emit('setNotification', i18n.global.t('message.ipfs_not_active_notice'))\n    }\n</script>\n\n\n<style scoped>\n    .ipfs_status\n    {\n        color: #eb5757;\n        font-size: 15px;\n        font-weight: 500;\n        line-height: 18px;\n        margin-left: auto;\n        position: relative;\n\n        padding-left: 21px;\n    }\n\n    .ipfs_status.green\n    {\n        color: #1bc562;\n    }\n\n\n    .ipfs_status:before\n    {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 11px;\n        height: 11px;\n        margin: auto;\n\n        content: '';\n\n        border-radius: 50%;\n        background: currentColor;\n    }\n\n</style>","import script from \"./IPFS.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./IPFS.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./IPFS.vue?vue&type=style&index=0&id=5e90cf25&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5e90cf25\"]])\n\nexport default __exports__","<template>\n    <div class=\"currency\" @mouseover=\"emitter.emit('setNotification', $t('message.currency_notice'))\" v-click-out=\"clickOut\">\n        <button class=\"btn\" :class=\"{ active: store.showCurrencyDropdown }\" @click.prevent=\"showDropdown = !showDropdown\">\n            <span>{{ store.currency }}</span>\n            <svg><use xlink:href=\"/sprite.svg#ic_arr_down\"></use></svg>\n        </button>\n\n        <transition name=\"fadeUp\" mode=\"out-in\">\n        <div class=\"dropdown\" v-show=\"showDropdown\">\n            <div><button class=\"btn\" :class=\"{ active: store.currency == 'BTC' }\" @click.prevent=\"selectCurrency('BTC')\">BTC</button></div>\n\n            <div><button class=\"btn\" :class=\"{ active: store.currency == 'ETH' }\" @click.prevent=\"selectCurrency('ETH')\">ETH</button></div>\n\n            <div><button class=\"btn\" :class=\"{ active: store.currency == 'ATOM' }\" @click.prevent=\"selectCurrency('ATOM')\">ATOM</button></div>\n\n            <div><button class=\"btn\" :class=\"{ active: store.currency == 'USDT' }\" @click.prevent=\"selectCurrency('USDT')\">USDT</button></div>\n        </div>\n        </transition>\n    </div>\n</template>\n\n\n<script setup>\n    import { inject, ref } from 'vue'\n    import { useGlobalStore } from '@/stores'\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter'),\n        showDropdown = ref(false)\n\n\n    // Select currency\n    function selectCurrency(newCurrency) {\n        // Set new currency\n        store.currency= newCurrency\n\n        // Hide dropdown\n        showDropdown.value = false\n    }\n\n    // Сlick element outside\n    function clickOut() {\n        // Hide dropdown\n        showDropdown.value = false\n    }\n</script>\n\n\n<style scoped>\n    .currency\n    {\n        position: relative;\n\n        margin-left: 40px;\n    }\n\n\n    .currency .btn\n    {\n        font-size: 15px;\n        font-weight: 500;\n        line-height: 18px;\n\n        display: flex;\n\n        min-width: 70px;\n\n        pointer-events: auto;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n    }\n\n    .currency .btn svg\n    {\n        display: block;\n\n        width: 15px;\n        height: 15px;\n        margin-left: 10px;\n    }\n\n\n    .currency .dropdown\n    {\n        position: absolute;\n        z-index: 5;\n        top: 100%;\n        left: -9px;\n\n        width: 90px;\n        margin-top: 7px;\n        padding: 6px 4px;\n\n        border-radius: 10px;\n        background: #101010;\n    }\n\n    .currency .dropdown > * + *\n    {\n        margin-top: 5px;\n    }\n\n\n    .currency .dropdown .btn\n    {\n        font-size: 12px;\n        line-height: 15px;\n\n        display: block;\n\n        width: 100%;\n        padding: 4px;\n\n        transition: background .2s linear;\n        text-align: left;\n        pointer-events: auto;\n\n        border-radius: 7px;\n    }\n\n    .currency .dropdown .btn:hover,\n    .currency .dropdown .btn.active\n    {\n        background: #191919;\n    }\n</style>","import script from \"./Currency.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Currency.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Currency.vue?vue&type=style&index=0&id=7d7b2cb0&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7d7b2cb0\"]])\n\nexport default __exports__","<template>\n    <div class=\"user\">\n        <template v-if=\"store.account.moonPassport\">\n        <router-link to=\"/account/all\" class=\"account_link\">\n            <div class=\"icon\">\n                <svg><use xlink:href=\"/sprite.svg#ic_wallet\"></use></svg>\n            </div>\n\n            <div class=\"name\" @mouseover=\"emitter.emit('setNotification', $t('message.username_notice'))\">\n                <span v-if=\"store.account.moonPassportOwner\">{{ store.account.moonPassportOwner.extension.nickname }}</span>\n                <span v-else>{{ store.account.userName }}</span>\n            </div>\n        </router-link>\n\n        <router-link to=\"/account/passport\" class=\"photo\" @mouseover=\"emitter.emit('setNotification', $t('message.avatar_notice'))\">\n            <img :src=\"store.account.avatar\" alt=\"\" v-if=\"store.account.avatar\">\n        </router-link>\n        </template>\n\n\n        <template v-else>\n        <div class=\"account_link\">\n            <div class=\"icon\">\n                <svg><use xlink:href=\"/sprite.svg#ic_wallet\"></use></svg>\n            </div>\n\n            <div class=\"name\" @mouseover=\"emitter.emit('setNotification', $t('message.username_notice'))\">\n                <span v-if=\"store.account.moonPassportOwner\">{{ store.account.moonPassportOwner.extension.nickname }}</span>\n                <span v-else>{{ store.account.userName }}</span>\n            </div>\n        </div>\n\n        <div class=\"photo\" @mouseover=\"emitter.emit('setNotification', $t('message.avatar_notice'))\">\n            <img :src=\"store.account.avatar\" alt=\"\" v-if=\"store.account.avatar\">\n        </div>\n        </template>\n    </div>\n</template>\n\n\n<script setup>\n    import { inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter')\n</script>\n\n\n<style scoped>\n    .user\n    {\n        color: #fff;\n        font-size: 14px;\n        line-height: 17px;\n\n        display: flex;\n\n        width: 216px;\n        margin-left: 32px;\n        padding: 15px 10px;\n\n        text-align: left;\n\n        border-radius: 20px;\n        background: #141414;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: nowrap;\n    }\n\n\n    .user .account_link\n    {\n        color: currentColor;\n\n        display: flex;\n\n        width: calc(100% - 50px);\n\n        text-decoration: none;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .user .icon\n    {\n        display: flex;\n\n        width: 40px;\n        height: 40px;\n        margin-right: 10px;\n\n        border-radius: 50%;\n        background: #950fff;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n\n    .user .icon svg\n    {\n        display: block;\n\n        width: 20px;\n        height: 20px;\n    }\n\n\n    .user .name\n    {\n        overflow: hidden;\n\n        width: calc(100% - 50px);\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .user .photo\n    {\n        color: currentColor;\n\n        position: relative;\n\n        display: block;\n        overflow: hidden;\n\n        width: 40px;\n        height: 40px;\n        margin-left: 10px;\n\n        text-decoration: none;\n\n        border-radius: 50%;\n        background: #353535;\n    }\n\n    .user .photo img\n    {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: inherit;\n\n        object-fit: cover;\n    }\n</style>","import script from \"./User.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./User.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./User.vue?vue&type=style&index=0&id=e88031f2&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e88031f2\"]])\n\nexport default __exports__","<template>\n    <button class=\"connect_btn\" @click.prevent=\"emitter.emit('connectWallet')\">\n        {{ $t('message.connect_wallet_btn') }}\n    </button>\n</template>\n\n\n<script setup>\n    import { inject } from 'vue'\n\n\n    const emitter = inject('emitter')\n</script>\n\n\n<style scoped>\n    .connect_btn\n    {\n        color: #fff;\n        font-size: 14px;\n        line-height: 17px;\n\n        display: flex;\n\n        width: 219px;\n        max-width: 100%;\n        margin-left: 32px;\n        padding: 26px 59px;\n\n        transition: box-shadow .2s linear;\n        text-align: left;\n\n        border-radius: 20px;\n        background: #950fff;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n    }\n\n    .connect_btn:hover\n    {\n        box-shadow: 2px 5px 15px rgba(149, 15, 255, .45);\n    }\n\n</style>","import script from \"./ConnectBtn.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ConnectBtn.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ConnectBtn.vue?vue&type=style&index=0&id=e6c6efae&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e6c6efae\"]])\n\nexport default __exports__","<template>\n    <header>\n        <div class=\"cont\">\n            <div class=\"info row\">\n                <div class=\"logo\" v-click-out=\"clickOut\">\n                    <div class=\"btn\" @click.prevent=\"showDropdown = !showDropdown\">\n                        <img src=\"/logo.svg\" alt=\"\">\n\n                        <svg class=\"arr\"><use xlink:href=\"/sprite.svg#ic_arr_down\"></use></svg>\n                    </div>\n\n                    <div class=\"mini_modal\" v-show=\"showDropdown\">\n                        <div><a href=\"https://bronbro.io/\" target=\"_blank\" rel=\"noopener\">\n                            <img src=\"/bro_logo.svg\" alt=\"\">\n                        </a></div>\n\n                        <div><a href=\"https://score.bronbro.io/\" target=\"_blank\" rel=\"noopener\">\n                            <img src=\"/bro_score_logo.svg\" alt=\"\">\n                        </a></div>\n\n                        <div><a href=\"https://monitor.bronbro.io/\" target=\"_blank\" rel=\"noopener\">\n                            <img src=\"/bro_stats_logo.svg\" alt=\"\">\n                        </a></div>\n                    </div>\n                </div>\n\n                <!-- Notifications -->\n                <Notifications v-if=\"route.name != 'KeplrError' && route.name != 'KeplrReload'\" />\n\n                <!-- IPFS -->\n                <IPFS v-if=\"route.name != 'KeplrError' && route.name != 'KeplrReload'\" />\n\n                <!-- Currency -->\n                <Currency v-if=\"store.auth\" />\n\n                <!-- User info -->\n                <User v-if=\"store.auth\" />\n\n                <ConnectBtn v-if=\"!store.auth && route.name != 'KeplrError' && route.name != 'KeplrReload'\" />\n            </div>\n        </div>\n    </header>\n</template>\n\n\n<script setup>\n    import { onMounted, ref } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { useRoute } from 'vue-router'\n\n    // Components\n    import Notifications from '../components/Notifications.vue'\n    import IPFS from '../components/header/IPFS.vue'\n    import Currency from '../components/header/Currency.vue'\n    import User from '../components/header/User.vue'\n    import ConnectBtn from '../components/header/ConnectBtn.vue'\n\n\n    const store = useGlobalStore(),\n        route = useRoute(),\n        showDropdown = ref(false)\n\n\n    onMounted(() => {\n        // Sticky header\n        const header = document.querySelector('header')\n\n        if(header) {\n            header.stickyEvent = () => setTimeout(() => {\n                window.scrollY > 0\n                    ? header.classList.add('stuck')\n                    : header.classList.remove('stuck')\n            })\n\n            document.addEventListener('scroll', header.stickyEvent)\n        }\n    })\n\n\n    // Сlick element outside\n    function clickOut() {\n        // Hide dropdown\n        showDropdown.value = false\n    }\n</script>\n\n\n<style>\nheader\n{\n    position: fixed;\n    z-index: 101;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    padding: 20px 0;\n\n    transition: padding-top .2s linear, padding-bottom .2s linear;\n}\n\n.lock header\n{\n    padding-right: var(--scroll_width);\n}\n\n.lock header.stuck\n{\n    width: calc(100% - var(--scroll_width));\n}\n\n\nheader .cont\n{\n    max-width: 100%;\n    padding: 0 20px;\n}\n\n\nheader .info\n{\n    padding: 11px 20px;\n\n    border-radius: 42px;\n\n    align-content: center;\n    align-items: center;\n    justify-content: space-between;\n}\n\n\n\nheader .logo\n{\n    position: relative;\n\n    margin-right: auto;\n}\n\n\nheader .logo .btn\n{\n    display: flex;\n\n    cursor: pointer;\n\n    justify-content: flex-start;\n    align-items: center;\n    align-content: center;\n    flex-wrap: wrap;\n}\n\n\nheader .logo .btn img\n{\n    display: block;\n\n    max-width: 100%;\n    height: 70px;\n}\n\n\nheader .logo .arr\n{\n    display: block;\n\n    width: 24px;\n    height: 24px;\n    margin-left: 14px;\n}\n\n\nheader .logo .mini_modal\n{\n    position: absolute;\n    top: 100%;\n    left: 0;\n\n    width: 238px;\n    margin-top: 10px;\n    padding: 6px 4px;\n\n    border-radius: 10px;\n    background: #101010;\n}\n\nheader .logo .mini_modal > * + *\n{\n    margin-top: 8px;\n}\n\n\nheader .logo .mini_modal a\n{\n    color: currentColor;\n\n    display: block;\n\n    padding: 6px 10px 6px 4px;\n\n    transition: background .2s linear;\n    text-decoration: none;\n\n    border-radius: 8px;\n}\n\n\nheader .logo .mini_modal img\n{\n    display: block;\n\n    max-width: 100%;\n}\n\n\nheader .logo .mini_modal a:hover\n{\n    background: #191919;\n}\n\n\n\nheader.stuck\n{\n    padding: 0;\n\n    background: var(--bg);\n}\n</style>","import script from \"./Header.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Header.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Header.vue?vue&type=style&index=0&id=b99087aa&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <section class=\"feedback\">\n        <button class=\"btn\" @click.prevent=\"isActive = !isActive\" :class=\"{ active: isActive }\">\n            <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_bug\"></use></svg>\n        </button>\n\n        <div class=\"info\">\n            <button class=\"close_btn\" @click.prevent=\"isActive = !isActive\">\n                <svg><use xlink:href=\"/sprite.svg#ic_close\"></use></svg>\n            </button>\n\n            <div class=\"head\">\n                <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_feedback\"></use></svg>\n\n                <div>\n                    <div class=\"title\">{{ $t('message.feedback_title') }}</div>\n\n                    <div class=\"desc\">{{ $t('message.feedback_desc') }}</div>\n                </div>\n            </div>\n\n            <div class=\"links\">\n                <div><a href=\"https://t.me/bro_n_bro_community\" target=\"_blank\" rel=\"noopener nofollow\">\n                    <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_telegram\"></use></svg>\n                    <span>{{ $t('message.feedback_telegram_link') }}</span>\n                    <svg class=\"arrow\"><use xlink:href=\"/sprite.svg#ic_link_arrow\"></use></svg>\n                </a></div>\n\n                <div><a href=\"https://github.com/bro-n-bro/bro.app/issues/new\" target=\"_blank\" rel=\"noopener nofollow\">\n                    <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_github\"></use></svg>\n                    <span>{{ $t('message.feedback_github_link') }}</span>\n                    <svg class=\"arrow\"><use xlink:href=\"/sprite.svg#ic_link_arrow\"></use></svg>\n                </a></div>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { inject, ref } from 'vue'\n\n    const i18n = inject('i18n'),\n        isActive = ref(false)\n</script>\n\n\n<style scoped>\n    .feedback\n    {\n        position: fixed;\n        z-index: 90;\n        right: 24px;\n        bottom: 24px;\n    }\n\n\n    .feedback .btn\n    {\n        display: flex;\n\n        width: 76px;\n        height: 76px;\n\n        border-radius: 32px;\n        background: #950fff;\n        transition: background .2s linear;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .feedback .btn .icon\n    {\n        display: block;\n\n        width: 36px;\n        height: 36px;\n    }\n\n\n    .feedback .btn:hover\n    {\n        background: #7700E1;\n    }\n\n\n    .feedback .btn.active\n    {\n        display: none;\n    }\n\n\n    .feedback .info\n    {\n        color: #fff;\n\n        position: relative;\n\n        display: none;\n\n        width: 252px;\n        max-width: calc(100vw - 48px);\n        padding: 22px 16px 16px;\n\n        border-radius: 16px;\n        background: #191919;\n    }\n\n    .feedback .btn.active + .info\n    {\n        display: block;\n    }\n\n\n    .feedback .close_btn\n    {\n        position: absolute;\n        top: 22px;\n        right: 16px;\n\n        display: flex;\n\n        width: 24px;\n        height: 24px;\n\n        transition: opacity .2s linear;\n\n        opacity: .5;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .feedback .close_btn .icon\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n    }\n\n    .feedback .close_btn:hover\n    {\n        opacity: 1;\n    }\n\n\n    .feedback .head\n    {\n        display: flex;\n\n        justify-content: space-between;\n        align-items: flex-start;\n        align-content: flex-start;\n        flex-wrap: wrap;\n    }\n\n\n    .feedback .head .icon\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n    }\n\n    .feedback .head .icon + *\n    {\n        width: calc(100% - 34px);\n        padding-right: 32px;\n    }\n\n\n    .feedback .head .title\n    {\n        font-size: 16px;\n        font-weight: 500;\n        line-height: 22px;\n    }\n\n\n    .feedback .head .desc\n    {\n        font-size: 12px;\n        line-height: 130%;\n\n        margin-top: 8px;\n\n        opacity: .7;\n    }\n\n\n    .feedback .links\n    {\n        font-size: 14px;\n        line-height: 17px;\n\n        margin-top: 16px;\n    }\n\n    .feedback .links > * + *\n    {\n        margin-top: 10px;\n    }\n\n\n    .feedback .links a\n    {\n        color: currentColor;\n\n        display: flex;\n\n        padding: 10px;\n\n        transition: background .2s linear;\n        text-decoration: none;\n\n        border-radius: 10px;\n        background: #212121;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .feedback .links .icon\n    {\n        display: block;\n\n        width: 16px;\n        height: 16px;\n        margin-right: 6px;\n    }\n\n\n    .feedback .links span\n    {\n        width: calc(100% - 44px);\n    }\n\n\n    .feedback .links .arrow\n    {\n        display: block;\n\n        width: 16px;\n        height: 16px;\n        margin-left: auto;\n    }\n\n\n    .feedback .links a:hover\n    {\n        background: #950fff;\n    }\n\n\n    .feedback .links a:active\n    {\n        background: #7700E1;\n    }\n\n</style>","import script from \"./Feedback.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Feedback.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Feedback.vue?vue&type=style&index=0&id=e0a386d6&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e0a386d6\"]])\n\nexport default __exports__","import script from \"./Error.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Error.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Error.vue?vue&type=style&index=0&id=53119fd9&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./ManageModalValidator.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageModalValidator.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ManageModalValidator.vue?vue&type=style&index=0&id=3bfb96b2&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3bfb96b2\"]])\n\nexport default __exports__","<template>\n    <form class=\"form\" @submit.prevent=\"onSubmit\">\n        <ManageModalValidator />\n\n\n        <div class=\"notice\">\n            <div class=\"title\">\n                {{ $t('message.manage_modal_notice_title', {\n                    unbonding_time: store.networks[store.networkManageModal].unbonding_time/60/60/24\n                }) }}\n            </div>\n\n            <div class=\"desc\">\n                {{ $t('message.manage_modal_notice_desc', {\n                    currency: store.networks[store.networkManageModal].token_name,\n                    unbonding_time: store.networks[store.networkManageModal].unbonding_time/60/60/24\n                }) }}\n            </div>\n        </div>\n\n\n        <div class=\"tokens\">\n            <div>\n                <div class=\"label\">\n                    {{ $t('message.manage_modal_my_delegation') }}\n                </div>\n\n                <div class=\"val\">\n                    {{ $filters.toFixed(store.networks[store.networkManageModal].delegations_tokens, 2) }}\n\n                    {{ store.networks[store.networkManageModal].token_name }}\n                </div>\n            </div>\n\n            <div>\n                <div class=\"label\">\n                    {{ $t('message.manage_modal_available_balance') }}\n                </div>\n\n                <div class=\"val\">\n                    {{ $filters.toFixed(store.networks[store.networkManageModal].availabel_tokens, 2) }}\n                    {{ store.networks[store.networkManageModal].token_name }}\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"fields\">\n            <div class=\"line validator\">\n                <div class=\"label\">\n                    {{ $t('message.manage_modal_validator_delegate_label') }}\n                </div>\n\n                <div class=\"field\">\n                    <input type=\"text\" class=\"input\" readonly v-model=\"data.name\"\n                        :placeholder=\"$t('message.manage_modal_validator_placeholder')\"\n                        @focus.self=\"$event.target.classList.add('active')\">\n                </div>\n\n                <div class=\"exp\">\n                    {{ $t('message.manage_modal_validator_exp') }}\n                </div>\n            </div>\n\n\n            <div class=\"line amount\">\n                <div class=\"label\">\n                    {{ $t('message.manage_modal_delegate_amount') }}\n                </div>\n\n                <div class=\"field\">\n                    <input type=\"text\" class=\"input\" v-model=\"data.amount\" @input=\"setAmount\" placeholder=\"0\">\n\n                    <div class=\"unit\">\n                        {{ store.networks[store.networkManageModal].token_name }}\n                    </div>\n\n                    <button type=\"button\" class=\"max_btn\" @click.prevent=\"setMaxAmount\">\n                        {{ $t('message.manage_modal_max_btn') }}\n                    </button>\n                </div>\n\n                <div class=\"exp\">\n                    {{ $t('message.manage_modal_amount_exp', { value: 0.01, currency: store.networks[store.networkManageModal].token_name }) }}\n                </div>\n            </div>\n\n\n            <div class=\"btns\">\n                <button type=\"submit\" class=\"btn submit_btn\" :disabled=\"!data.amount\">\n                    {{ $t('message.manage_modal_delegate_btn') }}\n                </button>\n            </div>\n        </div>\n    </form>\n</template>\n\n\n<script setup>\n    import { reactive, inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { useNotification } from '@kyvg/vue3-notification'\n    import { prepareTx, sendTx, prepareEVMOSTx, sendEVMOSTx } from '@/utils'\n\n    // Components\n    import ManageModalValidator from './ManageModalValidator.vue'\n\n    const i18n = inject('i18n'),\n        store = useGlobalStore(),\n        notification = useNotification(),\n        data = reactive({\n            name: i18n.global.t('message.manage_modal_validator_name'),\n            amount: ''\n        })\n\n\n    // Set amount\n    function setAmount(event) {\n        if(parseFloat(event.target.value.replace(',', '.')) > store.networks[store.networkManageModal].availabel_tokens - 0.01) {\n            data.amount = (store.networks[store.networkManageModal].availabel_tokens - 0.01).toString()\n        }\n    }\n\n\n    // Set max. amount\n    function setMaxAmount() {\n        data.amount = (store.networks[store.networkManageModal].availabel_tokens - 0.01).toString()\n    }\n\n\n    // Submit form\n    function onSubmit() {\n        let amount = parseFloat(data.amount.replace(',', '.'))\n\n        if(amount > 0) {\n            // Other processing for EVMOS\n            store.networkManageModal == 'evmos'\n                ? delegateEVMOS()\n                : delegateDEFAULT()\n        }\n    }\n\n\n    // Delegate DEFAULT\n    async function delegateDEFAULT() {\n        try {\n            // Message\n            let msgAny = {\n                typeUrl: '/cosmos.staking.v1beta1.MsgDelegate',\n                value: {\n                    delegatorAddress: store.wallets[store.networkManageModal],\n                    validatorAddress: store.networks[store.networkManageModal].validator,\n                    amount: {\n                        denom: store.networks[store.networkManageModal].denom,\n                        amount: `${parseFloat(data.amount.replace(',', '.')).toFixed(store.networks[store.networkManageModal].exponent.toString().length - 1) * store.networks[store.networkManageModal].exponent}`\n                    }\n                }\n            }\n\n            // Prepare Tx\n            let prepareResult = await prepareTx([msgAny])\n\n            // Show notification\n            notification.notify({\n                group: store.networks[store.networkManageModal].denom,\n                duration: -100,\n                title: i18n.global.t('message.notification_progress_title'),\n                data: {\n                    chain: store.networkManageModal,\n                    tx_type: i18n.global.t('message.manage_modal_action_delegate')\n                }\n            })\n\n            // Send Tx\n            let result = await sendTx(prepareResult)\n\n            // Show success\n            showSuccess(result)\n        } catch (error) {\n            console.log(error)\n\n            // Show error\n            showError(error)\n        }\n    }\n\n\n    // Delegate EVMOS\n    async function delegateEVMOS() {\n        try {\n            // Create request\n            await fetch(`${store.networks.evmos.lcd_api}/cosmos/auth/v1beta1/accounts/${store.wallets.evmos}`)\n                .then(res => res.json())\n                .then(async response => {\n                    try {\n                        // Params\n                        let params = {\n                            validatorAddress: store.networks.evmos.validator,\n                            amount: `${parseFloat(data.amount.replace(',', '.')).toFixed(store.networks[store.networkManageModal].exponent.toString().length - 1) * store.networks.evmos.exponent}`,\n                            denom: store.networks.evmos.denom,\n                        }\n\n                        // Prepare EVMOS Tx\n                        let prepareResult = await prepareEVMOSTx(params, response.account.base_account, 'delegate')\n\n                        // Show notification\n                        notification.notify({\n                            group: store.networks[store.networkManageModal].denom,\n                            duration: -100,\n                            title: i18n.global.t('message.notification_progress_title'),\n                            data: {\n                                chain: store.networkManageModal,\n                                tx_type: i18n.global.t('message.manage_modal_action_delegate')\n                            }\n                        })\n\n                        // Send EVMOS Tx\n                        let result = await sendEVMOSTx(prepareResult)\n\n                        // Set TXS\n                        store.lastTXS = result.tx_response.txhash\n\n                        // Show notification\n                        notification.notify({\n                            group: store.networks[store.networkManageModal].denom,\n                            clean: true\n                        })\n\n                        notification.notify({\n                            group: store.networks[store.networkManageModal].denom,\n                            title: i18n.global.t('message.notification_successful_title'),\n                            type: 'success',\n                            data: {\n                                chain: store.networkManageModal,\n                                tx_type: i18n.global.t('message.manage_modal_action_delegate'),\n                                tx_hash: store.lastTXS\n                            }\n                        })\n\n                        // Update network\n                        store.updateNetwork(store.networkManageModal)\n                    } catch (error) {\n                        console.log(error)\n\n                        // Show error modal\n                        showError(error)\n                    }\n                })\n        } catch (error) {\n            console.log(error)\n\n            // Get error title\n            store.manageError = i18n.global.t('message.manage_modal_error_rejected')\n\n            // Show notification\n            notification.notify({\n                group: store.networks[store.networkManageModal].denom,\n                clean: true\n            })\n\n            notification.notify({\n                id: Date.now(),\n                group: store.networks[store.networkManageModal].denom,\n                title: i18n.global.t('message.notification_failed_title'),\n                text: store.manageError,\n                type: 'error',\n                data: {\n                    chain: store.networkManageModal,\n                    tx_type: i18n.global.t('message.manage_modal_action_delegate')\n                }\n            })\n        }\n    }\n\n\n    // Show success modal\n    function showSuccess(result) {\n        // Set TXS\n        store.lastTXS = result.transactionHash\n\n        // Show notification\n        notification.notify({\n            group: store.networks[store.networkManageModal].denom,\n            clean: true\n        })\n\n        notification.notify({\n            group: store.networks[store.networkManageModal].denom,\n            title: i18n.global.t('message.notification_successful_title'),\n            type: 'success',\n            data: {\n                chain: store.networkManageModal,\n                tx_type: i18n.global.t('message.manage_modal_action_delegate'),\n                tx_hash: store.networkManageModal != 'bostrom' ? store.lastTXS : ''\n            }\n        })\n\n        // Update network\n        store.updateNetwork(store.networkManageModal)\n    }\n\n\n    // Show error modal\n    function showError(error) {\n        // Get error code\n        let errorCode = error.message.match(/code (\\d+(\\.\\d)*)/i)\n\n        // Get error title\n        errorCode\n            ? store.manageError = i18n.global.t(`message.manage_modal_error_${errorCode[1]}`)\n            : store.manageError = i18n.global.t('message.manage_modal_error_rejected')\n\n        // Show notification\n        notification.notify({\n            group: store.networks[store.networkManageModal].denom,\n            clean: true\n        })\n\n        notification.notify({\n            group: store.networks[store.networkManageModal].denom,\n            title: i18n.global.t('message.notification_failed_title'),\n            text: store.manageError,\n            type: 'error',\n            data: {\n                chain: store.networkManageModal,\n                tx_type: i18n.global.t('message.manage_modal_action_delegate')\n            }\n        })\n    }\n</script>\n","import script from \"./ManageModalDelegate.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageModalDelegate.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <form class=\"form\" @submit.prevent=\"onSubmit\">\n        <ManageModalValidator />\n\n\n        <div class=\"notice\">\n            <div class=\"title\">\n                {{ $t('message.manage_modal_notice_title', {\n                    unbonding_time: store.networks[store.networkManageModal].unbonding_time/60/60/24\n                }) }}\n            </div>\n\n            <div class=\"desc\">\n                {{ $t('message.manage_modal_notice_desc', {\n                    currency: store.networks[store.networkManageModal].token_name,\n                    unbonding_time: store.networks[store.networkManageModal].unbonding_time/60/60/24\n                }) }}\n            </div>\n        </div>\n\n\n        <div class=\"tokens\">\n            <div>\n                <div class=\"label\">\n                    {{ $t('message.manage_modal_my_delegation') }}\n                </div>\n\n                <div class=\"val\">\n                    <template v-if=\"data.availabel_tokens\">\n                    {{ $filters.toFixed(data.availabel_tokens, 2) }}\n                    </template>\n\n                    <template v-else>\n                    {{ $filters.toFixed(store.networks[store.networkManageModal].delegations_tokens, 2) }}\n                    </template>\n\n                    {{ store.networks[store.networkManageModal].token_name }}\n                </div>\n            </div>\n\n            <div>\n                <div class=\"label\">\n                    {{ $t('message.manage_modal_available_balance') }}\n                </div>\n\n                <div class=\"val\">\n                    <template v-if=\"data.availabel_tokens\">\n                    {{ $filters.toFixed(data.availabel_tokens, 2) }}\n                    </template>\n\n                    <template v-else>\n                    {{ $filters.toFixed(store.networks[store.networkManageModal].availabel_tokens, 2) }}\n                    </template>\n\n                    {{ store.networks[store.networkManageModal].token_name }}\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"fields\">\n            <div class=\"line validator\">\n                <div class=\"label\">\n                    {{ $t('message.manage_modal_validator_redelegare_label') }}\n                </div>\n\n                <div class=\"field\" v-click-out=\"hideDropdown\">\n                    <input type=\"text\" class=\"input validator_input\" v-model=\"data.name\"\n                        :placeholder=\"$t('message.manage_modal_validator_placeholder')\"\n                        @focus.self=\"$event.target.classList.add('active')\">\n\n                    <button type=\"button\" class=\"clear_btn\" v-if=\"data.name.length\" @click.prevent=\"clearValidator\">\n                        <svg><use xlink:href=\"/sprite.svg#ic_close\"></use></svg>\n                    </button>\n\n                    <div class=\"arr\">\n                        <svg><use xlink:href=\"/sprite.svg#ic_arr_down\"></use></svg>\n                    </div>\n\n                    <div class=\"dropdown\">\n                        <div class=\"scroll\">\n                            <div v-for=\"(validator, index) in validators\" :key=\"index\">\n                                <button type=\"button\" class=\"btn\" @click.stop.prevent=\"setValidator(validator)\">\n                                    {{ validator.description.moniker }}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <div class=\"line amount\">\n                <div class=\"label\">\n                    {{ $t('message.manage_modal_redelegate_amount') }}\n                </div>\n\n                <div class=\"field\">\n                    <input type=\"text\" class=\"input\" v-model=\"data.amount\" @input=\"setAmount\" placeholder=\"0\" :readonly=\"!data.operator_address.length\">\n\n                    <div class=\"unit\">\n                        {{ store.networks[store.networkManageModal].token_name }}\n                    </div>\n\n                    <button type=\"button\" class=\"max_btn\" :disabled=\"!data.operator_address.length\" @click.prevent=\"setMaxAmount\">\n                        {{ $t('message.manage_modal_max_btn') }}\n                    </button>\n                </div>\n\n                <div class=\"exp\">\n                    {{ $t('message.manage_modal_amount_exp', { value: 0.01, currency: store.networks[store.networkManageModal].token_name }) }}\n                </div>\n            </div>\n\n\n            <div class=\"btns\">\n                <button type=\"submit\" class=\"btn submit_btn\" :disabled=\"!data.amount\">\n                    {{ $t('message.manage_modal_redelegate_btn') }}\n                </button>\n            </div>\n        </div>\n    </form>\n</template>\n\n\n<script setup>\n    import { reactive, inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { useNotification } from '@kyvg/vue3-notification'\n    import { prepareTx, sendTx, prepareEVMOSTx, sendEVMOSTx } from '@/utils'\n\n    // Components\n    import ManageModalValidator from './ManageModalValidator.vue'\n\n    const props = defineProps(['validators']),\n        i18n = inject('i18n'),\n        store = useGlobalStore(),\n        notification = useNotification(),\n        data = reactive({\n            amount: '',\n            operator_address: '',\n            availabel_tokens: 0,\n            name: ''\n        }),\n        validators = reactive(props.validators)\n\n\n    // Hide dropdown\n    function hideDropdown() {\n        let validateInput = document.querySelector('.validator_input')\n\n        if(validateInput.classList.contains('active')){\n            setTimeout(() => validateInput.classList.remove('active'), 150)\n        }\n    }\n\n\n    // Clear data\n    function clearValidator() {\n        data.operator_address = ''\n        data.name = ''\n        data.availabel_tokens = 0\n        data.amount = ''\n    }\n\n\n    // Set data\n    function setValidator(newValidator) {\n        data.operator_address = newValidator.operator_address\n        data.name = newValidator.description.moniker\n        data.availabel_tokens = store.networks[store.networkManageModal].delegations.find(el => el.operator_address == newValidator.operator_address).amount\n        data.amount = (data.availabel_tokens - 0.01).toString()\n\n        // Hide dropdown\n        hideDropdown()\n    }\n\n\n    // Set amount\n    function setAmount(event) {\n        if(parseFloat(event.target.value.replace(',', '.')) > data.availabel_tokens - 0.01) {\n            data.amount = (data.availabel_tokens - 0.01).toString()\n        }\n    }\n\n\n    // Set max. amount\n    function setMaxAmount() {\n        data.amount = (data.availabel_tokens - 0.01).toString()\n    }\n\n\n    // Submit form\n    function onSubmit() {\n        let amount = parseFloat(data.amount.replace(',', '.'))\n\n        if(amount > 0) {\n            // Other processing for EVMOS\n            store.networkManageModal == 'evmos'\n                ? redelegateEVMOS()\n                : redelegateDEFAULT()\n        }\n    }\n\n\n    // Rredelegate DEFAULT\n    async function redelegateDEFAULT() {\n        try {\n            // Message\n            let msgAny = {\n                typeUrl: '/cosmos.staking.v1beta1.MsgBeginRedelegate',\n                value: {\n                    delegatorAddress: store.wallets[store.networkManageModal],\n                    validatorSrcAddress: data.operator_address,\n                    validatorDstAddress: store.networks[store.networkManageModal].validator,\n                    amount: {\n                        denom: store.networks[store.networkManageModal].denom,\n                        amount: `${parseFloat(data.amount.replace(',', '.')).toFixed(store.networks[store.networkManageModal].exponent.toString().length - 1) * store.networks[store.networkManageModal].exponent}`\n                    }\n                }\n            }\n\n            // Prepare Tx\n            let prepareResult = await prepareTx([msgAny])\n\n            // Show notification\n            notification.notify({\n                group: store.networks[store.networkManageModal].denom,\n                duration: -100,\n                title: i18n.global.t('message.notification_progress_title'),\n                data: {\n                    chain: store.networkManageModal,\n                    tx_type: i18n.global.t('message.manage_modal_action_redelegate')\n                }\n            })\n\n            // Send Tx\n            let result = await sendTx(prepareResult)\n\n            if(result.code != 0){\n                // Get error title\n                store.manageError = i18n.global.t(`message.manage_modal_error_${result.code}`)\n\n                // Show notification\n                notification.notify({\n                    group: store.networks[store.networkManageModal].denom,\n                    title: i18n.global.t('message.notification_failed_title'),\n                    text: store.manageError,\n                    type: 'error',\n                    data: {\n                        chain: store.networkManageModal,\n                        tx_type: i18n.global.t('message.manage_modal_action_redelegate')\n                    }\n                })\n\n                return false\n            }\n\n            // Show success modal\n            showSuccess(result)\n        } catch (error) {\n            console.log(error)\n\n            // Show error modal\n            showError(error)\n        }\n    }\n\n\n    // Rredelegate EVMOS\n    function redelegateEVMOS() {\n        try {\n            // Create request\n            fetch(`${store.networks.evmos.lcd_api}/cosmos/auth/v1beta1/accounts/${store.wallets.evmos}`)\n                .then(res => res.json())\n                .then(async response => {\n                    try {\n                        // Params\n                        let params = {\n                            validatorSrcAddress: data.operator_address,\n                            validatorDstAddress: store.networks.evmos.validator,\n                            amount: `${parseFloat(data.amount.replace(',', '.')).toFixed(store.networks[store.networkManageModal].exponent.toString().length - 1) * store.networks.evmos.exponent}`,\n                            denom: store.networks.evmos.denom,\n                        }\n\n                        // Prepare EVMOS Tx\n                        let prepareResult = await prepareEVMOSTx(params, response.account.base_account, 'redelegate')\n\n                        // Show notification\n                        notification.notify({\n                            group: store.networks[store.networkManageModal].denom,\n                            duration: -100,\n                            title: i18n.global.t('message.notification_progress_title'),\n                            data: {\n                                chain: store.networkManageModal,\n                                tx_type: i18n.global.t('message.manage_modal_action_redelegate')\n                            }\n                        })\n\n                        // Send EVMOS Tx\n                        let result = await sendEVMOSTx(prepareResult)\n\n                        // if(result.tx_response.code != 0){\n                        //     // Get error title\n                        //     store.manageError = i18n.global.t(`message.manage_modal_error_${result.tx_response.code}`)\n\n                        //     // Show notification\n                        //     notification.notify({\n                        //         group: store.networks[store.networkManageModal].denom,\n                        //         clean: true\n                        //     })\n\n                        //     notification.notify({\n                        //         group: store.networks[store.networkManageModal].denom,\n                        //         title: i18n.global.t('message.notification_failed_title'),\n                        //         text: store.manageError,\n                        //         type: 'error',\n                        //         data: {\n                        //             chain: store.networkManageModal,\n                        //             tx_type: i18n.global.t('message.manage_modal_action_redelegate')\n                        //         }\n                        //     })\n\n                        //     return false\n                        // }\n\n                        // Set TXS\n                        store.lastTXS = result.tx_response.txhash\n\n                        // Show notification\n                        notification.notify({\n                            group: store.networks[store.networkManageModal].denom,\n                            clean: true\n                        })\n\n                        notification.notify({\n                            group: store.networks[store.networkManageModal].denom,\n                            title: i18n.global.t('message.notification_successful_title'),\n                            type: 'success',\n                            data: {\n                                chain: store.networkManageModal,\n                                tx_type: i18n.global.t('message.manage_modal_action_redelegate'),\n                                tx_hash: store.lastTXS\n                            }\n                        })\n\n                        // Update network\n                        store.updateNetwork(store.networkManageModal)\n\n                        // Clear validator data\n                        clearValidator()\n                    } catch (error) {\n                        console.log(error)\n\n                        // Show error modal\n                        showError(error)\n                    }\n                })\n        } catch (error) {\n            console.log(error)\n\n            // Show error modal\n            showError(error)\n        }\n    }\n\n\n    // Show success modal\n    function showSuccess(result) {\n        // Set TXS\n        store.lastTXS = result.transactionHash\n\n        // Show notification\n        notification.notify({\n            group: store.networks[store.networkManageModal].denom,\n            clean: true\n        })\n\n        notification.notify({\n            group: store.networks[store.networkManageModal].denom,\n            title: i18n.global.t('message.notification_successful_title'),\n            type: 'success',\n            data: {\n                chain: store.networkManageModal,\n                tx_type: i18n.global.t('message.manage_modal_action_redelegate'),\n                tx_hash: store.networkManageModal != 'bostrom' ? store.lastTXS : ''\n            }\n        })\n\n        // Update network\n        store.updateNetwork(store.networkManageModal)\n\n        // Clear validator data\n        clearValidator()\n    }\n\n\n    // Show error modal\n    function showError(error) {\n        // Get error code\n        let errorCode = error.message.match(/code (\\d+(\\.\\d)*)/i)\n\n        // Get error title\n        errorCode\n            ? store.manageError = i18n.global.t(`message.manage_modal_error_${errorCode[1]}`)\n            : store.manageError = i18n.global.t('message.manage_modal_error_rejected')\n\n        // Show notification\n        notification.notify({\n            group: store.networks[store.networkManageModal].denom,\n            clean: true\n        })\n\n        notification.notify({\n            group: store.networks[store.networkManageModal].denom,\n            title: i18n.global.t('message.notification_failed_title'),\n            text: store.manageError,\n            type: 'error',\n            data: {\n                chain: store.networkManageModal,\n                tx_type: i18n.global.t('message.manage_modal_action_redelegate')\n            }\n        })\n    }\n</script>","import script from \"./ManageModalRedelegate.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageModalRedelegate.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <form class=\"form\" @submit.prevent=\"onSubmit\">\n        <ManageModalValidator />\n\n\n        <div class=\"notice\">\n            <div class=\"title\" v-html=\"$t('message.manage_modal_claim_notice_title')\"></div>\n        </div>\n\n\n        <div class=\"tokens\">\n            <div>\n                <div class=\"label\">\n                    {{ $t('message.manage_modal_my_delegation') }}\n                </div>\n\n                <div class=\"val\">\n                    {{ $filters.toFixed(store.networks[store.networkManageModal].delegations_tokens, 2) }}\n\n                    {{ store.networks[store.networkManageModal].token_name }}\n                </div>\n            </div>\n\n            <div>\n                <div class=\"label\">\n                    {{ $t('message.manage_modal_available_balance') }}\n                </div>\n\n                <div class=\"val\">\n                    {{ $filters.toFixed(store.networks[store.networkManageModal].availabel_tokens, 2) }}\n                    {{ store.networks[store.networkManageModal].token_name }}\n                </div>\n            </div>\n\n            <div>\n                <div class=\"label\">\n                    {{ $t('message.manage_modal_rewards_balance') }}\n                </div>\n\n                <div class=\"val\">\n                    ~ {{ $filters.toFixed(store.networks[store.networkManageModal].rewards_tokens, 6) }} {{ store.networks[store.networkManageModal].token_name }}\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"btns\">\n            <button type=\"submit\" class=\"btn submit_btn\">\n                {{ $t('message.manage_modal_claim_all_btn') }}\n            </button>\n        </div>\n    </form>\n</template>\n\n\n<script setup>\n    import { inject, reactive } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { useNotification } from '@kyvg/vue3-notification'\n    import { prepareTx, sendTx, prepareEVMOSTx, sendEVMOSTx } from '@/utils'\n\n    // Components\n    import ManageModalValidator from './ManageModalValidator.vue'\n\n    const props = defineProps(['validators']),\n        store = useGlobalStore(),\n        i18n = inject('i18n'),\n        notification = useNotification(),\n        validators = reactive(props.validators)\n\n\n    // Submit form\n    function onSubmit() {\n        // Other processing for EVMOS\n        store.networkManageModal == 'evmos'\n            ? claimAllEVMOS()\n            : claimAllDEFAULT()\n    }\n\n\n    // Claim all DEFAILT\n    async function claimAllDEFAULT() {\n        try {\n            // Message\n            let msgAny = [{\n                typeUrl: '/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward',\n                value: {\n                    delegatorAddress: store.wallets[store.networkManageModal],\n                    validatorAddress: store.networks[store.networkManageModal].validator\n                }\n            }]\n\n            if(validators.length) {\n                // If there is more than one validator\n                validators.forEach(validator => {\n                    let validatorRewards = store.networks[store.networkManageModal].rewards.find(el => el.operator_address == validator.operator_address)\n\n                    msgAny.push({\n                        typeUrl: '/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward',\n                        value: {\n                            delegatorAddress: store.wallets[store.networkManageModal],\n                            validatorAddress: validator.operator_address\n                        }\n                    })\n                })\n            }\n\n            // Prepare Tx\n            let prepareResult = await prepareTx(msgAny, false)\n\n            // Show notification\n            notification.notify({\n                group: store.networks[store.networkManageModal].denom,\n                duration: -100,\n                title: i18n.global.t('message.notification_progress_title'),\n                data: {\n                    chain: store.networkManageModal,\n                    tx_type: i18n.global.t('message.manage_modal_action_claim')\n                }\n            })\n\n            // Send Tx\n            let result = await sendTx(prepareResult)\n\n            if(result.code != 0){\n                // Get error title\n                store.manageError = i18n.global.t(`message.manage_modal_error_${result.code}`)\n\n                // Show notification\n                notification.notify({\n                    group: store.networks[store.networkManageModal].denom,\n                    clean: true\n                })\n\n                notification.notify({\n                    group: store.networks[store.networkManageModal].denom,\n                    title: i18n.global.t('message.notification_failed_title'),\n                    text: store.manageError,\n                    type: 'error',\n                    data: {\n                        chain: store.networkManageModal,\n                        tx_type: i18n.global.t('message.manage_modal_action_claim')\n                    }\n                })\n\n                return false\n            }\n\n            // Show notification\n            notification.notify({\n                group: store.networks[store.networkManageModal].denom,\n                clean: true\n            })\n\n            notification.notify({\n                group: store.networks[store.networkManageModal].denom,\n                title: i18n.global.t('message.notification_successful_title'),\n                type: 'success',\n                data: {\n                    chain: store.networkManageModal,\n                    tx_type: i18n.global.t('message.manage_modal_action_claim')\n                }\n            })\n\n            // Update network\n            store.updateNetwork(store.networkManageModal)\n        } catch (error) {\n            console.log(error)\n\n            // Show error modal\n            showError(error)\n        }\n    }\n\n\n    // Claim all EVMOS\n    async function claimAllEVMOS() {\n        try {\n            // Create request\n            await fetch(`${store.networks.evmos.lcd_api}/cosmos/auth/v1beta1/accounts/${store.wallets.evmos}`)\n                .then(res => res.json())\n                .then(async response => {\n                    try {\n                        // Params\n                        let params = {\n                            validatorAddress: store.networks.evmos.validator\n                        }\n\n                        // Prepare EVMOS Tx\n                        let prepareResult = await prepareEVMOSTx(params, response.account.base_account, 'claim')\n\n                        // Show notification\n                        notification.notify({\n                            group: store.networks[store.networkManageModal].denom,\n                            duration: -100,\n                            title: i18n.global.t('message.notification_progress_title'),\n                            data: {\n                                chain: store.networkManageModal,\n                                tx_type: i18n.global.t('message.manage_modal_action_delegate')\n                            }\n                        })\n\n                        // Send EVMOS Tx\n                        await sendEVMOSTx(prepareResult)\n\n                        // Show notification\n                        notification.notify({\n                            group: store.networks[store.networkManageModal].denom,\n                            clean: true\n                        })\n\n                        notification.notify({\n                            group: store.networks[store.networkManageModal].denom,\n                            title: i18n.global.t('message.notification_successful_title'),\n                            type: 'success',\n                            data: {\n                                chain: store.networkManageModal,\n                                tx_type: i18n.global.t('message.manage_modal_action_claim')\n                            }\n                        })\n\n                        // Update network\n                        setTimeout(() => store.updateNetwork(store.networkManageModal), 4000)\n                    } catch (error) {\n                        console.log(error)\n\n                        // Show error modal\n                        showError(error)\n                    }\n                })\n        } catch (error) {\n            console.log(error)\n\n            // Show error modal\n            showError(error)\n        }\n    }\n\n\n    // Show error modal\n    function showError(error) {\n        // Get error code\n        let errorCode = error.message.match(/code (\\d+(\\.\\d)*)/i)\n\n        // Get error title\n        errorCode\n            ? store.manageError = i18n.global.t(`message.manage_modal_error_${errorCode[1]}`)\n            : store.manageError = i18n.global.t('message.manage_modal_error_rejected')\n\n        // Show notification\n        notification.notify({\n            group: store.networks[store.networkManageModal].denom,\n            clean: true\n        })\n\n        notification.notify({\n            group: store.networks[store.networkManageModal].denom,\n            title: i18n.global.t('message.notification_failed_title'),\n            text: store.manageError,\n            type: 'error',\n            data: {\n                chain: store.networkManageModal,\n                tx_type: i18n.global.t('message.manage_modal_action_claim')\n            }\n        })\n    }\n</script>","import script from \"./ManageModalClaim.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageModalClaim.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <form class=\"form\" @submit.prevent=\"onSubmit\">\n        <ManageModalValidator />\n\n\n        <div class=\"notice\" v-if=\"!manageGrant\">\n            <div class=\"title\">\n                {{ $t('message.manage_modal_restake_notice_title') }}\n            </div>\n\n            <div class=\"desc\" v-html=\"$t('message.manage_modal_restake_notice_desc')\"></div>\n        </div>\n\n\n        <div class=\"restake_features\" v-if=\"!manageGrant\">\n            <div>\n                <div class=\"label\">\n                    {{ $t('message.manage_modal_APR') }}\n                </div>\n\n                <div class=\"val\">\n                    {{ $filters.toFixed(store.networks[store.networkManageModal].apr*100, 2) }} %\n                </div>\n            </div>\n\n            <div>\n                <div class=\"label\">\n                    {{ $t('message.manage_modal_APY') }}\n                </div>\n\n                <div class=\"val\">\n                    {{ $filters.toFixed(store.networks[store.networkManageModal].apy*100, 2) }} %\n                </div>\n            </div>\n\n            <div>\n                <div class=\"label\">\n                    {{ $t('message.manage_modal_delegation') }}\n                </div>\n\n                <div class=\"val\">\n                    {{ $filters.toFixed(restake.delegations, 2) }}\n                    {{ store.networks[store.networkManageModal].token_name }}\n                </div>\n            </div>\n\n            <div>\n                <div class=\"label\">\n                    {{ $t('message.manage_modal_pending_rewards') }}\n                </div>\n\n                <div class=\"val\">\n                    {{ $filters.toFixed(restake.rewards, 2) }}\n                    {{ store.networks[store.networkManageModal].token_name }}\n                </div>\n            </div>\n\n            <div>\n                <div class=\"label\">\n                    {{ $t('message.manage_modal_frequency') }}\n                </div>\n\n                <div class=\"val\">\n                    {{ $t('message.manage_modal_frequency_val', { frequency: store.networks[store.networkManageModal].restake.run_time }) }}\n                </div>\n            </div>\n\n            <div>\n                <div class=\"label\">\n                    {{ $t('message.manage_modal_minimum_reward') }}\n                </div>\n\n                <div class=\"val\">\n                    {{ $filters.toFixed(store.networks[store.networkManageModal].restake.minimum_reward / store.networks[store.networkManageModal].exponent, 1) }}\n                    {{ store.networks[store.networkManageModal].token_name }}\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"grant_info\" v-if=\"!manageGrant\">\n            <div>\n                <div class=\"label\">{{ $t('message.manage_modal_grant_label_status') }}</div>\n\n                <div class=\"val red\" v-if=\"!Object.keys(restake.grant).length\">{{ $t('message.manage_modal_grant_status_inactive') }}</div>\n\n                <div class=\"val green\" v-else>\n                    <div>{{ $t('message.manage_modal_grant_status_active') }}</div>\n\n                    <div class=\"expiration\">\n                        {{ $t('message.manage_modal_grant_expiry', { date: $filters.timeAgo(restake.grant.expiration) }) }}\n                    </div>\n                </div>\n            </div>\n\n            <div>\n                <div class=\"label\">{{ $t('message.manage_modal_grant_label_remaining') }}</div>\n\n                <div class=\"val\" v-if=\"!Object.keys(restake.grant).length\">{{ $t('message.manage_modal_grant_remaining') }}</div>\n\n                <div class=\"val green\" v-else-if=\"restake.grant.authorization.max_tokens == undefined\">{{ $t('message.manage_modal_grant_remaining_unlimited') }}</div>\n\n                <div class=\"val green\" v-else>\n                    {{ restake.grant.authorization.max_tokens.amount / store.networks[store.networkManageModal].exponent }}\n                    {{ store.networks[store.networkManageModal].token_name }}\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"grant_manage\" v-else>\n            <div class=\"text\">\n                <p v-html=\"$t('message.manage_modal_grant_text1')\"></p>\n                <p v-html=\"$t('message.manage_modal_grant_text2')\"></p>\n                <p v-html=\"$t('message.manage_modal_grant_text3', { date: getDate(restake.grant.expiration) })\"></p>\n                <p v-html=\"$t('message.manage_modal_grant_text4')\"></p>\n            </div>\n\n            <div class=\"max_amount\">\n                <div class=\"label\">\n                    {{ $t('message.manage_modal_grant_label_amount') }}\n                </div>\n\n                <div class=\"field\">\n                    <input type=\"number\" class=\"input\" v-model=\"restake.amount\" :placeholder=\"$t('message.manage_modal_grant_amount_placeholder')\">\n\n                    <div class=\"unit\">\n                        <img :src=\"`/${store.networkManageModal}_logo.png`\" alt=\"\">\n                        <span>{{ store.networks[store.networkManageModal].token_name }}</span>\n                    </div>\n                </div>\n\n                <div class=\"exp\">\n                    {{ $t('message.manage_modal_grant_amount_exp') }}\n                </div>\n            </div>\n\n            <div class=\"expiry_date\">\n                <div class=\"label\">\n                    {{ $t('message.manage_modal_grant_label_expiry') }}\n                </div>\n\n                <div class=\"field\">\n                    <Datepicker class=\"input\" v-model=\"restake.expiry\" :lowerLimit=\"new Date()\" />\n\n                    <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_calendar\"></use></svg>\n                </div>\n\n                <div class=\"exp\">\n                    {{ $t('message.manage_modal_grant_expiry_exp') }}\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"btns\" v-if=\"!store.isLedger\">\n            <button type=\"button\" class=\"btn green\" v-if=\"!Object.keys(restake.grant).length && !manageGrant\" @click.prevent=\"manageGrant = true\">\n                {{ $t('message.manage_modal_enable_restake_btn') }}\n            </button>\n\n            <button type=\"button\" class=\"btn green\" v-if=\"!Object.keys(restake.grant).length && manageGrant\" @click.prevent=\"setGrant\">\n                {{ $t('message.manage_modal_enable_restake_btn') }}\n            </button>\n\n            <button type=\"button\" class=\"btn red w50\" v-if=\"Object.keys(restake.grant).length\" @click.prevent=\"removeGrant\">\n                {{ $t('message.manage_modal_disable_restake_btn') }}\n            </button>\n\n            <button type=\"button\" class=\"btn grey w50\" v-if=\"Object.keys(restake.grant).length && !manageGrant\" @click.prevent=\"manageGrant = true\">\n                {{ $t('message.manage_modal_manage_grant_btn') }}\n            </button>\n\n            <button type=\"button\" class=\"btn fiolet w50\" v-if=\"Object.keys(restake.grant).length && manageGrant\" @click.prevent=\"setGrant\">\n                {{ $t('message.update_btn') }}\n            </button>\n        </div>\n\n        <div class=\"authz_exp\" v-else>\n            {{ $t('message.manage_modal_restake_authz_exp') }}\n        </div>\n    </form>\n</template>\n\n\n<script setup>\n    import { inject, ref, reactive, onMounted } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { useNotification } from '@kyvg/vue3-notification'\n    import { prepareTx, sendTx, prepareEVMOSTx, sendEVMOSTx } from '@/utils'\n\n    import { StakeAuthorization } from 'cosmjs-types/cosmos/staking/v1beta1/authz'\n    import { Timestamp } from \"cosmjs-types/google/protobuf/timestamp\"\n\n    import moment from 'moment'\n    import Datepicker from 'vue3-datepicker'\n\n    // Components\n    import ManageModalValidator from './ManageModalValidator.vue'\n\n    const store = useGlobalStore(),\n        i18n = inject('i18n'),\n        notification = useNotification(),\n        restake = reactive({\n            grant: {},\n\n            delegations: store.networks[store.networkManageModal].restake ? store.networks[store.networkManageModal].delegations.find(el => el.operator_address == store.networks[store.networkManageModal].validator).amount : 0,\n\n            rewards: store.networks[store.networkManageModal].restake ? store.networks[store.networkManageModal].rewards.find(el => el.operator_address == store.networks[store.networkManageModal].validator).amount : 0,\n\n            amount: 0 || i18n.global.t('message.manage_modal_grant_amount_placeholder'),\n            expiry: new Date(moment().add(1, 'year').format('YYYY-MM-DD'))\n        }),\n        manageGrant = ref(false)\n\n\n    onMounted(async () => {\n        // Get grant info\n        if(store.networks[store.networkManageModal].restake) {\n            await getGrantInfo()\n        }\n    })\n\n\n    // Get grant info\n    async function getGrantInfo() {\n        try {\n            await fetch(`${store.networks[store.networkManageModal].lcd_api}/cosmos/authz/v1beta1/grants?granter=${store.wallets[store.networkManageModal]}&grantee=${store.networks[store.networkManageModal].restake.address}`)\n                .then(response => response.json())\n                .then(data => {\n                    if(data.grants.length) {\n                        let grant = data.grants.find(el => el.authorization['@type'] == '/cosmos.staking.v1beta1.StakeAuthorization')\n\n                        restake.grant = grant\n                        restake.amount = grant.authorization.max_tokens ? grant.authorization.max_tokens.amount / store.networks[store.networkManageModal].exponent : ''\n                        restake.expiry = new Date(getDate(grant.expiration))\n                    }\n\n                    manageGrant.value = false\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    // Set grant\n    function setGrant() {\n        // Other processing for EVMOS\n        store.networkManageModal == 'evmos'\n            ? createGrantEVMOS()\n            : createGrantDEFAULT()\n    }\n\n\n    // Remove grant\n    function removeGrant() {\n        // Other processing for EVMOS\n        store.networkManageModal == 'evmos'\n            ? removeGrantEVMOS()\n            : removeGrantDEFAULT()\n    }\n\n\n    // Create grant DEFAULT\n    async function createGrantDEFAULT() {\n        try {\n            // Authorizationgranf data\n            let authorization = {}\n\n            if(parseFloat(restake.amount) > 0) {\n                authorization = {\n                    typeUrl: '/cosmos.staking.v1beta1.StakeAuthorization',\n                    value: StakeAuthorization.encode(StakeAuthorization.fromPartial({\n                        allowList: { address: [store.networks[store.networkManageModal].validator] },\n                        maxTokens: {\n                            denom: store.networks[store.networkManageModal].denom,\n                            amount: `${parseFloat(restake.amount).toFixed(store.networks[store.networkManageModal].exponent.toString().length - 1) * store.networks[store.networkManageModal].exponent}`\n                        },\n                        authorizationType: 1\n                    })).finish()\n                }\n            } else {\n                authorization = {\n                    typeUrl: '/cosmos.staking.v1beta1.StakeAuthorization',\n                    value: StakeAuthorization.encode(StakeAuthorization.fromPartial({\n                        allowList: { address: [store.networks[store.networkManageModal].validator] },\n                        authorizationType: 1\n                    })).finish()\n                }\n            }\n\n            // Message\n            let msgAny = {\n                typeUrl: '/cosmos.authz.v1beta1.MsgGrant',\n                value: {\n                    granter: store.wallets[store.networkManageModal],\n                    grantee: store.networks[store.networkManageModal].restake.address,\n                    grant: {\n                        authorization,\n                        expiration: Timestamp.fromPartial({\n                            seconds: moment(restake.expiry).unix(),\n                            nanos: 0\n                        })\n                    }\n                }\n            }\n\n            // Prepare Tx\n            let prepareResult = await prepareTx([msgAny])\n\n            // Show notification\n            notification.notify({\n                group: store.networks[store.networkManageModal].denom,\n                duration: -100,\n                title: i18n.global.t('message.notification_progress_title'),\n                data: {\n                    chain: store.networkManageModal,\n                    tx_type: i18n.global.t('message.manage_modal_action_restake')\n                }\n            })\n\n            // Send Tx\n            let result = await sendTx(prepareResult)\n\n            if(result.code == 0){\n                // Show notification\n                notification.notify({\n                    group: store.networks[store.networkManageModal].denom,\n                    clean: true\n                })\n\n                notification.notify({\n                    group: store.networks[store.networkManageModal].denom,\n                    title: i18n.global.t('message.notification_successful_title'),\n                    type: 'success',\n                    data: {\n                        chain: store.networkManageModal,\n                        tx_type: i18n.global.t('message.manage_modal_action_restake')\n                    }\n                })\n\n                // Update grant info\n                await getGrantInfo()\n            }\n        } catch (error) {\n            console.log(error)\n\n            // Show error modal\n            showError(error)\n        }\n    }\n\n\n    // Create grant EVMOS\n    async function createGrantEVMOS() {\n        // Create request\n        await fetch(`${store.networks.evmos.lcd_api}/cosmos/auth/v1beta1/accounts/${store.wallets.evmos}`)\n            .then(res => res.json())\n            .then(async response => {\n                try {\n                    // Params\n                    let params = {\n                        bot_address: store.networks[store.networkManageModal].restake.address,\n                        validator_address: store.networks[store.networkManageModal].restake.address,\n                        denom: store.networks.evmos.denom,\n                        maxTokens: restake.amount > 0 ? `${parseFloat(restake.amount).toFixed(store.networks[store.networkManageModal].exponent.toString().length - 1) * store.networks[store.networkManageModal].exponent}` : 0,\n                        duration_in_seconds: moment(restake.expiry).unix()\n                    }\n\n                    // Prepare EVMOS Tx\n                    let prepareResult = await prepareEVMOSTx(params, response.account.base_account, 'restake_enable')\n\n                    // Show notification\n                    notification.notify({\n                        group: store.networks[store.networkManageModal].denom,\n                        duration: -100,\n                        title: i18n.global.t('message.notification_progress_title'),\n                        data: {\n                            chain: store.networkManageModal,\n                            tx_type: i18n.global.t('message.manage_modal_action_delegate')\n                        }\n                    })\n\n                    // Send EVMOS Tx\n                    let result = await sendEVMOSTx(prepareResult)\n\n\n                    // Set TXS\n                    store.lastTXS = result.tx_response.txhash\n\n                    // Show notification\n                    notification.notify({\n                        group: store.networks[store.networkManageModal].denom,\n                        clean: true\n                    })\n\n                    notification.notify({\n                        group: store.networks[store.networkManageModal].denom,\n                        title: i18n.global.t('message.notification_successful_title'),\n                        type: 'success',\n                        data: {\n                            chain: store.networkManageModal,\n                            tx_type: i18n.global.t('message.manage_modal_action_delegate'),\n                            tx_hash: store.lastTXS\n                        }\n                    })\n\n                    // Update grant info\n                    let interval = setInterval(async () => {\n                        !Object.keys(restake.grant).length\n                            ? await getGrantInfo()\n                            : clearInterval(interval)\n                    }, 500)\n                } catch (error) {\n                    console.log(error)\n\n                    // Get error title\n                    store.manageError = i18n.global.t('message.manage_modal_error_rejected')\n\n                    // Show notification\n                    notification.notify({\n                        group: store.networks[store.networkManageModal].denom,\n                        clean: true\n                    })\n\n                    notification.notify({\n                        id: Date.now(),\n                        group: store.networks[store.networkManageModal].denom,\n                        title: i18n.global.t('message.notification_failed_title'),\n                        text: store.manageError,\n                        type: 'error',\n                        data: {\n                            chain: store.networkManageModal,\n                            tx_type: i18n.global.t('message.manage_modal_action_restake')\n                        }\n                    })\n                }\n            })\n    }\n\n\n    // Remove grant DEFAULT\n    async function removeGrantDEFAULT() {\n        try {\n            // Message\n            let msgAny = {\n                typeUrl: '/cosmos.authz.v1beta1.MsgRevoke',\n                value: {\n                    granter: store.wallets[store.networkManageModal],\n                    grantee: store.networks[store.networkManageModal].restake.address,\n                    msgTypeUrl: '/cosmos.staking.v1beta1.MsgDelegate'\n                }\n            }\n\n            // Prepare Tx\n            let prepareResult = await prepareTx([msgAny])\n\n            // Show notification\n            notification.notify({\n                group: store.networks[store.networkManageModal].denom,\n                duration: -100,\n                title: i18n.global.t('message.notification_progress_title'),\n                data: {\n                    chain: store.networkManageModal,\n                    tx_type: i18n.global.t('message.manage_modal_action_restake')\n                }\n            })\n\n            // Send Tx\n            let result = await sendTx(prepareResult)\n\n            if(result.code == 0){\n                // Show notification\n                notification.notify({\n                    group: store.networks[store.networkManageModal].denom,\n                    clean: true\n                })\n\n                notification.notify({\n                    group: store.networks[store.networkManageModal].denom,\n                    title: i18n.global.t('message.notification_successful_title'),\n                    type: 'success',\n                    data: {\n                        chain: store.networkManageModal,\n                        tx_type: i18n.global.t('message.manage_modal_action_restake')\n                    }\n                })\n\n                // Update grant info\n                restake.grant = {}\n                restake.amount = 0 || i18n.global.t('message.manage_modal_grant_amount_placeholder')\n                restake.expiry = new Date(moment().add(1, 'year').format('YYYY-MM-DD'))\n            } else {\n                // Show error modal\n                console.log(result)\n                showError(result)\n            }\n        } catch (error) {\n            console.log(error)\n\n            // Get error title\n            store.manageError = i18n.global.t('message.manage_modal_error_rejected')\n\n            // Show notification\n            notification.notify({\n                group: store.networks[store.networkManageModal].denom,\n                clean: true\n            })\n\n            notification.notify({\n                id: Date.now(),\n                group: store.networks[store.networkManageModal].denom,\n                title: i18n.global.t('message.notification_failed_title'),\n                text: store.manageError,\n                type: 'error',\n                data: {\n                    chain: store.networkManageModal,\n                    tx_type: i18n.global.t('message.manage_modal_action_delegate')\n                }\n            })\n        }\n    }\n\n\n    // Remove grant EVMOS\n    async function removeGrantEVMOS() {\n        // Create request\n        await fetch(`${store.networks.evmos.lcd_api}/cosmos/auth/v1beta1/accounts/${store.wallets.evmos}`)\n            .then(res => res.json())\n            .then(async response => {\n                try {\n                    // Params\n                    let params = {\n                        bot_address: store.networks[store.networkManageModal].restake.address,\n                        validator_address: store.networks[store.networkManageModal].restake.address\n                    }\n\n                    // Prepare EVMOS Tx\n                    let prepareResult = await prepareEVMOSTx(params, response.account.base_account, 'restake_disable')\n\n                    // Show notification\n                    notification.notify({\n                        group: store.networks[store.networkManageModal].denom,\n                        duration: -100,\n                        title: i18n.global.t('message.notification_progress_title'),\n                        data: {\n                            chain: store.networkManageModal,\n                            tx_type: i18n.global.t('message.manage_modal_action_delegate')\n                        }\n                    })\n\n                    // Send EVMOS Tx\n                    let result = await sendEVMOSTx(prepareResult)\n\n                    // Set TXS\n                    store.lastTXS = result.tx_response.txhash\n\n                    // Show notification\n                    notification.notify({\n                        group: store.networks[store.networkManageModal].denom,\n                        clean: true\n                    })\n\n                    notification.notify({\n                        group: store.networks[store.networkManageModal].denom,\n                        title: i18n.global.t('message.notification_successful_title'),\n                        type: 'success',\n                        data: {\n                            chain: store.networkManageModal,\n                            tx_type: i18n.global.t('message.manage_modal_action_delegate'),\n                            tx_hash: store.networkManageModal != 'bostrom' ? store.lastTXS : ''\n                        }\n                    })\n\n                    // Update grant info\n                    restake.grant = {}\n                    restake.amount = 0 || i18n.global.t('message.manage_modal_grant_amount_placeholder')\n                    restake.expiry = new Date(moment().add(1, 'year').format('YYYY-MM-DD'))\n                } catch (error) {\n                    console.log(error)\n\n                    // Get error title\n                    store.manageError = i18n.global.t('message.manage_modal_error_rejected')\n\n                    // Show notification\n                    notification.notify({\n                        group: store.networks[store.networkManageModal].denom,\n                        clean: true\n                    })\n\n                    notification.notify({\n                        id: Date.now(),\n                        group: store.networks[store.networkManageModal].denom,\n                        title: i18n.global.t('message.notification_failed_title'),\n                        text: store.manageError,\n                        type: 'error',\n                        data: {\n                            chain: store.networkManageModal,\n                            tx_type: i18n.global.t('message.manage_modal_action_restake')\n                        }\n                    })\n                }\n            })\n    }\n\n\n    // Get formatted date\n    function getDate(date) {\n        return moment(date).format('YYYY-MM-DD')\n    }\n\n\n    // Show error modal\n    function showError(error) {\n        // Get error title\n        error.code\n            ? store.manageError = i18n.global.t(`message.manage_modal_error_${error.code}`)\n            : store.manageError = i18n.global.t('message.manage_modal_error_rejected')\n\n        // Show notification\n        notification.notify({\n            group: store.networks[store.networkManageModal].denom,\n            clean: true\n        })\n\n        notification.notify({\n            group: store.networks[store.networkManageModal].denom,\n            title: i18n.global.t('message.notification_failed_title'),\n            text: store.manageError,\n            type: 'error',\n            data: {\n                chain: store.networkManageModal,\n                tx_type: i18n.global.t('message.manage_modal_action_restake')\n            }\n        })\n    }\n</script>\n\n\n<style>\n    .restake_features\n    {\n        margin-top: 26px;\n        padding-bottom: 10px;\n\n        border-bottom: 1px solid rgba(255, 255, 255, .05);\n    }\n\n    .restake_features > *\n    {\n        display: flex;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n    }\n\n    .restake_features > * + *\n    {\n        margin-top: 10px;\n        padding-top: 10px;\n\n        border-top: 1px solid rgba(255, 255, 255, .05);\n    }\n\n\n    .restake_features .label\n    {\n        color: #8e8e8e;\n        font-size: 14px;\n        line-height: 17px;\n    }\n\n\n    .restake_features .val\n    {\n        font-weight: 600;\n        line-height: 19px;\n\n        white-space: nowrap;\n\n        font-feature-settings: 'pnum' on, 'lnum' on;\n    }\n\n\n\n    .grant_info\n    {\n        display: flex;\n\n        margin-top: 10px;\n        margin-bottom: -10px;\n        margin-left: -10px;\n\n        justify-content: flex-start;\n        align-items: stretch;\n        align-content: stretch;\n        flex-wrap: wrap;\n    }\n\n    .grant_info > *\n    {\n        width: calc(50% - 10px);\n        margin-bottom: 10px;\n        margin-left: 10px;\n        padding: 10px;\n\n        border-radius: 10px;\n        background: #191919;\n    }\n\n\n    .grant_info .label\n    {\n        color: #8e8e8e;\n        font-size: 14px;\n        line-height: 17px;\n    }\n\n\n    .grant_info .val\n    {\n        color: #8e8e8e;\n        font-weight: 600;\n        line-height: 19px;\n\n        margin-top: 6px;\n    }\n\n    .grant_info .val.red\n    {\n        color: #eb5757;\n    }\n\n    .grant_info .val.green\n    {\n        color: #1bc562;\n    }\n\n\n    .grant_info .expiration\n    {\n        color: #8e8e8e;\n        font-size: 12px;\n        font-weight: 400;\n        line-height: 15px;\n\n        margin-top: 2px;\n    }\n\n\n\n    .grant_manage .text\n    {\n        color: #8e8e8e;\n        font-size: 14px;\n        line-height: 130%;\n\n        margin-top: 20px;\n        padding: 10px;\n\n        border-radius: 10px;\n        background: #191919;\n    }\n\n    .grant_manage .text > * + *\n    {\n        margin-top: 10px;\n    }\n\n    .grant_manage .text b\n    {\n        color: #fff;\n    }\n\n\n    .grant_manage .max_amount,\n    .grant_manage .expiry_date\n    {\n        margin-top: 20px;\n    }\n\n\n    .grant_manage .label\n    {\n        color: #8e8e8e;\n        font-size: 14px;\n        line-height: 17px;\n\n        margin-bottom: 10px;\n    }\n\n\n    .grant_manage ::-webkit-input-placeholder\n    {\n        color: #aaa;\n    }\n\n    .grant_manage :-moz-placeholder\n    {\n        color: #aaa;\n    }\n\n    .grant_manage ::-moz-placeholder\n    {\n        color: #aaa;\n\n        opacity: 1;\n    }\n\n    .grant_manage :-ms-input-placeholder\n    {\n        color: #aaa;\n    }\n\n\n    .grant_manage .field\n    {\n        position: relative;\n    }\n\n\n    .grant_manage .input\n    {\n        color: #aaa;\n        font-family: var(--font-family);\n        font-size: 16px;\n        font-weight: 500;\n\n        display: block;\n\n        width: 100%;\n        height: 55px;\n        padding-right: 111px;\n        padding-left: 9px;\n\n        border: 1px solid transparent;\n        border-radius: 15px;\n        background: #191919;\n    }\n\n\n    .grant_manage .unit\n    {\n        color: #fff;\n        font-size: 18px;\n        font-weight: 500;\n        line-height: 22px;\n\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 10px;\n\n        display: flex;\n\n        height: 55px;\n\n        white-space: nowrap;\n        pointer-events: none;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .grant_manage .unit img\n    {\n        display: block;\n\n        width: 30px;\n        height: 30px;\n        margin-right: 6px;\n\n        border-radius: 50%;\n    }\n\n\n    .grant_manage .icon\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 10px;\n        bottom: 0;\n\n        display: block;\n\n        width: 24px;\n        height: 24px;\n        margin: auto;\n\n        pointer-events: none;\n    }\n\n\n    .grant_manage .exp\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 17px;\n\n        margin-top: 10px;\n    }\n\n</style>\n","import script from \"./ManageModalRestake.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageModalRestake.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ManageModalRestake.vue?vue&type=style&index=0&id=c15c9086&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <section class=\"modal\" id=\"manage_modal\">\n        <div class=\"modal_content\" @click.self=\"emitter.emit('closeManageModal')\">\n            <div class=\"data\">\n                <button class=\"close_btn\" @click.prevent=\"emitter.emit('closeManageModal')\">\n                    <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_close\"></use></svg>\n                </button>\n\n\n                <div class=\"type\">\n                    <button class=\"btn\" :class=\"{ active: data.type == 'delegate' }\" @click=\"data.type = 'delegate'\">\n                        {{ $t('message.manage_modal_action_delegate') }}\n                    </button>\n\n                    <button class=\"btn\" :class=\"{ active: data.type == 'redelegate' }\" v-if=\"data.validators.length\" @click=\"data.type = 'redelegate'\">\n                        {{ $t('message.manage_modal_action_redelegate') }}\n                    </button>\n\n                    <button class=\"btn\" :class=\"{ active: data.type == 'claim' }\" v-if=\"store.networks[store.networkManageModal].rewards_tokens > 0.0049 && store.networks[store.networkManageModal].status\" @click=\"data.type = 'claim'\">\n                        {{ $t('message.manage_modal_action_claim') }}\n                    </button>\n\n                    <button class=\"btn\" :class=\"{ active: data.type == 'restake' }\" v-if=\"store.networks[store.networkManageModal].restake && store.networks[store.networkManageModal].status\" @click=\"data.type = 'restake'\">\n                        {{ $t('message.manage_modal_action_restake') }}\n                    </button>\n                </div>\n\n\n                <!-- Delegate -->\n                <ManageModalDelegate v-if=\"data.type == 'delegate'\" />\n\n                <!-- Redelegate -->\n                <ManageModalRedelegate v-if=\"data.type == 'redelegate'\" :validators=\"data.validators\" />\n\n                <!-- Claim -->\n                <ManageModalClaim v-if=\"data.type == 'claim'\" :validators=\"data.validators\" />\n\n                <!-- Restake -->\n                <ManageModalRestake v-if=\"data.type == 'restake'\" />\n            </div>\n        </div>\n\n        <div class=\"overlay\"></div>\n    </section>\n</template>\n\n\n<script setup>\n    import { inject, reactive } from 'vue'\n    import { useGlobalStore } from '@/stores'\n\n    // Components\n    import ManageModalDelegate from './ManageModalDelegate.vue'\n    import ManageModalRedelegate from './ManageModalRedelegate.vue'\n    import ManageModalClaim from './ManageModalClaim.vue'\n    import ManageModalRestake from './ManageModalRestake.vue'\n\n    const emitter = inject('emitter'),\n        store = useGlobalStore(),\n        data = reactive({\n            type: 'delegate',\n            validators: []\n        })\n\n\n    // Get validators for redelegate\n    if(store.showManageModal){\n        await fetch(`${store.networks[store.networkManageModal].lcd_api}/cosmos/staking/v1beta1/delegators/${store.wallets[store.networkManageModal]}/validators`)\n            .then(res => res.json())\n            .then(response => {\n                let result = response.validators.filter(el => {\n                    if(el.operator_address != store.networks[store.networkManageModal].validator) {\n                        return el\n                    }\n                })\n\n                if(result.length) {\n                    data.validators = result\n                }\n            })\n    }\n</script>\n\n\n<style>\n    #manage_modal .data\n    {\n        display: flex;\n        flex-direction: column;\n\n        height: 729px;\n    }\n\n\n    #manage_modal .form\n    {\n        display: flex;\n        flex-direction: column;\n\n        flex: 1 0 auto;\n    }\n\n\n    #manage_modal .type\n    {\n        display: flex;\n\n        margin-bottom: 22px;\n        margin-left: -8px;\n        padding-right: 60px;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n    }\n\n    #manage_modal .type > *\n    {\n        margin-bottom: 8px;\n        margin-left: 8px;\n    }\n\n\n    #manage_modal .type .btn\n    {\n        font-size: 14px;\n        font-weight: 500;\n        line-height: 17px;\n\n        display: block;\n\n        padding: 13px;\n\n        transition: .2s linear;\n\n        border: 2px solid;\n        border-radius: 14px;\n        background: #191919;\n    }\n\n    #manage_modal .type .btn:hover,\n    #manage_modal .type .btn.active\n    {\n        color: #000;\n\n        border-color: #fff;\n        background: #fff;\n    }\n\n\n    #manage_modal .notice\n    {\n        margin-top: 20px;\n        padding: 14px;\n\n        text-align: center;\n\n        border-radius: 17px;\n        background: #191919;\n    }\n\n\n    #manage_modal .notice .title\n    {\n        font-weight: 600;\n        line-height: 19px;\n\n        margin-bottom: 6px;\n    }\n\n\n    #manage_modal .notice .desc\n    {\n        color: #8e8e8e;\n        font-size: 12px;\n        line-height: 130%;\n\n        width: 324px;\n        max-width: 100%;\n        margin: 0 auto;\n    }\n\n\n    #manage_modal .tokens\n    {\n        margin-top: 26px;\n    }\n\n\n    #manage_modal .tokens > *\n    {\n        display: flex;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n    }\n\n    #manage_modal .tokens > * + *\n    {\n        margin-top: 10px;\n        padding-top: 10px;\n\n        border-top: 1px solid rgba(255, 255, 255, .05);\n    }\n\n\n    #manage_modal .tokens .label\n    {\n        color: #8e8e8e;\n        font-size: 14px;\n        line-height: 17px;\n    }\n\n\n    #manage_modal .tokens .val\n    {\n        font-weight: 600;\n        line-height: 19px;\n\n        white-space: nowrap;\n\n        font-feature-settings: 'pnum' on, 'lnum' on;\n    }\n\n\n    #manage_modal .fields\n    {\n        display: flex;\n        flex-direction: column;\n\n        margin-top: 30px;\n\n        flex: 1 0 auto;\n    }\n\n\n    #manage_modal .fields .line\n    {\n        margin-bottom: 30px;\n    }\n\n\n    #manage_modal .fields .label\n    {\n        color: #8e8e8e;\n        font-size: 14px;\n        line-height: 17px;\n\n        margin-bottom: 16px;\n    }\n\n\n    #manage_modal .fields .field\n    {\n        position: relative;\n    }\n\n\n    #manage_modal .fields .input\n    {\n        color: currentColor;\n        font-family: var(--font_family);\n        font-size: var(--font_size);\n        font-weight: 500;\n\n        display: block;\n\n        width: 100%;\n        height: 55px;\n        padding: 0 9px 2px;\n\n        transition: border-color .2s linear;\n\n        border: 1px solid transparent;\n        border-radius: 17px;\n        background: #191919;\n\n        font-feature-settings: 'pnum' on, 'lnum' on;\n    }\n\n    #manage_modal .fields .validator .input\n    {\n        padding-right: 77px;\n    }\n\n    #manage_modal .fields .amount .input\n    {\n        padding-right: 154px;\n    }\n\n    #manage_modal .fields .input:read-only\n    {\n        pointer-events: none;\n    }\n\n    #manage_modal .fields .input:focus\n    {\n        border-color: #950fff;\n    }\n\n\n    #manage_modal .fields .unit\n    {\n        color: #8e8e8e;\n        line-height: 19px;\n\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 80px;\n        bottom: 0;\n\n        height: 19px;\n        margin: auto;\n\n        white-space: nowrap;\n        text-transform: uppercase;\n    }\n\n\n    #manage_modal .fields .max_btn\n    {\n        line-height: 19px;\n\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 10px;\n        bottom: 0;\n\n        display: block;\n\n        width: 60px;\n        height: 39px;\n        margin: auto;\n\n        transition: .2s linear;\n        text-transform: uppercase;\n\n        border: 2px solid;\n        border-radius: 14px;\n    }\n\n    #manage_modal .fields .max_btn:hover\n    {\n        color: #000;\n\n        border-color: #fff;\n        background: #fff;\n    }\n\n    #manage_modal .fields .max_btn:disabled\n    {\n        pointer-events: none;\n\n        opacity: .5;\n    }\n\n\n    #manage_modal .fields .arr\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 19px;\n        bottom: 0;\n\n        display: flex;\n\n        width: 24px;\n        height: 24px;\n        margin: auto;\n\n        pointer-events: none;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n\n    #manage_modal .fields .clear_btn + .arr\n    {\n        right: 44px;\n    }\n\n    #manage_modal .fields .arr svg\n    {\n        display: block;\n\n        width: 20px;\n        height: 20px;\n    }\n\n\n    #manage_modal .fields .clear_btn\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 10px;\n        bottom: 0;\n\n        display: flex;\n\n        width: 24px;\n        height: 24px;\n        margin: auto;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n\n    #manage_modal .fields .clear_btn svg\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n    }\n\n\n    #manage_modal .fields .dropdown\n    {\n        position: absolute;\n        z-index: 5;\n        top: 100%;\n        left: 0;\n\n        display: none;\n\n        width: 100%;\n        margin-top: 10px;\n        padding: 6px 4px;\n\n        border-radius: 10px;\n        background: #101010;\n    }\n\n    #manage_modal .fields .input.active ~ .dropdown\n    {\n        display: block;\n    }\n\n\n    #manage_modal .fields .dropdown .scroll\n    {\n        overflow: auto;\n\n        max-height: 128px;\n        padding-right: 4px;\n    }\n\n    #manage_modal .fields .dropdown .scroll::-webkit-scrollbar\n    {\n        width: 4px;\n        height: 4px;\n\n        border-radius: 5px;\n    }\n\n    #manage_modal .fields .dropdown .scroll > * + *\n    {\n        margin-top: 4px;\n    }\n\n\n    #manage_modal .fields .dropdown .btn\n    {\n        font-size: 14px;\n        line-height: 17px;\n\n        display: block;\n\n        width: 100%;\n        padding: 6px;\n\n        transition: background .2s linear;\n        text-align: left;\n        pointer-events: auto;\n\n        border-radius: 8px;\n    }\n\n    #manage_modal .fields .dropdown .btn:hover,\n    #manage_modal .fields .dropdown .btn.active\n    {\n        background: #191919;\n    }\n\n\n    #manage_modal .fields .exp\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 17px;\n\n        margin-top: 10px;\n\n        font-feature-settings: 'pnum' on, 'lnum' on;\n    }\n\n\n    #manage_modal .btns\n    {\n        display: flex;\n\n        margin-top: auto;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    #manage_modal .btns .btn\n    {\n        color: #fff;\n        font-weight: 500;\n        line-height: 19px;\n\n        display: block;\n\n        width: 100%;\n        padding: 13px;\n\n        transition: .2s linear;\n\n        border: 1px solid #950fff;\n        border-radius: 14px;\n    }\n\n    #manage_modal .btns .btn:disabled\n    {\n        cursor: default;\n        pointer-events: none;\n    }\n\n    #manage_modal .btns .btn.w50\n    {\n        width: calc(50% - 5px);\n    }\n\n\n    #manage_modal .btns .btn:hover\n    {\n        background: #950fff;\n    }\n\n    #manage_modal .btns .btn:active\n    {\n        border-color: #7700e1;\n        background: #7700e1;\n    }\n\n\n    #manage_modal .btns .btn.green\n    {\n        border-color: #1bc562;\n        background: #1bc562;\n    }\n\n    #manage_modal .btns .btn.green:hover\n    {\n        border-color: #11bb58;\n        background: #11bb58;\n    }\n\n    #manage_modal .btns .btn.green:active\n    {\n        border-color: #00a744;\n        background: #00a744;\n    }\n\n\n    #manage_modal .btns .btn.red\n    {\n        border-color: #eb5757;\n        background: #eb5757;\n    }\n\n    #manage_modal .btns .btn.red:hover\n    {\n        border-color: #e14d4d;\n        background: #e14d4d;\n    }\n\n    #manage_modal .btns .btn.red:active\n    {\n        border-color: #d74343;\n        background: #d74343;\n    }\n\n\n    #manage_modal .btns .btn.grey\n    {\n        border-color: #282828;\n        background: #282828;\n    }\n\n    #manage_modal .btns .btn.grey:hover\n    {\n        border-color: #950fff;\n        background: #950fff;\n    }\n\n    #manage_modal .btns .btn.grey:active\n    {\n        border-color: #7700e1;\n        background: #7700e1;\n    }\n\n\n    #manage_modal .btns .btn.fiolet\n    {\n        border-color: #950fff;\n        background: #950fff;\n    }\n\n    #manage_modal .btns .btn.fiolet:hover\n    {\n        border-color: #7700e1;\n        background: #7700e1;\n    }\n\n\n\n    #manage_modal .authz_exp\n    {\n        color: #8e8e8e;\n        font-size: 12px;\n        line-height: 130%;\n\n        margin-top: auto;\n        padding: 14px;\n\n        text-align: center;\n\n        border-radius: 17px;\n        background: #191919;\n    }\n</style>","import script from \"./ManageModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ManageModal.vue?vue&type=style&index=0&id=48e0c564&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <footer>\n        <div class=\"cont row\">\n            <div class=\"text\">\n                <span>{{ $t('message.footer_contact') }}</span>\n                <img src=\"/ic_and.svg\" alt=\"\">\n                <span>{{ $t('message.footer_support') }}</span>\n            </div>\n\n            <div class=\"socials\">\n                <a href=\"https://github.com/bro-n-bro\" target=\"_blank\" rel=\"noopener nofollow\">\n                    <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_social_github\"></use></svg>\n                </a>\n\n                <a href=\"https://t.me/bro_n_bro_community\" target=\"_blank\" rel=\"noopener nofollow\">\n                    <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_social_telegram\"></use></svg>\n                </a>\n\n                <a href=\"https://twitter.com/Bro_n_Bro\" target=\"_blank\" rel=\"noopener nofollow\">\n                    <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_social_twitter\"></use></svg>\n                </a>\n\n                <a href=\"https://keybase.io/bro_n_bro\" target=\"_blank\" rel=\"noopener nofollow\">\n                    <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_social_keybase\"></use></svg>\n                </a>\n\n                <a href=\"https://cyb.ai/network/bostrom/contract/bostrom1ndwqfv2skglrmsqu4wlneepthyrquf9r7sx6r0\" target=\"_blank\" rel=\"noopener nofollow\">\n                    <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_social_cyb\"></use></svg>\n                </a>\n            </div>\n        </div>\n    </footer>\n</template>\n\n\n<style scoped>\n    footer\n    {\n        margin-top: 60px;\n        padding: 20px 0 40px;\n\n        border-top: 1px solid rgba(255, 255, 255, .1);\n    }\n\n\n    footer .text\n    {\n        font-size: 18px;\n        line-height: 22px;\n\n        display: flex;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    footer .text > * + *\n    {\n        margin-left: 10px;\n    }\n\n\n    footer .text img\n    {\n        display: block;\n    }\n\n\n\n    footer .socials\n    {\n        display: flex;\n\n        margin-right: 100px;\n        margin-left: auto;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    footer .socials a\n    {\n        color: currentColor;\n\n        display: block;\n\n        transition: color .2s linear;\n        text-decoration: none;\n    }\n\n    footer .socials a + a\n    {\n        margin-left: 10px;\n    }\n\n\n    footer .socials .icon\n    {\n        display: block;\n\n        width: 28px;\n        height: 28px;\n    }\n\n\n    footer .socials a:hover\n    {\n        color: #950fff;\n    }\n\n\n    footer .socials a:active\n    {\n        color: #7700e1;\n    }\n\n</style>","import { render } from \"./Footer.vue?vue&type=template&id=56b2c520&scoped=true\"\nconst script = {}\n\nimport \"./Footer.vue?vue&type=style&index=0&id=56b2c520&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-56b2c520\"]])\n\nexport default __exports__","<template>\n    <div class=\"main\">\n        <!-- Header -->\n        <Header />\n\n        <!-- Router view -->\n        <RouterView />\n\n        <!-- Manage modal -->\n        <Suspense>\n        <ManageModal v-if=\"store.showManageModal\" />\n        </Suspense>\n\n        <!-- Feedback -->\n        <Feedback />\n    </div>\n\n    <!-- Footer -->\n    <Footer />\n</template>\n\n\n<script setup>\n    import { useGlobalStore } from '@/stores'\n\n    // Components\n    import Header from '../components/Header.vue'\n    import ManageModal from '../components/modal/ManageModal.vue'\n    import Feedback from '../components/Feedback.vue'\n    import Footer from '../components/Footer.vue'\n\n\n    const store = useGlobalStore()\n</script>\n","import script from \"./Default.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Default.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\nimport { useGlobalStore } from '@/stores'\n\nimport errorLayut from '../layouts/Error.vue'\nimport defaultLayut from '../layouts/Default.vue'\n\nconst routes = [\n\t{\n\t\tpath: '/:pathMatch(.*)',\n\t\tname: 'Error',\n\t\tcomponent: () => import('../views/Error404.vue'),\n\t\tmeta: {\n\t\t\tlayout: errorLayut,\n\t\t\taccessDenied: ['without_keplr']\n\t\t}\n\t},\n\t{\n\t\tpath: '/keplr_error',\n\t\tname: 'KeplrError',\n\t\tcomponent: () => import('../views/KeplrError.vue'),\n\t\tmeta: {\n\t\t\tlayout: errorLayut,\n\t\t\taccessDenied: ['with_keplr']\n\t\t}\n\t},\n\t{\n\t\tpath: '/keplr_reload',\n\t\tname: 'KeplrReload',\n\t\tcomponent: () => import('../views/KeplrReload.vue'),\n\t\tmeta: {\n\t\t\tlayout: errorLayut,\n\t\t\taccessDenied: ['with_keplr']\n\t\t}\n\t},\n\t{\n\t\tpath: '/under_construction',\n\t\tname: 'Under construction',\n\t\tcomponent: () => import('../views/UnderConstruction.vue'),\n\t\tmeta: {\n\t\t\tlayout: errorLayut,\n\t\t\taccessDenied: ['without_keplr']\n\t\t}\n\t},\n\t{\n\t\tpath: '/dashboard/',\n\t\tname: 'Dashboard',\n\t\tcomponent: () => import('../views/Dashboard.vue'),\n\t\tmeta: {\n\t\t\tlayout: defaultLayut,\n\t\t\taccessDenied: ['without_keplr', 'not_connected', 'with_passport']\n\t\t}\n\t},\n\t{\n\t\tpath: '/create_passport',\n\t\tname: 'CreatePassport',\n\t\tcomponent: () => import('../views/CreatePassport.vue'),\n\t\tmeta: {\n\t\t\tlayout: defaultLayut,\n\t\t\taccessDenied: ['without_keplr', 'not_connected', 'with_passport']\n\t\t}\n\t},\n\t{\n\t\tpath: '/account/:network',\n\t\tname: 'Account',\n\t\tcomponent: () => import('../views/Account.vue'),\n\t\tmeta: {\n\t\t\tlayout: defaultLayut,\n\t\t\taccessDenied: ['without_keplr', 'not_connected', 'without_passport']\n\t\t}\n\t},\n\t{\n\t\tpath: '/account/passport',\n\t\tname: 'Passport',\n\t\tcomponent: () => import('../views/Passport.vue'),\n\t\tmeta: {\n\t\t\tlayout: defaultLayut,\n\t\t\taccessDenied: ['without_keplr', 'not_connected', 'without_passport']\n\t\t}\n\t},\n\t{\n\t\tpath: '/proposals/:network',\n\t\tname: 'Proposals',\n\t\tcomponent: () => import('../views/Proposals.vue'),\n\t\tmeta: {\n\t\t\tlayout: defaultLayut,\n\t\t\taccessDenied: ['without_keplr', 'not_connected', 'without_passport']\n\t\t}\n\t},\n\t{\n\t\tpath: '/proposal/:id',\n\t\tname: 'Proposal',\n\t\tcomponent: () => import('../views/Proposal.vue'),\n\t\tmeta: {\n\t\t\tlayout: defaultLayut,\n\t\t\taccessDenied: ['without_keplr', 'not_connected', 'without_passport']\n\t\t}\n\t},\n\t{\n\t\tpath: '/',\n\t\tname: 'MainPage',\n\t\tcomponent: () => import('../views/MainPage.vue'),\n\t\tmeta: {\n\t\t\tlayout: defaultLayut,\n\t\t\taccessDenied: ['without_keplr']\n\t\t}\n\t}\n]\n\nconst router = createRouter({\n\thistory: createWebHistory(),\n\troutes\n})\n\n\nrouter.beforeEach((to, from, next) => {\n\tconst store = useGlobalStore(),\n\t\tmodalId = to.query.manage_modal,\n\t\tref = to.query.ref\n\n\tif (modalId) {\n\t\tstore.networkManageModal = modalId\n\t}\n\n\tif (ref) {\n\t\tstore.ref = ref\n\t}\n\n\t// Current network\n\tto.params.network\n\t\t? store.currentNetwork = to.params.network\n\t\t: store.currentNetwork = ''\n\n\n\t// Get currencies price\n\tstore.getCurrenciesPrice()\n\n\n\t// Connect wallet\n\tsetTimeout(async () => {\n\t\tif(!store.connected && typeof window.keplr != 'undefined') {\n\t\t\tawait store.connectWallet()\n\t\t}\n\n\t\t// Check page access\n\t\tto.matched.some(record => {\n\t\t\t// Array with prohibitions\n\t\t\tlet access = record.meta.accessDenied\n\n\t\t\tif (access) {\n\t\t\t\t// Forbidden without keplr\n\t\t\t\tif (access.includes('without_keplr') && typeof window.keplr == 'undefined') {\n\t\t\t\t\tnext({ path: '/keplr_error' })\n\t\t\t\t\treturn false\n\t\t\t\t}\n\n\t\t\t\t// Forbidden with keplr\n\t\t\t\tif (access.includes('with_keplr') && typeof window.keplr != 'undefined') {\n\t\t\t\t\tnext({ name: 'MainPage' })\n\t\t\t\t\treturn false\n\t\t\t\t}\n\n\t\t\t\t// Wallet not connected\n\t\t\t\tif (access.includes('not_connected') && !store.connected) {\n\t\t\t\t\tnext({ name: 'MainPage' })\n\t\t\t\t\treturn false\n\t\t\t\t}\n\n\t\t\t\t// Forbidden with a passport\n\t\t\t\tif (access.includes('with_passport') && store.account.moonPassport) {\n\t\t\t\t\tnext('/account/cosmoshub')\n\t\t\t\t\treturn false\n\t\t\t\t}\n\n\t\t\t\t// Forbidden without a passport\n\t\t\t\tif (access.includes('without_passport') && !store.account.moonPassport && !store.account.moonPassportOwnerAddress) {\n\t\t\t\t\tnext({ name: 'Dashboard' })\n\t\t\t\t\treturn false\n\t\t\t\t}\n\n\t\t\t\t// Forbidden with a global passport\n\t\t\t\tif (access.includes('with_global_passport') && store.account.moonPassportOwnerAddress && !store.account.moonPassport) {\n\t\t\t\t\tnext('/account/cosmoshub')\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\t// Change Keplr account\n\t\twindow.addEventListener('keplr_keystorechange', () => {\n\t\t\t// Reset store\n\t\t\t// await store.reset()\n\n\t\t\t// Reload page\n\t\t\tif(!store.showAddAddressModal) {\n\t\t\t\twindow.location.reload()\n\t\t\t}\n\t\t})\n\n\t\t// App full loaded\n\t\tstore.appLoaded = true\n\n\t\tnext()\n\t})\n})\n\n\nexport default router\n","export default {\n    // English\n    en: {\n        message: {\n            'page_title': 'Bro APP',\n\n\n            // IPFS\n            'ipfs': 'Ipfs node',\n\n\n            // Error page\n            'error_title_404': 'Page was lost in space....<br> Are you sure that it exist?',\n\n\n            // Under construction page\n            'under_construction_title': 'This part of site is under construction',\n\n\n            // Mobile plug\n            'mobile_plug_title': '',\n            'mobile_plug_desc': '',\n\n\n            // Keplr Error page\n            'keplr_error_title': \"Oooops, it seems you don't have<br> a Keplr extension\",\n            'keplr_reload_title': 'Please reload the page',\n\n\n            // Buttons\n            'connect_wallet_btn': 'Сonnect wallet',\n            'details_btn': 'Details',\n            'manage_btn': 'Manage',\n            'delegate_btn': 'Delegate to your Bro',\n            'back_home_btn': 'Back to home',\n            'update_btn': 'Update',\n            'reload_btn': 'Reload',\n            'no_btn': 'No',\n            'yes_btn': 'Yes',\n            'download_png_btn': 'dowloand png',\n            'continue_btn': 'continue journey',\n            'add_address_btn': 'Add address',\n            'settings_btn': 'Setting',\n            'change_image_btn': 'Change image',\n            'update_btn': 'Aprove with tx',\n            // 'account_btn': 'Account',\n            // 'back_btn': 'Back',\n            'load_more_btn': 'Load more',\n            'next_btn': 'Next',\n            'sign_btn': 'Sign',\n            'sing_broadcast_btn': 'Sing and broadcast',\n            'done_btn': 'Done',\n            'see_more_btn': 'See more',\n            'delete_passport_btn': 'DELETE PASSPORT',\n            'keplr_install_btn': 'Install Keplr',\n            'reject_btn': 'Reject',\n            'confirm_btn': 'Confirm',\n            'agree_sign_btn': 'Agree & Sign',\n\n\n            // Main page\n            'main_page_title': 'Welcome<br> to the Bro App',\n            // 'main_page_desc': 'Bro will help decompose active',\n\n\n            // Make a choice\n            'choice_title': 'Create your moon citizen for full feature access',\n\n            // Dashboard\n            'personal_apr': 'Personal APR',\n            'RPDE': 'RPDE',\n\n\n            // Create passport\n            'passport_avatar_label': 'Upload avatar',\n            'passport_avatar_file_size': 'File up to 5 MB',\n            'passport_avatar_mimetype_size': 'Only jpg, png',\n            'passport_constitution_link': 'read constitution',\n            'passport_name_label': 'Nickname',\n            'passport_citizenship_label': 'Citizenship',\n            'passport_citizenship_text': 'Moon confirmed citizen',\n            'passport_name_placeholder': 'Choose name',\n            'passport_address_exp': 'Adress',\n            'passport_name_exp': 'Min 8 characters',\n            'passport_constitution_exp': 'Creating bostrom x bronbro passport im confirming i have read constitution',\n            'passport_activation_label': 'я крутой',\n\n\n            // Proposals\n            'proposal_date_label_default': 'Voting ended:',\n            'proposal_deposite_label_collected': 'Collected funds:',\n            'proposal_deposite_label_necessary': 'Necessary funds:',\n            'proposal_voting_label_yes': 'Yes',\n            'proposal_voting_label_no': 'No',\n            'proposal_voting_label_nwv': 'NWV',\n            'proposal_voting_label_abstain': 'Abstain',\n\n\n            // Notofications\n            'notice_default_main_page': 'Welcome to the best Cosmos managing tool.',\n            'notice_default_dashboard': 'Welcome to our portfolio management tool. Take control of your investments and optimize your portfolio for maximum returns.',\n            'notice_default_create_passport': 'To create your passport, please ensure that you upload the information correctly. Then you will be asked to sign the transaction.',\n            'notice_default_create_passport_success': 'Congrats! You have successfully created a Passport. You can now continue the journey and explore the app in BETA 2.0.',\n            'notice_default_constitution_modal': \"By clicking 'Agree & Sign,' you confirm that you have read the Constitution in full and wish to create a passport. After clicking 'Agree & Sign,' you will be asked to sign the transaction.\",\n            'notice_default_account_passport': 'That’s your recently created passport. You can now change the image or download the passport.',\n            'notice_default_proposals_page': 'All proposals including proposals in Deposit period can be found on this page.',\n            'notice_default_account_page': 'Welcome to our portfolio management tool. Take control of your investments and optimize your portfolio for maximum returns.',\n\n            'ipfs_active_notice': \"The IPFS node is built in right in your browser. It helps store and resolves the content from the distributed storage. NFTs, moon passports, ENS, with contents address, can be resolved right here. It is green because the IPFS node is active and resolves the content.\",\n            'ipfs_not_active_notice': \"The IPFS node is built in right in your browser. It helps store and resolves the content from the distributed storage. NFTs, moon passports, ENS, with contents address, can be resolved right here. It is red because the IPFS node is inactive and not resolves the content.\",\n\n            'currency_notice': \"The currency for the account valuation\",\n            'username_notice': \"Chosen keplr account\",\n            'avatar_notice': \"Your Moon passport avatar\",\n\n            'network_notice': \"The network health is {health}. That's why it's {color}. This parameter is calculated as root from the multiplication of the number of validators that can stop the network and the number of validators that can fork the network. The hex is blinking with frequency is depended on network APR.\",\n            'network_sum_notice': \"The sum of your tokens in {network} network\",\n            'network_tokens_notice': \"The amount of staked tokens is {delegations_tokens} {denom}. The amount of liquid tokens is {availabel_tokens} {denom}. The amount of ready-to-claim reward tokens is {rewards_tokens} {denom}. The amount {denom} tokens outside the {network} is {ibc_tokens} {denom}\",\n            'network_personal_APR_notice': \"Your personal APR, given validators commissions\",\n            'network_RPDE_notice': \"Rewards Per Day Estimation. The amount of {denom} tokens you're earning per day.\",\n\n            'network_lock_notice': \"It is greyed out and locked because you don't have tokens in this network. To unlock the network and see the analytics delegate tokens to your Bro.\",\n            'network_lock_notice2': \"It is highlighted in white because you have tokens in this network but none of them are delegated to Bro_n_Bro, that's why Network is currently locked. To unlock the network and see the analytics delegate tokens to your Bro.\",\n\n            'account_charts_tab1_notice': 'The Stake Management tab shows how many staked, liquid, and unbonding tokens you have in your account, providing a comprehensive view of your current staking activity.',\n            'account_charts_tab2_notice': 'The Liquid Management tab shows all of your liquid tokens for the selected networks, on both Outside and IBC channels, providing a detailed overview of your current holdings.',\n            'account_charts_tab3_notice': 'The Asset Management tab represents all networks and offers a complete view of your entire portfolio',\n            'account_charts_tab4_notice': 'The Network Management tab represents the value of all tokens in your portfolio and provides a complete overview on network level. ',\n            'account_charts_tab5_notice': 'The Account Management tab provides a detailed breakdown of all your linked accounts, offering a complete overview for each.',\n\n            'account_balance_notice': \"Your account valuation in the chosen currency\",\n            'account_personal_APR_notice': \"Your personal APR, given validators commissions in all displayed networks.\",\n            'account_RPDE_notice': \"Rewards Per Day Estimation. The number of tokens in the chosen currency you earn per day from all displayed networks.\",\n\n            'notice_delete_address': 'To Delete linked account please press on “delete icon” for selected address and then confirm your actions.',\n            'notice_edit_address': 'To Edit linked account please press on “edit icon” for selected address and then confirm your actions.',\n\n            'notice_add_address_step1': 'Please select a new address in Keplr to be able to link it to the portfolio.',\n            'notice_add_address_step2': 'Select the right address that you want to add to the portfolio.',\n            'notice_add_address_step2_error': 'The address you have selected already linked to your portfolio, please switch to another account.',\n            'notice_add_address_step3': 'To approve selected address and confirm the change you need to sign a transaction.',\n            'notice_add_address_step4': 'To complete the process, you need to switch to your passport account in Keplr.',\n            'notice_add_address_step5': 'To finish the process and finalize adding a new account please sign a broadcast transaction.',\n            'notice_add_address_success': 'You have successfully added new wallet address to your portfolio.',\n\n\n            // Manage modal\n            'manage_modal_action_delegate': 'Delegate',\n            'manage_modal_action_redelegate': 'Redelegate',\n            'manage_modal_action_claim': 'Claim',\n            'manage_modal_action_restake': 'Restake',\n\n            'manage_modal_validator_name': 'Bro_n_Bro',\n            'manage_modal_commission': 'Commission',\n            'manage_modal_commission_sep': '-',\n\n            'manage_modal_notice_title': 'Staking will lock up your funds for {unbonding_time} days',\n            'manage_modal_claim_notice_title': 'Your claimed rewards will be added<br> to Available Balance.',\n            'manage_modal_restake_notice_title': 'You no longer have to manually claim and restake your staking rewards',\n            'manage_modal_notice_desc': 'Once you undelegate your staked {currency}, you will need to wait {unbonding_time} days for your tokens to be liquid',\n            'manage_modal_restake_notice_desc': 'enabling Restake will allow Bro_n_Bro to auto-compound your staking rewards for you.',\n\n            'manage_modal_my_delegation': 'My delegation',\n            'manage_modal_available_balance': 'Available Balance',\n            'manage_modal_rewards_balance': 'Pending Rewards',\n            'manage_modal_APR': 'APR',\n            'manage_modal_APY': 'APY',\n            'manage_modal_delegation': 'Delegation',\n            'manage_modal_pending_rewards': 'Pending Rewards',\n            'manage_modal_frequency': 'Frequency',\n            'manage_modal_frequency_val': 'at {frequency} every day',\n            'manage_modal_minimum_reward': 'Minimum Reward',\n\n            'manage_modal_delegate_amount': 'Amount to Delegate',\n            'manage_modal_redelegate_amount': 'Amount to Redelegate',\n\n            'manage_modal_max_btn': 'MAX',\n\n            'manage_modal_validator_delegate_label': 'Validator to Delegate',\n            'manage_modal_validator_redelegare_label': 'Validator from Redelegate',\n\n            'manage_modal_validator_placeholder': 'Name Validator',\n            'manage_modal_grant_amount_placeholder': 'Unlimited',\n\n            'manage_modal_validator_exp': 'Delegating to Bro_n_Bro will open all application features',\n            'manage_modal_amount_exp': '{value} {currency} is reserved for transaction fees',\n\n            'manage_modal_grant_label_status': 'Grant Status',\n            'manage_modal_grant_label_remaining': 'Grant Remaining',\n            'manage_modal_grant_status_inactive': 'Inactive',\n            'manage_modal_grant_status_active': 'Active',\n            'manage_modal_grant_expiry': 'expires {date}',\n            'manage_modal_grant_remaining': 'Unknown',\n            'manage_modal_grant_remaining_unlimited': 'Unlimited',\n\n            'manage_modal_grant_text1': 'Bro_n_Bro will be able to carry out the following transactions on your behalf',\n            'manage_modal_grant_text2': '<b style=\"color: #fff;\">Delegate</b> — allowed to delegate any amount to only their own validator',\n            'manage_modal_grant_text3': 'This grant will expire automatically on {date}',\n            'manage_modal_grant_text4': 'REStake only re-delegates Bro_n_Bro’s accrued rewards and tries not to touch your balance',\n\n            'manage_modal_grant_label_amount': 'Max amount',\n            'manage_modal_grant_label_expiry': 'Expiry date',\n\n            'manage_modal_grant_amount_exp': 'Reduces with every delegation made by the validator. Leave empty for unlimited',\n            'manage_modal_grant_expiry_exp': 'Date the grant will expire. After this date you will need to re-grant',\n            'manage_modal_restake_authz_exp': 'Ledger is expected in the near future.',\n\n            'manage_modal_delegate_btn': 'Delegate',\n            'manage_modal_redelegate_btn': 'Redelegate',\n            'manage_modal_claim_all_btn': 'Claim all',\n            'manage_modal_enable_restake_btn': 'Enable Restake',\n            'manage_modal_disable_restake_btn': 'Disable Restake',\n            'manage_modal_manage_grant_btn': 'Manage Grant',\n            'manage_modal_success_back_btn': 'Got it!',\n            'manage_modal_again_btn': 'Try again!',\n\n            'manage_modal_success_title': \"<a href='https://www.mintscan.io/{network}/txs/{hash}' target='_blank' rel='noopener nofollow'>Transaction</a><br> is successfully broadcasted\",\n\n            'manage_modal_error_2': \"tx parse error\",\n            'manage_modal_error_3': \"invalid sequence\",\n            'manage_modal_error_4': \"unauthorized\",\n            'manage_modal_error_5': \"insufficient funds\",\n            'manage_modal_error_6': \"unknown request\",\n            'manage_modal_error_7': \"invalid address\",\n            'manage_modal_error_8': \"invalid pubkey\",\n            'manage_modal_error_9': \"unknown address\",\n            'manage_modal_error_10': \"invalid coins\",\n            'manage_modal_error_11': \"Broadcasting transaction failed: out of gas try again and increase gas amount\",\n            'manage_modal_error_12': \"memo too large\",\n            'manage_modal_error_13': \"insufficient fee\",\n            'manage_modal_error_14': \"maximum number of signatures exceeded\",\n            'manage_modal_error_15': \"no signatures supplied\",\n            'manage_modal_error_16': \"failed to marshal JSON bytes\",\n            'manage_modal_error_17': \"failed to unmarshal JSON bytes\",\n            'manage_modal_error_18': \"invalid request\",\n            'manage_modal_error_19': \"tx already in mempool\",\n            'manage_modal_error_20': \"mempool is full\",\n            'manage_modal_error_21': \"tx too large\",\n            'manage_modal_error_22': \"key not found\",\n            'manage_modal_error_23': \"invalid account password\",\n            'manage_modal_error_24': \"tx intended signer does not match the given signer\",\n            'manage_modal_error_25': \"invalid gas adjustment\",\n            'manage_modal_error_26': \"invalid height\",\n            'manage_modal_error_27': \"invalid version\",\n            'manage_modal_error_28': \"invalid chain-id\",\n            'manage_modal_error_29': \"invalid type\",\n            'manage_modal_error_30': \"tx timeout height\",\n            'manage_modal_error_31': \"unknown extension options\",\n            'manage_modal_error_32': \"incorrect account sequence\",\n            'manage_modal_error_33': \"failed packing protobuf message to Any\",\n            'manage_modal_error_34': \"failed unpacking protobuf message from Any\",\n            'manage_modal_error_35': \"internal logic error\",\n            'manage_modal_error_36': \"conflict\",\n            'manage_modal_error_37': \"feature not supported\",\n            'manage_modal_error_38': \"not found\",\n            'manage_modal_error_39': \"Internal IO error\",\n            'manage_modal_error_40': \"error in app.toml\",\n            'manage_modal_error_41': \"invalid gas limit\",\n\n            'manage_modal_error_rejected': \"The transaction has been rejected\",\n\n\n            // Constitution modal\n            'constitution_modal_title': 'Constitution',\n\n\n            // Account\n            'account_networks_title': 'Networks',\n            'account_abilities_title': 'Abilities',\n            'account_validators_title': 'Validators',\n            'account_proposals_title': 'Proposals',\n            'account_connected_addresses_title': 'My Portfolio',\n\n            'account_connected_addresses_all': 'View all',\n\n            'account_charts_tab1': 'Stake',\n            'account_charts_tab2': 'Liquid',\n            'account_charts_tab3': 'Assets',\n            'account_charts_tab4': 'Networks',\n            'account_charts_tab5': 'Accounts',\n\n            'account_charts_block_title1': 'Stake Management',\n            'account_charts_desc1': 'contain staked, liquid and unbonding tokens',\n\n            'account_charts_block_title2': 'Liquid Management',\n            'account_charts_desc2': 'contain liquid, rewards and IBC tokens',\n\n            'account_charts_block_title3': 'Network Management',\n            'account_charts_desc3': 'represent all tokens in portfolio',\n\n            'account_charts_block_title4': 'Asset Management',\n            'account_charts_desc4': 'represent all networks in portfolio',\n\n            'account_charts_block_title5': 'Account Management',\n            'account_charts_desc5': 'contain your linked accounts',\n\n            'account_charts_staked_label': 'Staked',\n            'account_charts_outside_label': 'Outside',\n            'account_charts_liquid_tokens_label': 'Liquid',\n            'account_charts_unbonding_label': 'Unbondend',\n            'account_charts_ibc_label': 'IBC Tokens',\n            'account_charts_rewards_label': 'Rewards',\n            'account_charts_on_chain': 'On',\n\n            'account_charts_total_assets': 'Total Assets',\n\n            'account_validators_col_account_name': 'Account name',\n            'account_validators_col_network': 'Network',\n            'account_validators_col_validator': 'Validator',\n            'account_validators_col_account_percent': 'Account %',\n            'account_validators_col_passport_percent': 'Passport %',\n\n            'account_proposals_col_network': 'Network',\n            'account_proposals_col_name': 'Name',\n            'account_proposals_col_type': 'Type',\n            'account_proposals_col_status': 'Status',\n\n            'account_proposals_status_all': 'All proposals',\n            'account_proposals_status_deposite': 'Deposit period',\n            'account_proposals_status_voting': 'Voting period',\n            'account_proposals_status_passed': 'Passed',\n            'account_proposals_status_rejected': 'Rejected',\n\n            'account_RPDE': 'RPDE',\n            'account_APR': 'APR',\n            'account_voting_power': 'Voting power',\n            'account_passport_value': 'Passport Value',\n\n            'account_duplicate_ext': 'Duplicate Address',\n\n\n            // Add proposal modal\n            'add_proposal_modal_title': 'Create Proposal',\n            'add_proposal_label_type': 'Choose type',\n            'add_proposal_label_title': 'Title',\n            'add_proposal_label_descriptin': 'Description',\n            'add_proposal_label_deposit': 'Deposit',\n            'add_proposal_submit_btn': 'Create Governance',\n\n            'add_proposal_type_Text': 'Text Proposal',\n            'add_proposal_type_ParameterChange': 'Parameter Change',\n            'add_proposal_type_CommunityPoolSpend': 'Community Pool Spend',\n            'add_proposal_type_UpdateSmartContract': 'Update Smart Contract',\n            'add_proposal_type_SoftwareUpgrade': 'Software Upgrade',\n\n\n            // Validator modal\n            'validator_modal_title': 'Validator details',\n\n            'validator_modal_website_btn': 'Website',\n            'validator_modal_mintscan_btn': 'Mintscan',\n            'validator_modal_broscore_btn': 'Bro Score',\n\n            'validator_modal_active_set': 'Active',\n            'validator_modal_inactive_set': 'Inactive',\n\n            'validator_modal_operator_address_label': 'Operator Address',\n            'validator_modal_details_label': 'Details',\n\n            'validator_modal_commission_label': 'Commission',\n            'validator_modal_ownership_label': 'Self Bonded/<br>Ownership',\n            'validator_modal_total_delegated_label': 'Total delegated amount',\n            'validator_modal_voted_label': 'Props voted',\n            'validator_modal_blurring_label': 'Tokens blurring',\n\n            'validator_modal_col_greed_notice': \"The percentage of validator's commision.\",\n            'validator_modal_col_self_bonded_ownership_notice': 'The number of tokens delegated to yourself. The ratio of the number of tokens delegated to yourself to the total number of delegations.',\n            'validator_modal_col_voted_notice': 'This criterion is about the number of votes ({voted}) for the last 5 ended proposals.',\n            'validator_modal_col_total_delegated_notice': 'Total amount of tokens delegated to the validator',\n            'validator_modal_col_blurring_notice': 'This criterion shows how many tokens were lost by the validator on the slashing in fractions.',\n\n\n            // Add address modal\n            'add_address_modal_title': 'Add new address',\n            'add_address_modal_error_desc': 'To add a new address — select a different Keplr account',\n\n            'add_address_modal_step1_name': 'Choose Address',\n            'add_address_modal_step2_name': 'Approve Address',\n            'add_address_modal_step3_name': 'Switch the Account',\n            'add_address_modal_step4_name': 'Accounts Linked',\n\n            'add_address_modal_step1_title': 'Select the address',\n            'add_address_modal_step2_title': 'To approve the address you need to sign the transaction.',\n            'add_address_modal_step3_title': 'Switch to passport account in Keplr',\n            'add_address_modal_step4_title': 'Almost there...',\n            'add_address_modal_step5_title': 'Bravo! Congrats!',\n\n            'add_address_added_label': 'Added',\n\n\n            // Filter\n            'filter_title': 'Filter',\n\n\n            // Feedback\n            'feedback_title': 'Report a bug here',\n            'feedback_desc': 'Share it with us',\n            'feedback_telegram_link': 'Telegram',\n            'feedback_github_link': 'Github',\n\n\n            // Notification\n            'notification_progress_title': 'Transaction is in progress',\n            'notification_successful_title': 'Transaction successful',\n            'notification_failed_title': 'Transaction failed',\n            'notification_explorer_link': 'Explorer',\n            'notification_error_file_size_title': 'Error',\n            'notification_error_file_size_text': 'Selected image is too large. Please select new < {size}',\n            'notification_error_nickName_title': 'Nickname error',\n            'notification_error_nickName_desc': 'There is already a passport for this name, come up with a new one',\n            'notification_passport_signature': 'Constitution successfully signed',\n            'notification_passport_activation_process': 'Account activation...',\n            'notification_passport_activation_success': 'Account successfully activated',\n            'notification_passport_activation_error': 'Account activation error',\n            'notification_passport_activation_error_desc': 'Try again',\n\n            'notification_action_create_passport': 'Create passport',\n            'notification_passport_create_process': 'Passport creation...',\n            'notification_success_create_passport_title': 'Passport created successfully',\n            'notification_error_create_passport_title': 'Passport issue error',\n\n            'notification_action_update_passport': 'Update passport',\n            'notification_action_delete_passport': 'Delete passport',\n            'notification_passport_update_process': 'Passport updating...',\n            'notification_passport_delete_process': 'Passport deleting...',\n            'notification_success_update_passport_title': 'Passport updated successfully',\n            'notification_success_delete_passport_title': 'Passport delete successfully',\n            'notification_error_update_passport_title': 'Passport issue error',\n\n            'notification_action_address_delete': 'Address delete',\n            'notification_address_deleting_process': 'Address deleting...',\n            'notification_success_address_delete_title': 'Address deleted successfully',\n\n            'notification_action_address_add': 'Address add',\n            'notification_address_adding_process': 'Address adding to passport...',\n            'notification_success_address_added_title': 'Address added successfully',\n\n            'notification_action_address_rename': 'Address rename',\n            'notification_address_renaming_process': 'Address renaming...',\n            'notification_success_address_rename_title': 'Address renamed successfully',\n\n\n            // Footer\n            'footer_contact': 'Contact',\n            'footer_support': 'Support'\n        }\n    }\n}","import { createI18n } from 'vue-i18n'\nimport VueI18nMessages from '../locale/messages'\n\n\nconst i18n = createI18n({\n    locale: 'en',\n    fallbackLocale: 'en',\n    messages: VueI18nMessages\n})\n\n\nexport default i18n","import { createApp } from 'vue'\nimport { createPinia } from 'pinia'\nimport App from './App.vue'\nimport router from './router'\nimport i18n from './locale'\nimport moment from 'moment'\nimport Notifications from '@kyvg/vue3-notification'\nimport timeago from 'vue-timeago3'\nimport VueCountdown from '@chenfengyuan/vue-countdown'\n\n\n// Events\nimport mitt from 'mitt'\nconst emitter = mitt()\n\n\n// Create App\nconst app = createApp(App)\n\n\n// Vue use\napp.use(createPinia())\napp.use(router)\napp.use(i18n)\napp.use(Notifications)\napp.use(timeago)\n\n\n// Vue provide\napp.provide('i18n', i18n)\napp.provide('emitter', emitter)\n\n\n// Filters\napp.config.globalProperties.$filters = {\n    // Add rounding\n    toFixed(value, limit) {\n        let newValue\n\n        value != 0\n            ? newValue = value.toFixed(limit)\n            : newValue = value\n\n        return newValue\n    },\n\n    // Time age\n    timeAgo(date) {\n        return moment(date).fromNow()\n    }\n}\n\n\n// Сlick element outside\nconst clickOutside = {\n    beforeMount: (el, binding) => {\n        el.clickOutsideEvent = event => {\n            if (!(el == event.target || el.contains(event.target))) {\n                binding.value()\n            }\n        }\n\n        document.addEventListener('click', el.clickOutsideEvent)\n    },\n    unmounted: el => document.removeEventListener('click', el.clickOutsideEvent),\n}\n\n\n// Directives\napp.directive('clickOut', clickOutside)\n\n\n// VueCountdown\napp.component(VueCountdown.name, VueCountdown)\n\n\n// Mount\napp.mount('#app')\n","import { useLocalStorage } from '@vueuse/core'\n\nconst account = {\n    userName: '',\n    avatar: '',\n    signature: '',\n\n    moonPassport: null,\n    moonPassportOwnerAddress: useLocalStorage('moonPassportOwnerAddress'),\n    moonPassportOwner: {},\n\n    wallets: [],\n    info: {},\n    currentWallet: useLocalStorage('currentWallet'),\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    totalPrice_usdt: 0,\n    totalPrice_atom: 0,\n    totalPrice_eth: 0,\n    totalPrice_btc: 0,\n\n    personal_APR: 0,\n    delegations_price: 0\n}\n\nexport default account","const network = {\n    name: 'Evmos',\n    status: false,\n    lcd_api: 'https://lcd.evmos-9001-2.bronbro.io',\n    rpc_api: 'https://rpc.evmos-9001-2.bronbro.io',\n    websocket_url: 'wss://rpc.evmos_9001-2.bronbro.io:443/websocket',\n    validator: 'evmosvaloper1ce4vh0e5kanlgc7z0rhcemvd8erjnfzcyfecl7',\n    denom: 'aevmos',\n    token_name: 'EVMOS',\n    chainId: 'evmos_9001-2',\n    coingecko_api: 'evmos',\n    mintscanAlias: 'evmos',\n    prefix: 'evmos',\n    address_prefix: 'evmos',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n    rewards: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    apy: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000000000000000,\n    tokens_sum: 0,\n    unbonding_time: 0,\n    gas: '500000',\n\n    restake: {\n        address: 'evmos1umjyc6jvtrwrr62z5d4afkrjtq7gyg0eq98x5k',\n        run_time: '20:15',\n        minimum_reward: 100000\n    }\n}\n\nexport default network","const network = {\n    name: 'Cosmos hub',\n    status: false,\n    lcd_api: 'https://lcd.cosmoshub-4.bronbro.io',\n    rpc_api: 'https://rpc.cosmoshub-4.bronbro.io/',\n    websocket_url: 'wss://rpc.cosmoshub-4.bronbro.io:443/websocket',\n    validator: 'cosmosvaloper106yp7zw35wftheyyv9f9pe69t8rteumjrx52jg',\n    denom: 'uatom',\n    token_name: 'ATOM',\n    chainId: 'cosmoshub-4',\n    coingecko_api: 'cosmos',\n    mintscanAlias: 'cosmos',\n    prefix: 'cosmos',\n    address_prefix: 'cosmos',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n    rewards: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    apy: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000,\n    tokens_sum: 0,\n    unbonding_time: 0,\n    proposal_need: 250,\n\n    restake: {\n        address: 'cosmos1grfk7t0k42yxpwqhr7kt4te7j73m2a3vz9aspx',\n        run_time: '19:37',\n        minimum_reward: 100000\n    }\n}\n\nexport default network","const network = {\n    name: 'Bostrom',\n    status: false,\n    lcd_api: 'https://lcd.bostrom.bronbro.io',\n    rpc_api: 'https://rpc.bostrom.bronbro.io',\n    websocket_url: 'wss://rpc.bostrom.bronbro.io:443/websocket',\n    validator: 'bostromvaloper1ydc5fy9fjdygvgw36u49yj39fr67pd9m5qexm8',\n    denom: 'boot',\n    token_name: 'MBOOT',\n    chainId: 'bostrom',\n    coingecko_api: 'bostrom',\n    prefix: 'bostrom',\n    address_prefix: 'bostrom',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n    rewards: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    apy: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000,\n    tokens_sum: 0,\n    unbonding_time: 0,\n\n    restake: {\n        address: 'bostrom1grfk7t0k42yxpwqhr7kt4te7j73m2a3vpkfrlp',\n        run_time: '19:37',\n        minimum_reward: 100000\n    }\n}\n\nexport default network","const network = {\n    name: 'Osmosis',\n    status: false,\n    lcd_api: 'https://lcd.osmosis-1.bronbro.io',\n    rpc_api: 'https://rpc.osmosis-1.bronbro.io',\n    websocket_url: 'wss://rpc.osmosis-1.bronbro.io:443/websocket',\n    validator: 'osmovaloper13tk45jkxgf7w0nxquup3suwaz2tx483xe832ge',\n    denom: 'uosmo',\n    token_name: 'OSMO',\n    chainId: 'osmosis-1',\n    coingecko_api: 'osmosis',\n    mintscanAlias: 'osmosis',\n    prefix: 'osmosis',\n    address_prefix: 'osmo',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n    rewards: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    apy: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000,\n    tokens_sum: 0,\n    unbonding_time: 0,\n\n    restake: {\n        address: 'osmo1grfk7t0k42yxpwqhr7kt4te7j73m2a3v27wqh5',\n        run_time: '19:37',\n        minimum_reward: 100000\n    }\n}\n\nexport default network","const network = {\n    name: 'Juno',\n    status: false,\n    lcd_api: 'https://lcd.juno-1.bronbro.io',\n    rpc_api: 'https://rpc.juno-1.bronbro.io',\n    websocket_url: 'wss://rpc.juno-1.bronbro.io:443/websocket',\n    validator: 'junovaloper1quqxfrxkycr0uzt4yk0d57tcq3zk7srm7sm6r8',\n    denom: 'ujuno',\n    token_name: 'JUNO',\n    chainId: 'juno-1',\n    coingecko_api: 'juno-network',\n    mintscanAlias: 'juno',\n    prefix: 'juno',\n    address_prefix: 'juno',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n    rewards: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    apy: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000,\n    tokens_sum: 0,\n    unbonding_time: 0,\n\n    restake: {\n        address: 'juno1grfk7t0k42yxpwqhr7kt4te7j73m2a3v5h7tx6',\n        run_time: '19:37',\n        minimum_reward: 100000\n    }\n}\n\nexport default network","const network = {\n    name: 'E-money',\n    status: false,\n    lcd_api: 'https://lcd.emoney-3.bronbro.io',\n    rpc_api: 'https://rpc.emoney-3.bronbro.io',\n    websocket_url: 'wss://rpc.emoney-3.bronbro.io:443/websocket',\n    validator: 'emoneyvaloper149vyxd36kxpg46rralaw6eejv4d9daqc3nv642',\n    denom: 'ungm',\n    token_name: 'NGM',\n    chainId: 'emoney-3',\n    coingecko_api: 'e-money',\n    mintscanAlias: 'emoney',\n    prefix: 'emoney',\n    address_prefix: 'emoney',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n    rewards: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    apy: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000,\n    tokens_sum: 0,\n    unbonding_time: 0,\n    gas: '250000',\n\n    restake: false\n}\n\nexport default network","const network = {\n    name: 'Stargaze',\n    status: false,\n    lcd_api: 'https://lcd.stargaze-1.bronbro.io',\n    rpc_api: 'https://rpc.stargaze-1.bronbro.io',\n    websocket_url: 'wss://rpc.stargaze-1.bronbro.io:443/websocket',\n    validator: 'starsvaloper1y58hfnm90r4efhlydx0gavz57lvm7k6uulkg3h',\n    denom: 'ustars',\n    token_name: 'STARS',\n    chainId: 'stargaze-1',\n    coingecko_api: 'stargaze',\n    mintscanAlias: 'stargaze',\n    prefix: 'stargaze',\n    address_prefix: 'stars',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n    rewards: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    apy: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000,\n    tokens_sum: 0,\n    unbonding_time: 0,\n\n    restake: {\n        address: 'stars1grfk7t0k42yxpwqhr7kt4te7j73m2a3vke2d2h',\n        run_time: '19:37',\n        minimum_reward: 100000\n    }\n}\n\nexport default network","const network = {\n    name: 'G-Bridge',\n    status: false,\n    lcd_api: 'https://lcd.gravity-bridge-3.bronbro.io',\n    rpc_api: 'https://rpc.gravity-bridge-3.bronbro.io',\n    websocket_url: 'wss://rpc.gravity-bridge-3.bronbro.io:443/websocket',\n    validator: 'gravityvaloper1vyd4k5j636erx5y5kdqghdu3rfjtwc48vdc7r6',\n    denom: 'ugraviton',\n    token_name: 'GRAV',\n    chainId: 'gravity-bridge-3',\n    coingecko_api: 'graviton',\n    mintscanAlias: 'gravity-bridge',\n    prefix: 'gravity',\n    address_prefix: 'gravity',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n    rewards: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    apy: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000,\n    tokens_sum: 0,\n    unbonding_time: 0,\n\n    restake: {\n        address: 'gravity1grfk7t0k42yxpwqhr7kt4te7j73m2a3vx40gyw',\n        run_time: '19:37',\n        minimum_reward: 100000\n    }\n}\n\nexport default network","const network = {\n    name: 'Crescent hub',\n    status: false,\n    lcd_api: 'https://lcd.crescent-1.bronbro.io',\n    rpc_api: 'https://rpc.crescent-1.bronbro.io',\n    websocket_url: 'wss://rpc.crescent-1.bronbro.io:443/websocket',\n    validator: 'crevaloper1c96vvme4k42zlvkc56fslmdpa2qj6u80xvqwau',\n    denom: 'ucre',\n    token_name: 'CRE',\n    chainId: 'crescent-1',\n    coingecko_api: 'crescent-network',\n    mintscanAlias: 'crescent',\n    prefix: 'crescent',\n    address_prefix: 'cre',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n    rewards: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    apy: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000,\n    tokens_sum: 0,\n    unbonding_time: 0,\n\n    restake: false\n}\n\nexport default network","const network = {\n    name: 'OmniFlix Network',\n    status: false,\n    lcd_api: 'https://lcd.omniflixhub-1.bronbro.io',\n    rpc_api: 'https://rpc.omniflixhub-1.bronbro.io',\n    websocket_url: 'wss://rpc.omniflixhub-1.bronbro.io:443/websocket',\n    validator: 'omniflixvaloper1e8grpphncncw9hrutyvnlv77n5dejwcne58zk4',\n    denom: 'uflix',\n    token_name: 'FLIX',\n    chainId: 'omniflixhub-1',\n    coingecko_api: 'omniflix-network',\n    mintscanAlias: 'omniflix',\n    prefix: 'omniflix',\n    address_prefix: 'omniflix',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n    rewards: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    apy: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000,\n    tokens_sum: 0,\n    unbonding_time: 0,\n\n    restake: false\n}\n\nexport default network","const network = {\n    name: 'Desmos',\n    status: false,\n    lcd_api: 'https://lcd.desmos-mainnet.bronbro.io',\n    rpc_api: 'https://rpc.desmos-mainnet.bronbro.io',\n    websocket_url: 'wss://rpc.websocket.bronbro.io:443/websocket',\n    validator: 'desmosvaloper1sykf8q94l8q8mqstf64ptuvp74ueyehxpgcq76',\n    denom: 'udsm',\n    token_name: 'DSM',\n    chainId: 'desmos-mainnet',\n    coingecko_api: 'desmos',\n    mintscanAlias: 'desmos',\n    prefix: 'desmos',\n    address_prefix: 'desmos',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n    rewards: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    apy: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000,\n    tokens_sum: 0,\n    unbonding_time: 0,\n\n    restake: {\n        address: 'desmos1vaycuz987q8g8lw6kuvy4fp7dfy7yp093rj9av',\n        run_time: '19:37',\n        minimum_reward: 100000\n    }\n}\n\nexport default network","const network = {\n    name: 'Stride',\n    status: false,\n    lcd_api: 'https://lcd.stride-1.bronbro.io',\n    rpc_api: 'https://rpc.stride-1.bronbro.io',\n    websocket_url: 'wss://rpc.stride-1.bronbro.io:443/websocket',\n    validator: 'stridevaloper1hl95uhecs4rwe0g432mknz2tsl84f0ltexpzc3',\n    denom: 'ustrd',\n    token_name: 'STRD',\n    chainId: 'stride-1',\n    coingecko_api: 'stride',\n    mintscanAlias: 'stride',\n    prefix: 'stride',\n    address_prefix: 'stride',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n    rewards: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    apy: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000,\n    tokens_sum: 0,\n    unbonding_time: 0,\n\n    restake: false\n}\n\nexport default network","const config = {\n    chainId: 'desmos-mainnet',\n    chainName: 'Desmos',\n    rpc: 'https://rpc.mainnet.desmos.network',\n    rest: 'https://api.mainnet.desmos.network',\n    bip44: {\n        coinType: 852,\n    },\n    bech32Config: {\n        bech32PrefixAccAddr: 'desmos',\n        bech32PrefixAccPub: 'desmos' + 'pub',\n        bech32PrefixValAddr: 'desmos' + 'valoper',\n        bech32PrefixValPub: 'desmos' + 'valoperpub',\n        bech32PrefixConsAddr: 'desmos' + 'valcons',\n        bech32PrefixConsPub: 'desmos' + 'valconspub',\n    },\n    currencies: [\n        {\n            coinDenom: 'DSM',\n            coinMinimalDenom: 'udsm',\n            coinDecimals: 6,\n            coinGeckoId: 'cosmos',\n            coinImageUrl: 'https://app.osmosis.zone/tokens/dsm.svg'\n        },\n    ],\n    features: [\n        'stargate',\n        'ibc-transfer',\n        'no-legacy-stdTx',\n        'ibc-go'\n    ],\n    feeCurrencies: [\n        {\n            coinDenom: 'DSM',\n            coinMinimalDenom: 'udsm',\n            coinDecimals: 6,\n            coinGeckoId: 'desmos',\n            gasPriceStep: {\n                low: 0.002,\n                average: 0.025,\n                high: 0.03\n            },\n        },\n    ],\n    stakeCurrency: {\n        coinDenom: 'DSM',\n        coinMinimalDenom: 'udsm',\n        coinDecimals: 6,\n        coinGeckoId: 'desmos',\n    },\n    beta: true\n}\n\nexport default config","const config = {\n    chainId: 'crescent-1',\n    chainName: 'crescent',\n    rpc: 'https://mainnet.crescent.network:26657',\n    rest: 'https://mainnet.crescent.network:1317',\n    bip44: {\n        coinType: 118,\n    },\n    bech32Config: {\n        bech32PrefixAccAddr: 'cre',\n        bech32PrefixAccPub: 'cre' + 'pub',\n        bech32PrefixValAddr: 'cre' + 'valoper',\n        bech32PrefixValPub: 'cre' + 'valoperpub',\n        bech32PrefixConsAddr: 'cre' + 'valcons',\n        bech32PrefixConsPub: 'cre' + 'valconspub',\n    },\n    currencies: [\n        {\n            coinDenom: 'CRE',\n            coinMinimalDenom: 'ucre',\n            coinDecimals: 6,\n            coinGeckoId: 'crescent-network',\n        },\n    ],\n    feeCurrencies: [\n        {\n            coinDenom: 'CRE',\n            coinMinimalDenom: 'ucre',\n            coinDecimals: 6,\n            coinGeckoId: 'crescent-network',\n            gasPriceStep: {\n                low: 0.001,\n                average: 0.025,\n                high: 0.04,\n            },\n        },\n    ],\n    stakeCurrency: {\n        coinDenom: 'CRE',\n        coinMinimalDenom: 'ucre',\n        coinDecimals: 6,\n        coinGeckoId: 'crescent-network',\n    }\n}\n\nexport default config","const config = {\n    chainId: 'omniflixhub-1',\n    chainName: 'omniflixhub',\n    rpc: 'https://omniflixhub-rpc.skynetvalidators.com',\n    rest: 'https://omniflixhub-api.skynetvalidators.com',\n    bip44: {\n        coinType: 118,\n    },\n    bech32Config: {\n        bech32PrefixAccAddr: 'omniflix',\n        bech32PrefixAccPub: 'omniflix' + 'pub',\n        bech32PrefixValAddr: 'omniflix' + 'valoper',\n        bech32PrefixValPub: 'omniflix' + 'valoperpub',\n        bech32PrefixConsAddr: 'omniflix' + 'valcons',\n        bech32PrefixConsPub: 'omniflix' + 'valconspub',\n    },\n    currencies: [\n        {\n            coinDenom: 'FLIX',\n            coinMinimalDenom: 'uflix',\n            coinDecimals: 6,\n            coinGeckoId: 'omniflix-network',\n        },\n    ],\n    feeCurrencies: [\n        {\n            coinDenom: 'FLIX',\n            coinMinimalDenom: 'uflix',\n            coinDecimals: 6,\n            coinGeckoId: 'omniflix-network',\n            gasPriceStep: {\n                low: 0.001,\n                average: 0.025,\n                high: 0.04,\n            },\n        },\n    ],\n    stakeCurrency: {\n        coinDenom: 'FLIX',\n        coinMinimalDenom: 'uflix',\n        coinDecimals: 6,\n        coinGeckoId: 'omniflix-network',\n    }\n}\n\nexport default config","import { defineStore } from 'pinia'\nimport { useLocalStorage } from '@vueuse/core'\nimport { CyberClient } from '@cybercongress/cyber-js'\nimport { Tendermint34Client } from '@cosmjs/tendermint-rpc'\nimport { fromBech32, toBech32 } from '@cosmjs/encoding'\nimport * as IPFS from 'ipfs-core'\nimport { generateAddress } from '@/utils'\n\n// Account\nimport account from '@/stores/account'\n\n// Networks\nimport evmos from '@/stores/networks/evmos'\nimport cosmoshub from '@/stores/networks/cosmoshub'\nimport bostrom from '@/stores/networks/bostrom'\nimport osmosis from '@/stores/networks/osmosis'\nimport juno from '@/stores/networks/juno'\nimport emoney from '@/stores/networks/emoney'\nimport stargaze from '@/stores/networks/stargaze'\nimport gravity from '@/stores/networks/gravity'\nimport crescent from '@/stores/networks/crescent'\nimport omniflix from '@/stores/networks/omniflix'\nimport desmos from '@/stores/networks/desmos'\nimport stride from '@/stores/networks/stride'\n\n\n// Config\nimport desmosConfig from '@/config/chain/desmos'\nimport crescentConfig from '@/config/chain/crescent'\nimport omniflixConfig from '@/config/chain/omniflix'\n\n\nconst networks = {\n    cosmoshub,\n    bostrom,\n    osmosis,\n    juno,\n    emoney,\n    stargaze,\n    gravity,\n    evmos,\n    crescent,\n    omniflix,\n    desmos,\n    stride\n}\n\nwindow.localStorage.setItem('account', JSON.stringify(account))\nwindow.localStorage.setItem('networks', JSON.stringify(networks))\n\n\nexport const useGlobalStore = defineStore('global', {\n    state: () => ({\n        CONTRACT_ADDRESS_PASSPORT: 'bostrom1xut80d09q0tgtch8p0z4k5f88d3uvt8cvtzm5h3tu3tsy4jk9xlsfzhxel',\n        CONSTITUTION_HASH: 'QmcHB9GKHAKCLQhmSj71qNJhENJJg8Gymd1PvvsCQBhG7M',\n        appLoaded: false,\n        node: false,\n        IPFSStatus: false,\n        recalc: true,\n        connected: false,\n        auth: false,\n        needReload: false,\n        currency: useLocalStorage('currency', 'USDT'),\n        wallets: {},\n        tooltip: '',\n        lastTXS: '',\n        manageError: '',\n        jsCyber: null,\n        constitutionStatus: null,\n\n        BTC_price: 0,\n        ETH_price: 0,\n        ATOM_price: 0,\n\n        account,\n        networks,\n\n        showManageModal: false,\n        showManageSuccessModal: false,\n        showManageErrorModal: false,\n        showManageRejectModal: false,\n        showConstitutionModal: false,\n        showAddProposalModal: false,\n        showMakeChoice: true,\n        showAddAddressModal: false,\n        showDeleteAddressModal: false,\n\n        manageModalnetwork: '',\n        ref: '',\n        currentNetwork: '',\n        currentDeleteAddress: '',\n\n        colors: ['#950FFF', '#1BC562', '#EB5757', '#0343E8', '#F79400', '#DB11D3'],\n\n        validatorInfo: {}\n    }),\n\n    actions: {\n        // Connect wallet\n        async connectWallet(updateOwnerMoonPassport = true, updateAvatar = true) {\n            // Keplr connect\n            let chainId = 'cosmoshub-4'\n\n            await window.keplr.enable(chainId)\n\n            // Cosmos singer\n            let offlineSigner = await window.getOfflineSignerAuto(chainId),\n                accounts = await offlineSigner.getAccounts(),\n                key = await window.keplr.getKey(chainId)\n\n            // Evmos Singer\n            let offlineSignerEvmos = await window.getOfflineSigner(this.networks.evmos.chainId),\n                accountsEvmos = await offlineSignerEvmos.getAccounts()\n\n            // Add chains\n            let checkChains = [\n                {\n                    chainId: 'desmos-mainnet',\n                    name: 'desmos',\n                    config: desmosConfig\n                },\n                {\n                    chainId: 'crescent-1',\n                    name: 'crescent',\n                    config: crescentConfig\n                },\n                {\n                    chainId: 'omniflixhub-1',\n                    name: 'omniflix',\n                    config: omniflixConfig\n                }\n            ]\n\n\n            // Desmos Singer\n            let accountsDesmos = {}\n\n\n            // Check chains in Keplr\n            for (let i in checkChains) {\n                try{\n                    let offlineSigner = await window.getOfflineSignerAuto(checkChains[i].chainId),\n                        accounts = await offlineSigner.getAccounts()\n\n                    if(checkChains[i].chainId == 'desmos-mainnet'){\n                        accountsDesmos = accounts\n                    }\n                } catch (error) {\n                    console.log(error)\n\n                    // Add chain in Keplr\n                    await window.keplr.experimentalSuggestChain(checkChains[i].config).then(() => this.updateNetwork(checkChains[i].name))\n                }\n            }\n\n            // Set keplr offline signer\n            this.activeKeplrAddress = accounts[0].address\n\n            // Pre wallets\n            this.$patch({\n                wallets: {\n                    'cosmoshub': accounts[0].address,\n                    'bostrom': toBech32('bostrom', fromBech32(accounts[0].address).data),\n                    'evmos': accountsEvmos[0].address,\n                    'desmos': accountsDesmos[0].address\n                }\n            })\n\n            // Set connected status\n            this.connected = true\n\n            // Get moon passport\n            await this.getMoonPassport()\n\n            if (updateOwnerMoonPassport && this.account.moonPassport) {\n                // Set owner to localStorage\n                this.account.moonPassportOwnerAddress = this.account.moonPassport.owner\n\n                // Set current wallet\n                this.account.currentWallet = this.account.moonPassportOwnerAddress\n\n                // Set owner moon passport\n                this.account.moonPassportOwner = this.account.moonPassport\n            }\n\n            // Get owner moon passport\n            if (updateOwnerMoonPassport && this.account.moonPassportOwnerAddress) {\n                await this.getOwnerMoonPassport()\n            }\n\n            // Set user info\n            this.setUserInfo({\n                userName: key.name,\n                auth: true\n            }, updateAvatar)\n        },\n\n\n        // Get moon passport\n        async getMoonPassport() {\n            try {\n                let tendermintClient = await Tendermint34Client.connect(this.networks.bostrom.rpc_api)\n\n                this.jsCyber = new CyberClient(tendermintClient)\n\n                this.account.moonPassport = await this.jsCyber.queryContractSmart(\n                    this.CONTRACT_ADDRESS_PASSPORT,\n                    {\n                        active_passport: {\n                            address: this.wallets.bostrom\n                        }\n                    }\n                )\n            } catch (error) {\n                console.log(error)\n\n                // Clear passport\n                this.account.moonPassport = null\n            }\n        },\n\n\n        // Get owner moon passport\n        async getOwnerMoonPassport() {\n            try {\n                // Get data\n                let tendermintClient = await Tendermint34Client.connect(this.networks.bostrom.rpc_api)\n\n                this.jsCyber = new CyberClient(tendermintClient)\n\n                this.account.moonPassportOwner = await this.jsCyber.queryContractSmart(\n                    this.CONTRACT_ADDRESS_PASSPORT,\n                    {\n                        active_passport: {\n                            address: this.account.moonPassportOwnerAddress\n                        }\n                    }\n                )\n\n                // Set owner wallet\n                this.account.wallets.push({\n                    address: this.account.moonPassportOwner.owner,\n                    nickname: this.account.moonPassportOwner.extension.nickname,\n                    info: {},\n                    networks: [\n                        {\n                            name: 'cosmoshub',\n                            color: '#2E314B',\n                            denom: this.networks.cosmoshub.denom,\n                            token_name: this.networks.cosmoshub.token_name,\n                            exponent: this.networks.cosmoshub.exponent,\n                            price: this.prices.find(el => el.symbol == 'ATOM').price,\n                            price_usdt: this.networks.cosmoshub.price_usdt,\n                            price_atom: this.networks.cosmoshub.price_atom,\n                            price_eth: this.networks.cosmoshub.price_eth,\n                            price_btc: this.networks.cosmoshub.price_btc,\n                        }\n                    ]\n                })\n\n                // Set other wallets\n                if(this.account.moonPassportOwner.extension.addresses){\n                    this.account.moonPassportOwner.extension.addresses.forEach(address => {\n                        if(address.address.substr(0, 2) != '0x') {\n                            let result = this.account.wallets.find(el => el.address == generateAddress('bostrom', address.address))\n\n                            if(typeof result === 'undefined') {\n                                this.account.wallets.push({\n                                    address: generateAddress('bostrom', address.address),\n                                    nickname: address.label,\n                                    info: {},\n                                    networks: [\n                                        {\n                                            name: 'cosmoshub',\n                                            color: '#2E314B',\n                                            denom: this.networks.cosmoshub.denom,\n                                            token_name: this.networks.cosmoshub.token_name,\n                                            exponent: this.networks.cosmoshub.exponent,\n                                            price: this.prices.find(el => el.symbol == 'ATOM').price,\n                                            price_usdt: this.networks.cosmoshub.price_usdt,\n                                            price_atom: this.networks.cosmoshub.price_atom,\n                                            price_eth: this.networks.cosmoshub.price_eth,\n                                            price_btc: this.networks.cosmoshub.price_btc,\n                                        }\n                                    ]\n                                })\n                            }\n                        }\n                    })\n                }\n            } catch (error) {\n                console.log(error)\n            }\n        },\n\n\n        // Set user info\n        async setUserInfo(user, updateAvatar) {\n            this.account.userName = user.userName\n            this.auth = user.auth\n\n            if (updateAvatar) {\n                // Set robohash avatar\n                this.account.moonPassportOwner\n                    ? this.account.avatar = `https://robohash.org/${this.account.moonPassportOwner.extension.nickname.toLowerCase()}?set=set4`\n                    : this.account.avatar = `https://robohash.org/${this.account.userName.toLowerCase()}?set=set4`\n\n                // Start IPFS\n                if (!this.node) {\n                    await this.startIPFS()\n                }\n\n                // Get avatar\n                if (this.node.isOnline()) {\n                    this.getAvatar()\n                }\n            }\n        },\n\n\n        // IPFS\n        async startIPFS() {\n            this.node = await IPFS.create({\n                repo: 'ipfs-repo-cyber',\n                init: true,\n                start: true,\n                relay: {\n                    enabled: true,\n                    hop: {\n                        enabled: true,\n                    },\n                },\n                EXPERIMENTAL: {\n                    pubsub: true,\n                },\n                config: {\n                    Addresses: {\n                        Swarm: [\n                            '/dns4/ws-star.discovery.cybernode.ai/tcp/443/wss/p2p-webrtc-star',\n                            '/dns4/wrtc-star1.par.dwebops.pub/tcp/443/wss/p2p-webrtc-star',\n                            '/dns4/wrtc-star2.sjc.dwebops.pub/tcp/443/wss/p2p-webrtc-star',\n                        ],\n                    },\n                    Bootstrap: [\n                        '/dns4/ws-star.discovery.cybernode.ai/tcp/4430/wss/p2p/QmUgmRxoLtGERot7Y6G7UyF6fwvnusQZfGR15PuE6pY3aB',\n                        '/dnsaddr/bootstrap.libp2p.io/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN',\n                        '/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb',\n                        '/dnsaddr/bootstrap.libp2p.io/p2p/QmZa1sAxajnQjVM8WjWXoMbmPd7NsWhfKsPkErzpm9wGkp',\n                        '/dnsaddr/bootstrap.libp2p.io/p2p/QmQCU2EcMqAqQPR2i9bChDtGNJchTbq5TbXJJ16u19uLTa',\n                        '/dnsaddr/bootstrap.libp2p.io/p2p/QmcZf59bWwK5XFi76CZX8cbJ4BhTzzA3gU1ZjYZcYW3dwt',\n                        '/dns4/node0.preload.ipfs.io/tcp/443/wss/p2p/QmZMxNdpMkewiVZLMRxaNxUeZpDUb34pWjZ1kZvsd16Zic',\n                        '/dns4/node1.preload.ipfs.io/tcp/443/wss/p2p/Qmbut9Ywz9YEDrz8ySBSgWyJk41Uvm2QJPhwDJzJyGFsD6',\n                        '/dns4/node2.preload.ipfs.io/tcp/443/wss/p2p/QmV7gnbW5VTcJ3oyM2Xk1rdFBJ3kTkvxc87UFGsun29STS',\n                        '/dns4/node3.preload.ipfs.io/tcp/443/wss/p2p/QmY7JB6MQXhxHvq7dBDh4HpbH29v4yE9JRadAVpndvzySN',\n                    ]\n                }\n            })\n\n            if (this.node.isOnline()) {\n                this.IPFSStatus = true\n            }\n        },\n\n\n        // Avatar\n        async getAvatar() {\n            let avatarStatus = false,\n                delay = 5000\n\n            // Getting avatar from gateway\n            setTimeout(() => {\n                if (!avatarStatus) {\n                    this.account.avatar = `https://gateway.ipfs.cybernode.ai/ipfs/${this.account.moonPassportOwner.extension.avatar}`\n                }\n            }, delay)\n\n            // Getting avatar from ipfs node\n            if(this.account.moonPassportOwner) {\n                let content = []\n\n                for await (let chunk of this.node.cat(this.account.moonPassportOwner.extension.avatar)) {\n                    content.push(chunk)\n                }\n\n                this.account.avatar = URL.createObjectURL(new Blob(content, { type: 'image/jpeg' }))\n\n                avatarStatus = true\n            }\n        },\n\n\n        // Generate network address\n        setWallet(network, address) {\n            this.wallets[network] = address\n        },\n\n\n        // Reset state\n        // async reset () {\n        //     // Load from localstorage\n        //     let defaultAccount = JSON.parse(window.localStorage.getItem('account')),\n        //         defaultNetworks = JSON.parse(window.localStorage.getItem('networks'))\n\n        //     this.connected = false\n        //     this.showManageModal = false\n        //     this.showManageSuccessModal = false\n        //     this.showManageErrorModal = false\n        //     this.showManageRejectModal = false\n        //     this.loaderManageModal = false\n        //     this.showConstitutionModal = false\n        //     this.constitutionStatus = null\n\n        //     // Clear state\n        //     Object.assign(this, {\n        //         account: defaultAccount,\n        //         networks: defaultNetworks\n        //     })\n        // },\n\n\n        // Connect to network websocket\n        // connectNetworkWebsocket(network) {\n        //     this.networks[network].websocket = new WebSocket(this.networks[network].websocket_url)\n        // },\n\n\n        // Networks status\n        async getNetworkStatus(network) {\n            try {\n                await fetch(`${this.networks[network].lcd_api}/cosmos/distribution/v1beta1/delegators/${this.wallets[network]}/validators`)\n                    .then(response => response.json())\n                    .then(data => {\n                        if (data.validators && data.validators.length) {\n                            data.validators.forEach(el => {\n                                if (el == this.networks[network].validator) {\n                                    this.networks[network].status = true\n                                }\n                            })\n                        }\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        },\n\n\n        // Get network delegations tokens\n        async getNetworkDelegationsTokens(network) {\n            try {\n                await fetch(`${this.networks[network].lcd_api}/cosmos/staking/v1beta1/delegations/${this.wallets[network]}`)\n                    .then(response => response.json())\n                    .then(data => {\n                        if (data.delegation_responses) {\n                            let sum = 0\n\n                            data.delegation_responses.forEach(el => {\n                                sum += parseFloat(el.balance.amount)\n\n                                this.networks[network].delegations.push({\n                                    'operator_address': el.delegation.validator_address,\n                                    'amount': parseFloat(el.delegation.shares) / this.networks[network].exponent\n                                })\n                            })\n\n                            this.networks[network].delegations_tokens = sum / this.networks[network].exponent\n                        }\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        },\n\n\n        // Get network rewards tokens\n        async getNetworkRewardsTokens(network) {\n            try {\n                await fetch(`${this.networks[network].lcd_api}/cosmos/distribution/v1beta1/delegators/${this.wallets[network]}/rewards`)\n                    .then(response => response.json())\n                    .then(data => {\n                        if (this.networks[network].rewards_tokens && !data.total.length) {\n                            setTimeout(async () => await this.updateNetwork(network), 1000)\n                        } else if (data.total.length) {\n                            let result = data.total.find(el => el.denom == this.networks[network].denom)\n\n                            // Set rewards\n                            this.networks[network].rewards_tokens = parseFloat(result.amount) / this.networks[network].exponent\n\n                            // Set a rewards from each validator\n                            for (let i in data.rewards) {\n                                if (data.rewards[i].reward.length) {\n                                    let rewards = data.rewards[i].reward.find(el => el.denom == this.networks[network].denom)\n\n                                    this.networks[network].rewards.push({\n                                        'operator_address': data.rewards[i].validator_address,\n                                        'amount': parseFloat(rewards.amount) / this.networks[network].exponent\n                                    })\n                                }\n                            }\n                        }\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        },\n\n\n        // Get network availabel/IBC tokens\n        async getNetworkAvailabelIBCTokens(network) {\n            try {\n                await fetch(`${this.networks[network].lcd_api}/cosmos/bank/v1beta1/balances/${this.wallets[network]}`)\n                    .then(response => response.json())\n                    .then(data => {\n                        let availabel = data.balances.find(e => e.denom == this.networks[network].denom),\n                            ibc = data.balances.filter(e => e.denom.includes('ibc/'))\n\n                        if (data.balances && data.balances.length && typeof availabel !== \"undefined\") {\n                            // Availabel tokens\n                            this.networks[network].availabel_tokens = parseFloat(availabel.amount) / this.networks[network].exponent\n\n                            // IBC tokens\n                            ibc.forEach(el => {\n                                fetch(`${this.networks[network].lcd_api}/ibc/apps/transfer/v1/denom_traces/${el.denom.substr(4)}`)\n                                    .then(response => response.json())\n                                    .then(data => {\n                                        for (const tempNetwork in this.networks) {\n                                            if (this.networks[tempNetwork].denom == data.denom_trace.base_denom) {\n                                                // Add tokens\n                                                this.networks[tempNetwork].ibc_tokens += parseFloat(el.amount) / this.networks[tempNetwork].exponent\n\n                                                // Calc network tokens sum\n                                                this.calcNetworkTokensSum(tempNetwork)\n                                            }\n                                        }\n                                    })\n                            })\n                        }\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        },\n\n\n        // Networks tokens\n        async getNetworkTokens(network) {\n            // Get network delegations tokens\n            await this.getNetworkDelegationsTokens(network)\n\n            // Get network rewards tokens\n            await this.getNetworkRewardsTokens(network)\n\n            // Get network availabel/IBC tokens\n            await this.getNetworkAvailabelIBCTokens(network)\n        },\n\n\n        calcNetworkTokensSum(network) {\n            this.networks[network].tokens_sum = this.networks[network].availabel_tokens + this.networks[network].delegations_tokens + this.networks[network].rewards_tokens + this.networks[network].ibc_tokens\n\n            // Percents\n            if (this.networks[network].tokens_sum) {\n                this.networks[network].delegations_percents = this.networks[network].delegations_tokens * 100 / this.networks[network].tokens_sum\n                this.networks[network].rewards_percents = this.networks[network].rewards_tokens * 100 / this.networks[network].tokens_sum\n                this.networks[network].ibc_percents = this.networks[network].ibc_tokens * 100 / this.networks[network].tokens_sum\n                this.networks[network].availabel_percents = this.networks[network].availabel_tokens * 100 / this.networks[network].tokens_sum\n            }\n        },\n\n\n        // Network data\n        async getNetworkData(network) {\n            await fetch(`${this.networks[network].lcd_api}/cosmos/staking/v1beta1/delegators/${this.wallets[network]}/validators`)\n                .then(response => response.json())\n                .then(data => {\n                    // Validators\n                    if (data.validators.length) {\n                        this.networks[network].validators.push(data.validators.find(e => e.operator_address == this.networks[network].validator))\n\n                        // Annual provision\n                        this.networks[network].validators.forEach(el => {\n                            el.annual_provision = this.networks[network].delegations_tokens * this.networks[network].apr * (1 - el.commission.commission_rates.rate)\n\n                            // Total annual provision\n                            this.networks[network].total_annual_provision += el.annual_provision\n                        })\n\n                        // RPDE\n                        this.networks[network].RPDE = this.networks[network].total_annual_provision / 365.3\n\n                        // Personal APR\n                        this.networks[network].personal_APR = this.networks[network].total_annual_provision / this.networks[network].delegations_tokens * 100\n                    }\n                })\n        },\n\n\n        // Network balance\n        calcNetworkRPDEInCurrency(network) {\n            this.networks[network].RPDE_usdt = this.networks[network].price_usdt * this.networks[network].RPDE\n            this.networks[network].RPDE_atom = this.networks[network].price_atom * this.networks[network].RPDE\n            this.networks[network].RPDE_eth = this.networks[network].price_eth * this.networks[network].RPDE\n            this.networks[network].RPDE_btc = this.networks[network].price_btc * this.networks[network].RPDE\n\n            this.networks[network].RPDE_year_usdt = this.networks[network].RPDE_usdt * 365.3\n            this.networks[network].RPDE_year_atom = this.networks[network].RPDE_atom * 365.3\n            this.networks[network].RPDE_year_eth = this.networks[network].RPDE_eth * 365.3\n            this.networks[network].RPDE_year_btc = this.networks[network].RPDE_btc * 365.3\n        },\n\n\n        // Network balance\n        calcNetworkBalance(network) {\n            this.networks[network].balance_usdt = this.networks[network].tokens_sum * this.networks[network].price_usdt\n            this.networks[network].balance_atom = this.networks[network].tokens_sum * this.networks[network].price_atom\n            this.networks[network].balance_eth = this.networks[network].tokens_sum * this.networks[network].price_eth\n            this.networks[network].balance_btc = this.networks[network].tokens_sum * this.networks[network].price_btc\n\n            if (network == 'bostrom') {\n                this.networks.bostrom.balance_usdt = this.networks.bostrom.tokens_sum * this.networks.bostrom.exponent * this.networks.bostrom.price_usdt\n                this.networks.bostrom.balance_atom = this.networks.bostrom.tokens_sum * this.networks.bostrom.exponent * this.networks.bostrom.price_atom\n                this.networks.bostrom.balance_eth = this.networks.bostrom.tokens_sum * this.networks.bostrom.exponent * this.networks.bostrom.price_eth\n                this.networks.bostrom.balance_btc = this.networks.bostrom.tokens_sum * this.networks.bostrom.exponent * this.networks.bostrom.price_btc\n            }\n        },\n\n\n        // Network delegations price\n        calcDelegationsPrice(network) {\n            this.networks[network].delegations_price = this.networks[network].delegations_tokens * this.networks[network].price\n            this.networks[network].delegations_price_usdt = this.networks[network].delegations_tokens * this.networks[network].price_usdt\n            this.networks[network].delegations_price_atom = this.networks[network].delegations_tokens * this.networks[network].price_atom\n            this.networks[network].delegations_price_eth = this.networks[network].delegations_tokens * this.networks[network].price_eth\n            this.networks[network].delegations_price_btc = this.networks[network].delegations_tokens * this.networks[network].price_btc\n\n            if (network == 'bostrom') {\n                this.networks.bostrom.delegations_price = this.networks.bostrom.delegations_tokens * this.networks.bostrom.exponent * this.networks.bostrom.price\n                this.networks.bostrom.delegations_price_usdt = this.networks.bostrom.delegations_tokens * this.networks.bostrom.exponent * this.networks.bostrom.price_usdt\n                this.networks.bostrom.delegations_price_atom = this.networks.bostrom.delegations_tokens * this.networks.bostrom.exponent * this.networks.bostrom.price_atom\n                this.networks.bostrom.delegations_price_eth = this.networks.bostrom.delegations_tokens * this.networks.bostrom.exponent * this.networks.bostrom.price_eth\n                this.networks.bostrom.delegations_price_btc = this.networks.bostrom.delegations_tokens * this.networks.bostrom.exponent * this.networks.bostrom.price_btc\n            }\n        },\n\n\n        // Network rewards price\n        calcRewardsPrice(network) {\n            this.networks[network].rewards_price = this.networks[network].rewards_tokens * this.networks[network].price\n            this.networks[network].rewards_price_usdt = this.networks[network].rewards_tokens * this.networks[network].price_usdt\n            this.networks[network].rewards_price_atom = this.networks[network].rewards_tokens * this.networks[network].price_atom\n            this.networks[network].rewards_price_eth = this.networks[network].rewards_tokens * this.networks[network].price_eth\n            this.networks[network].rewards_price_btc = this.networks[network].rewards_tokens * this.networks[network].price_btc\n\n            if (network == 'bostrom') {\n                this.networks.bostrom.rewards_price = this.networks.bostrom.rewards_tokens * this.networks.bostrom.exponent * this.networks.bostrom.price\n                this.networks.bostrom.rewards_price_usdt = this.networks.bostrom.rewards_tokens * this.networks.bostrom.exponent * this.networks.bostrom.price_usdt\n                this.networks.bostrom.rewards_price_atom = this.networks.bostrom.rewards_tokens * this.networks.bostrom.exponent * this.networks.bostrom.price_atom\n                this.networks.bostrom.rewards_price_eth = this.networks.bostrom.rewards_tokens * this.networks.bostrom.exponent * this.networks.bostrom.price_eth\n                this.networks.bostrom.rewards_price_btc = this.networks.bostrom.rewards_tokens * this.networks.bostrom.exponent * this.networks.bostrom.price_btc\n            }\n        },\n\n\n        // Networks info\n        getNetworksInfo() {\n            fetch('https://rpc.bronbro.io/bro_data/')\n                .then(response => response.json())\n                .then(data => {\n                    data.infos.forEach(el => {\n                        if (this.networks[el.network]) {\n                            this.networks[el.network].health = el.health\n                            this.networks[el.network].apr = el.apr\n                            this.networks[el.network].apy = Math.pow(1 + (el.apr.toFixed(2) / 365), 365) - 1\n\n                            this.networks[el.network].price = this.prices.find(e => e.display == el.denom).price\n                            this.networks[el.network].price_usdt = this.prices.find(e => e.display == el.denom).price\n                            this.networks[el.network].price_atom = this.prices.find(e => e.display == el.denom).price / this.ATOM_price\n                            this.networks[el.network].price_eth = this.prices.find(e => e.display == el.denom).price / this.ETH_price\n                            this.networks[el.network].price_btc = this.prices.find(e => e.display == el.denom).price / this.BTC_price\n\n                            switch (true) {\n                                case el.health >= 0 && el.health < 7:\n                                    this.networks[el.network].health_color = 'red'\n                                    break\n                                case el.health >= 7 && el.health < 13:\n                                    this.networks[el.network].health_color = 'orange'\n                                    break\n                                case el.health >= 13:\n                                    this.networks[el.network].health_color = 'green'\n                                    break\n                            }\n\n                            switch (true) {\n                                case el.apr < 0.15:\n                                    this.networks[el.network].speed = 4\n                                    break\n                                case el.apr >= 0.15 && el.apr < 4:\n                                    this.networks[el.network].speed = 4.28378 - 1.89189 * el.apr\n                                    break\n                                case el.apr >= 4:\n                                    this.networks[el.network].speed = 0.5\n                                    break\n                            }\n                        }\n                    })\n                })\n        },\n\n\n        // Currencies price\n        async getCurrenciesPrice() {\n            await fetch('https://rpc.bronbro.io/price_feed_api/tokens/')\n                .then(response => response.json())\n                .then(data => {\n                    this.prices = data\n\n                    let ATOM = data.find(el => el.symbol == 'ATOM'),\n                        BTC = data.find(el => el.symbol == 'WBTC'),\n                        ETH = data.find(el => el.symbol == 'WETH')\n\n                    this.ATOM_price = ATOM.price\n                    this.ETH_price = BTC.price\n                    this.BTC_price = ETH.price\n\n                    // Networks info\n                    this.getNetworksInfo()\n                })\n        },\n\n\n        // Account balance\n        updateAccountBalance() {\n            // Recalc\n            for (let network in this.networks) {\n                this.calcNetworkTokensSum(network)\n                this.calcNetworkBalance(network)\n            }\n\n            this.account.delegations_price = 0\n\n            this.account.balance_usdt = 0\n            this.account.balance_atom = 0\n            this.account.balance_eth = 0\n            this.account.balance_btc = 0\n\n            this.account.RPDE_usdt = 0\n            this.account.RPDE_atom = 0\n            this.account.RPDE_eth = 0\n            this.account.RPDE_btc = 0\n\n            for (let network in this.networks) {\n                this.account.delegations_price += this.networks[network].delegations_price\n\n                this.account.balance_usdt += this.networks[network].balance_usdt\n                this.account.balance_atom += this.networks[network].balance_atom\n                this.account.balance_eth += this.networks[network].balance_eth\n                this.account.balance_btc += this.networks[network].balance_btc\n\n                this.account.RPDE_usdt += this.networks[network].RPDE_usdt\n                this.account.RPDE_atom += this.networks[network].RPDE_atom\n                this.account.RPDE_eth += this.networks[network].RPDE_eth\n                this.account.RPDE_btc += this.networks[network].RPDE_btc\n            }\n\n            if (this.account.delegations_price != 0) {\n                this.account.personal_APR = this.account.RPDE_usdt * 365.3 / this.account.delegations_price * 100\n            }\n\n            this.recalc = false\n        },\n\n\n        // Update network\n        async updateNetwork(network) {\n            this.networks[network].validators = []\n            this.networks[network].delegations = []\n            this.networks[network].rewards = []\n            this.networks[network].total_annual_provision = 0\n\n            if (network == 'desmos') {\n                // Desmos singer\n                const offlineSignerDesmos = await window.getOfflineSigner('desmos-mainnet'),\n                    accountsDesmos = await offlineSignerDesmos.getAccounts()\n\n                // Set wallet address\n                this.setWallet('desmos', accountsDesmos[0].address)\n            }\n\n            if (network == 'crescent') {\n                // Crescent singer\n                const offlineSignerCrescent = await window.getOfflineSigner('crescent-1'),\n                    accountsCrescent = await offlineSignerCrescent.getAccounts()\n\n                // Set wallet address\n                this.setWallet('crescent', accountsCrescent[0].address)\n            }\n\n            if (network == 'omniflix') {\n                // Omniflix hub singer\n                const offlineSignerOmniflix = await window.getOfflineSigner('omniflixhub-1'),\n                    accountsOmniflix = await offlineSignerOmniflix.getAccounts()\n\n                // Set wallet address\n                this.setWallet('crescent', accountsOmniflix[0].address)\n            }\n\n            // Get status\n            this.getNetworkStatus(network)\n\n            // Get network tokens\n            this.getNetworkTokens(network).then(() => {\n                // Calc network tokens sum\n                this.calcNetworkTokensSum(network)\n\n                if (this.networks[network].status) {\n                    // Get network data\n                    let networkData = this.getNetworkData(network)\n\n                    Promise.all([networkData]).then(() => {\n                        // Calc network RPDE\n                        this.calcNetworkRPDEInCurrency(network)\n\n                        // Calc network balance\n                        this.calcNetworkBalance(network)\n\n                        // Calc delegations price\n                        this.calcDelegationsPrice(network)\n\n                        // Calc rewards price\n                        this.calcRewardsPrice(network)\n\n                        // Update account balance\n                        this.updateAccountBalance()\n                    })\n                }\n            })\n        }\n    }\n})\n","import { useGlobalStore } from '@/stores'\n\nimport { Registry } from '@cosmjs/proto-signing'\nimport { AminoTypes, SigningStargateClient } from '@cosmjs/stargate'\nimport { TxRaw } from 'cosmjs-types/cosmos/tx/v1beta1/tx'\nimport { MsgExecuteContract } from 'cosmjs-types/cosmwasm/wasm/v1/tx'\nimport { toUtf8, fromBech32, toBech32 } from '@cosmjs/encoding'\nimport { createWasmAminoConverters } from \"@cosmjs/cosmwasm-stargate\";\n\nimport {\n    createTxMsgDelegate,\n    createTxMsgBeginRedelegate,\n    createTxMsgWithdrawDelegatorReward,\n    createTxMsgStakeAuthorization,\n    createTxMsgStakeRevokeAuthorization\n} from '@evmos/transactions'\n\nimport { createTxRaw } from '@evmos/proto'\nimport { generateEndpointBroadcast, generatePostBodyBroadcast } from '@evmos/provider'\n\n\n// Generate wallet\nexport const generateAddress = (prefix, address) => {\n    return toBech32(prefix, fromBech32(address).data)\n}\n\n\n// Get networks data\nexport const getNetworksData = async () => {\n    let store = useGlobalStore()\n\n\n    // Get currencies price\n    let promiseCurrencies = await store.getCurrenciesPrice()\n\n\n    //======== Evmos\n    try{\n        // Get status\n        store.getNetworkStatus('evmos')\n\n        // Get network tokens\n        store.getNetworkTokens('evmos').then(() => {\n            // Calc network tokens sum\n            store.calcNetworkTokensSum('evmos')\n\n            if(store.networks.evmos.status){\n                // Get network data\n                let promiseData = store.getNetworkData('evmos')\n\n                Promise.all([promiseData, promiseCurrencies]).then(() => {\n                    // Calc network RPDE\n                    store.calcNetworkRPDEInCurrency('evmos')\n\n                    // Calc network balance\n                    store.calcNetworkBalance('evmos')\n\n                    // Calc delegations price\n                    store.calcDelegationsPrice('evmos')\n\n                    // Calc rewards price\n                    store.calcRewardsPrice('evmos')\n\n                    // Update account balance\n                    store.updateAccountBalance()\n                })\n            }\n        })\n    } catch(error) {\n        console.log(error)\n    }\n\n\n    //======== JUNO\n    // Set wallet address\n    store.setWallet('juno', toBech32('juno', fromBech32(store.wallets.cosmoshub).data))\n\n    // Get status\n    store.getNetworkStatus('juno')\n\n    // Get network tokens\n    store.getNetworkTokens('juno').then(() => {\n        // Calc network tokens sum\n        store.calcNetworkTokensSum('juno')\n\n        if(store.networks.juno.status){\n            // Get network data\n            let junoData = store.getNetworkData('juno')\n\n            Promise.all([junoData, promiseCurrencies]).then(() => {\n                // Calc network RPDE\n                store.calcNetworkRPDEInCurrency('juno')\n\n                // Calc network balance\n                store.calcNetworkBalance('juno')\n\n                // Calc delegations price\n                store.calcDelegationsPrice('juno')\n\n                // Calc rewards price\n                store.calcRewardsPrice('juno')\n\n                // Update account balance\n                store.updateAccountBalance()\n            })\n        }\n    })\n\n\n    //======== Cosmos hub\n    // Get status\n    store.getNetworkStatus('cosmoshub')\n\n    // Get network tokens\n    store.getNetworkTokens('cosmoshub').then(() => {\n        // Calc network tokens sum\n        store.calcNetworkTokensSum('cosmoshub')\n\n        if(store.networks.cosmoshub.status){\n            // Get network data\n            let cosmoshubData = store.getNetworkData('cosmoshub')\n\n            Promise.all([cosmoshubData, promiseCurrencies]).then(() => {\n                // Calc network RPDE\n                store.calcNetworkRPDEInCurrency('cosmoshub')\n\n                // Calc network balance\n                store.calcNetworkBalance('cosmoshub')\n\n                // Calc delegations price\n                store.calcDelegationsPrice('cosmoshub')\n\n                // Calc rewards price\n                store.calcRewardsPrice('cosmoshub')\n\n                // Update account balance\n                store.updateAccountBalance()\n            })\n        }\n    })\n\n\n    //======== Bostrom\n    // Set wallet address\n    store.setWallet('bostrom', toBech32('bostrom', fromBech32(store.wallets.cosmoshub).data))\n\n    // Get status\n    store.getNetworkStatus('bostrom')\n\n    // Connect to network websocket\n    // store.connectNetworkWebsocket('bostrom')\n\n    // store.networks.bostrom.websocket.onopen = () => {\n    //     store.networks.bostrom.websocket.send(JSON.stringify({ \"jsonrpc\": \"2.0\", \"method\": \"subscribe\", \"params\": [\"tm.event = 'Tx'\"], \"id\": 0 }))\n    // }\n\n    // Get network tokens\n    store.getNetworkTokens('bostrom').then(() => {\n        // Calc network tokens sum\n        store.calcNetworkTokensSum('bostrom')\n\n        if(store.networks.bostrom.status){\n            // Get network data\n            let bostromData = store.getNetworkData('bostrom')\n\n            Promise.all([bostromData, promiseCurrencies]).then(() => {\n                // Calc network RPDE\n                store.calcNetworkRPDEInCurrency('bostrom')\n\n                // Calc network balance\n                store.calcNetworkBalance('bostrom')\n\n                // Calc delegations price\n                store.calcDelegationsPrice('bostrom')\n\n                // Calc rewards price\n                store.calcRewardsPrice('bostrom')\n\n                // Update account balance\n                store.updateAccountBalance()\n            })\n        }\n    })\n\n\n    //======== Osmosis\n    // Set wallet address\n    store.setWallet('osmosis', toBech32('osmo', fromBech32(store.wallets.cosmoshub).data))\n\n    // Get status\n    store.getNetworkStatus('osmosis')\n\n    // Get network tokens\n    store.getNetworkTokens('osmosis').then(() => {\n        // Calc network tokens sum\n        store.calcNetworkTokensSum('osmosis')\n\n        if(store.networks.emoney.status){\n            // Get network data\n            let osmosisData = store.getNetworkData('osmosis')\n\n            Promise.all([osmosisData, promiseCurrencies]).then(() => {\n                // Calc network RPDE\n                store.calcNetworkRPDEInCurrency('osmosis')\n\n                // Calc network balance\n                store.calcNetworkBalance('osmosis')\n\n                // Calc delegations price\n                store.calcDelegationsPrice('osmosis')\n\n                // Calc rewards price\n                store.calcRewardsPrice('osmosis')\n\n                // Update account balance\n                store.updateAccountBalance()\n            })\n        }\n    })\n\n\n    //======== E-money\n    // Set wallet address\n    store.setWallet('emoney', toBech32('emoney', fromBech32(store.wallets.cosmoshub).data))\n\n    // Get status\n    store.getNetworkStatus('emoney')\n\n    // Get network tokens\n    store.getNetworkTokens('emoney').then(() => {\n        // Calc network tokens sum\n        store.calcNetworkTokensSum('emoney')\n\n        if(store.networks.emoney.status){\n            // Get network data\n            let emoneyData = store.getNetworkData('emoney')\n\n            Promise.all([emoneyData, promiseCurrencies]).then(() => {\n                // Calc network RPDE\n                store.calcNetworkRPDEInCurrency('emoney')\n\n                // Calc network balance\n                store.calcNetworkBalance('emoney')\n\n                // Calc delegations price\n                store.calcDelegationsPrice('emoney')\n\n                // Calc rewards price\n                store.calcRewardsPrice('emoney')\n\n                // Update account balance\n                store.updateAccountBalance()\n            })\n        }\n    })\n\n\n    //======== Gravity bridge\n    // Set wallet address\n    store.setWallet('gravity', toBech32('gravity', fromBech32(store.wallets.cosmoshub).data))\n\n    // Get status\n    store.getNetworkStatus('gravity')\n\n    // Get network tokens\n    store.getNetworkTokens('gravity').then(() => {\n        // Calc network tokens sum\n        store.calcNetworkTokensSum('gravity')\n\n        if(store.networks.gravity.status){\n            // Get network data\n            let gravityData = store.getNetworkData('gravity')\n\n            Promise.all([gravityData, promiseCurrencies]).then(() => {\n                // Calc network RPDE\n                store.calcNetworkRPDEInCurrency('gravity')\n\n                // Calc network balance\n                store.calcNetworkBalance('gravity')\n\n                // Calc delegations price\n                store.calcDelegationsPrice('gravity')\n\n                // Calc rewards price\n                store.calcRewardsPrice('gravity')\n\n                // Update account balance\n                store.updateAccountBalance()\n            })\n        }\n    })\n\n\n    //======== Stargaze\n    // Set wallet address\n    store.setWallet('stargaze', toBech32('stars', fromBech32(store.wallets.cosmoshub).data))\n\n    // Get status\n    store.getNetworkStatus('stargaze')\n\n    // Get network tokens\n    store.getNetworkTokens('stargaze').then(() => {\n        // Calc network tokens sum\n        store.calcNetworkTokensSum('stargaze')\n\n        if(store.networks.stargaze.status){\n            // Get network data\n            let stargazeData = store.getNetworkData('stargaze')\n\n            Promise.all([stargazeData, promiseCurrencies]).then(() => {\n                // Calc network RPDE\n                store.calcNetworkRPDEInCurrency('stargaze')\n\n                // Calc network balance\n                store.calcNetworkBalance('stargaze')\n\n                // Calc delegations price\n                store.calcDelegationsPrice('stargaze')\n\n                // Calc rewards price\n                store.calcRewardsPrice('stargaze')\n\n                // Update account balance\n                store.updateAccountBalance()\n            })\n        }\n    })\n\n\n    //======== Stride\n    // Set wallet address\n    store.setWallet('stride', toBech32('stride', fromBech32(store.wallets.cosmoshub).data))\n\n    // Get status\n    store.getNetworkStatus('stride')\n\n    // Get network tokens\n    store.getNetworkTokens('stride').then(() => {\n        // Calc network tokens sum\n        store.calcNetworkTokensSum('stride')\n\n        if(store.networks.stride.status){\n            // Get network data\n            let strideData = store.getNetworkData('stride')\n\n            Promise.all([strideData, promiseCurrencies]).then(() => {\n                // Calc network RPDE\n                store.calcNetworkRPDEInCurrency('stride')\n\n                // Calc network balance\n                store.calcNetworkBalance('stride')\n\n                // Calc delegations price\n                store.calcDelegationsPrice('stride')\n\n                // Calc rewards price\n                store.calcRewardsPrice('stride')\n\n                // Update account balance\n                store.updateAccountBalance()\n            })\n        }\n    })\n\n\n    // ======== Desmos\n    // Get status\n    store.getNetworkStatus('desmos')\n\n    // Get network tokens\n    store.getNetworkTokens('desmos').then(() => {\n        // Calc network tokens sum\n        store.calcNetworkTokensSum('desmos')\n\n        if(store.networks.desmos.status){\n            // Get network data\n            let desmosData = store.getNetworkData('desmos')\n\n            Promise.all([desmosData, promiseCurrencies]).then(() => {\n                // Calc network RPDE\n                store.calcNetworkRPDEInCurrency('desmos')\n\n                // Calc network balance\n                store.calcNetworkBalance('desmos')\n\n                // Calc delegations price\n                store.calcDelegationsPrice('desmos')\n\n                // Calc rewards price\n                store.calcRewardsPrice('desmos')\n\n                // Update account balance\n                store.updateAccountBalance()\n            })\n        }\n    })\n\n\n    //======== Crescent hub\n    // Set wallet address\n    store.setWallet('crescent', toBech32('cre', fromBech32(store.wallets.cosmoshub).data))\n\n    // Get status\n    store.getNetworkStatus('crescent')\n\n    // Get network tokens\n    store.getNetworkTokens('crescent').then(() => {\n        // Calc network tokens sum\n        store.calcNetworkTokensSum('crescent')\n\n        if(store.networks.crescent.status){\n            // Get network data\n            let crescentData = store.getNetworkData('crescent')\n\n            Promise.all([crescentData, promiseCurrencies]).then(() => {\n                // Calc network RPDE\n                store.calcNetworkRPDEInCurrency('crescent')\n\n                // Calc network balance\n                store.calcNetworkBalance('crescent')\n\n                // Calc delegations price\n                store.calcDelegationsPrice('crescent')\n\n                // Calc rewards price\n                store.calcRewardsPrice('crescent')\n\n                // Update account balance\n                store.updateAccountBalance()\n            })\n        }\n    })\n\n\n    //======== Omniflix hub\n    // Set wallet address\n    store.setWallet('omniflix', toBech32('omniflix', fromBech32(store.wallets.cosmoshub).data))\n\n    // Get status\n    store.getNetworkStatus('omniflix')\n\n    // Get network tokens\n    store.getNetworkTokens('omniflix').then(() => {\n        // Calc network tokens sum\n        store.calcNetworkTokensSum('omniflix')\n\n        if(store.networks.omniflix.status){\n            // Get network data\n            let omniflixData = store.getNetworkData('omniflix')\n\n            Promise.all([omniflixData, promiseCurrencies]).then(() => {\n                // Calc network RPDE\n                store.calcNetworkRPDEInCurrency('omniflix')\n\n                // Calc network balance\n                store.calcNetworkBalance('omniflix')\n\n                // Calc delegations price\n                store.calcDelegationsPrice('omniflix')\n\n                // Calc rewards price\n                store.calcRewardsPrice('omniflix')\n\n                // Update account balance\n                store.updateAccountBalance()\n            })\n        }\n    })\n\n\n    // Open manage modal from url\n    if (store.networkManageModal) {\n        emitter.emit('openManageModal')\n    }\n}\n\n\n// Prepare Tx\nexport const prepareTx = async (msg, gasSimulate = true) => {\n    let store = useGlobalStore()\n\n    // Create request\n    let offlineSigner = await window.getOfflineSignerAuto(store.networks[store.networkManageModal].chainId)\n\n    Object.assign(offlineSigner, {\n        signAmino: offlineSigner.signAmino ?? offlineSigner.sign\n    })\n\n    // RPC endpoint\n    let rpcEndpoint = store.networks[store.networkManageModal].rpc_api\n\n    // Client\n    let client = await SigningStargateClient.connectWithSigner(rpcEndpoint, offlineSigner)\n\n    // Simulate gas\n    if (gasSimulate) {\n        var gasUsed = store.networkManageModal != 'emoney' ? '0' : store.networks.emoney.gas\n\n        if (store.networkManageModal != 'emoney') {\n            gasUsed = await client.simulate(store.wallets[store.networkManageModal], msg)\n        }\n    }\n\n    let fee = {\n        amount: [{\n            denom: store.networks[store.networkManageModal].denom,\n            amount: '0'\n        }],\n        gas: gasSimulate ? Math.round(gasUsed * 1.3).toString() : '1000000'\n    }\n\n    // MENO\n    let memo = store.ref ? `bro.${store.ref}` : 'bro.app'\n\n    // Sign transaction\n    let txRaw = await client.sign(store.wallets[store.networkManageModal], msg, fee, memo)\n\n    return { txRaw, client }\n}\n\n\n\n// Prepare EVMOS Tx\nexport const prepareEVMOSTx = async (params, base_account, TxType) => {\n    let store = useGlobalStore()\n\n    // Chain\n    let chain = {\n        chainId: 9001,\n        cosmosChainId: store.networks.evmos.chainId,\n    }\n\n    // Sender\n    let sender = {\n        accountAddress: store.wallets.evmos,\n        sequence: base_account.sequence,\n        accountNumber: base_account.account_number,\n        pubkey: base_account.pub_key.key,\n    }\n\n    // Fee\n    let fee = {\n        amount: '0',\n        denom: store.networks.evmos.denom,\n        gas: store.networks.evmos.gas,\n    }\n\n    // Memo\n    let memo = store.ref ? `bro.${store.ref}` : 'bro.app'\n\n    if (TxType == 'delegate') {\n        var msg = createTxMsgDelegate(chain, sender, fee, memo, params)\n    }\n\n    if (TxType == 'redelegate') {\n        var msg = createTxMsgBeginRedelegate(chain, sender, fee, memo, params)\n    }\n\n    if (TxType == 'claim') {\n        var msg = createTxMsgWithdrawDelegatorReward(chain, sender, fee, memo, params)\n    }\n\n    if (TxType == 'restake_enable') {\n        var msg = createTxMsgStakeAuthorization(chain, sender, fee, memo, params)\n    }\n\n    if (TxType == 'restake_disable') {\n        var msg = createTxMsgStakeRevokeAuthorization(chain, sender, fee, memo, params)\n    }\n\n    let sign = await window?.keplr?.signDirect(\n        store.networks.evmos.chainId,\n        sender.accountAddress,\n        {\n            bodyBytes: msg.signDirect.body.serializeBinary(),\n            authInfoBytes: msg.signDirect.authInfo.serializeBinary(),\n            chainId: store.networks.evmos.chainId,\n            accountNumber: sender.accountNumber,\n        },\n        { isEthereum: true }\n    )\n\n    let rawTx = createTxRaw(sign.signed.bodyBytes, sign.signed.authInfoBytes, [\n        new Uint8Array(Buffer.from(sign.signature.signature, 'base64'))\n    ])\n\n    return rawTx\n}\n\n\n\n// Send Tx\nexport const sendTx = async ({ txRaw, client }) => {\n    // Encode TxRaw\n    let txBytes = TxRaw.encode(txRaw).finish()\n\n    // Broadcast Tx\n    let result = await client.broadcastTx(txBytes, client.broadcastTimeoutMs, client.broadcastPollIntervalMs)\n\n    return result\n}\n\n\n\n// Send EVMOS Tx\nexport const sendEVMOSTx = async txRaw => {\n    let store = useGlobalStore()\n\n    // Broadcast it\n    let postOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: generatePostBodyBroadcast(txRaw),\n    }\n\n    let broadcastPost = await fetch(`${store.networks.evmos.lcd_api}${generateEndpointBroadcast()}`, postOptions)\n\n    let result = await broadcastPost.json()\n\n    return result\n}\n\n\n\n// Prepare create passport Tx\nexport const preparePassportTx = async params => {\n    let store = useGlobalStore()\n\n    // Register type\n    let typeRegistry = new Registry([\n        ['/cosmwasm.wasm.v1.MsgExecuteContract', MsgExecuteContract]\n    ])\n\n    // Amino types\n    let aminoTypes = new AminoTypes({\n        ...createWasmAminoConverters()\n    })\n\n    // Create request\n    await window.keplr.enable(store.networks.bostrom.chainId)\n\n    let offlineSigner = await window.getOfflineSignerAuto(store.networks.bostrom.chainId)\n\n    // RPC endpoint\n    let rpcEndpoint = store.networks.bostrom.rpc_api\n\n    // Client\n    let client = await SigningStargateClient.connectWithSigner(rpcEndpoint, offlineSigner, {\n        registry: typeRegistry,\n        aminoTypes\n    })\n\n    // Fee\n    let fee = {\n        amount: [{\n            denom: store.networks.bostrom.denom,\n            amount: '0'\n        }],\n        gas: '1000000'\n    }\n\n    // MENO\n    let memo = store.ref ? `bro.${store.ref}` : 'bro.app'\n\n    // Funds\n    let funds = []\n\n    // Params\n    let messages = []\n\n    if(Array.isArray(params)) {\n        params.forEach(el => {\n            messages.push({\n                typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',\n                value: MsgExecuteContract.fromPartial({\n                    sender: store.wallets.bostrom,\n                    contract: store.CONTRACT_ADDRESS_PASSPORT,\n                    msg: toUtf8(JSON.stringify(el)),\n                    funds\n                })\n            })\n        })\n    } else {\n        messages.push({\n            typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',\n            value: MsgExecuteContract.fromPartial({\n                sender: store.wallets.bostrom,\n                contract: store.CONTRACT_ADDRESS_PASSPORT,\n                msg: toUtf8(JSON.stringify(params)),\n                funds\n            })\n        })\n    }\n\n    // Sign transaction\n    let txRaw = await client.sign(store.wallets.bostrom, messages, fee, memo)\n\n    return { txRaw, client }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"46\":\"5a7d59c4\",\"217\":\"caabafbc\",\"238\":\"23c1600a\",\"260\":\"dd62d8b0\",\"341\":\"33bc999a\",\"417\":\"66e77dfb\",\"575\":\"33be6678\",\"699\":\"453b22dc\",\"862\":\"40442cfb\",\"869\":\"b4a07537\",\"885\":\"ea2326ee\",\"906\":\"89fbf908\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"css/\" + chunkId + \".\" + {\"46\":\"337099b6\",\"217\":\"cf1a559f\",\"238\":\"82f4139c\",\"260\":\"e54cc163\",\"417\":\"689945ce\",\"699\":\"7fcf3093\",\"862\":\"5fc388f2\",\"885\":\"a82ccdcd\",\"906\":\"0e867046\"}[chunkId] + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"bro_app:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","var createStylesheet = function(chunkId, fullhref, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + realHref + \")\");\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tlinkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\tdocument.head.appendChild(linkTag);\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"46\":1,\"217\":1,\"238\":1,\"260\":1,\"417\":1,\"699\":1,\"862\":1,\"885\":1,\"906\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbro_app\"] = self[\"webpackChunkbro_app\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(27565); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","class","_createElementVNode","src","alt","_createElementBlock","_hoisted_2","_toDisplayString","_ctx","script","__exports__","render","route","useRoute","layout","computed","meta","store","useGlobalStore","i18n","inject","emitter","WW","ref","window","innerWidth","onBeforeMount","document","title","global","t","addEventListener","value","on","async","connectWallet","notice","tooltip","modal_data","network","networkManageModal","fetch","networks","lcd_api","then","response","json","data","showManageModal","manageModalNetwork","validatorManageModal","validator","unbonding_time","parseInt","params","body","classList","add","state","remove","showManageSuccessModal","showManageErrorModal","setNotice","IPFSStatus","emit","showDropdown","selectCurrency","newCurrency","currency","clickOut","onMounted","header","querySelector","stickyEvent","setTimeout","scrollY","isActive","notification","useNotification","reactive","name","amount","setAmount","event","parseFloat","target","replace","availabel_tokens","toString","setMaxAmount","onSubmit","delegateEVMOS","delegateDEFAULT","msgAny","typeUrl","delegatorAddress","wallets","validatorAddress","denom","toFixed","exponent","length","prepareResult","prepareTx","notify","group","duration","chain","tx_type","result","sendTx","showSuccess","error","console","log","showError","evmos","res","prepareEVMOSTx","account","base_account","sendEVMOSTx","lastTXS","tx_response","txhash","clean","type","tx_hash","updateNetwork","manageError","Date","now","text","transactionHash","errorCode","message","match","operator_address","validators","props","hideDropdown","validateInput","contains","clearValidator","setValidator","newValidator","description","moniker","delegations","find","el","redelegateEVMOS","redelegateDEFAULT","validatorSrcAddress","validatorDstAddress","claimAllEVMOS","claimAllDEFAULT","forEach","rewards","push","restake","grant","expiry","moment","format","manageGrant","getGrantInfo","address","grants","authorization","max_tokens","getDate","expiration","setGrant","createGrantEVMOS","createGrantDEFAULT","removeGrant","removeGrantEVMOS","removeGrantDEFAULT","StakeAuthorization","allowList","maxTokens","authorizationType","finish","granter","grantee","Timestamp","seconds","unix","nanos","bot_address","validator_address","duration_in_seconds","interval","setInterval","clearInterval","msgTypeUrl","date","filter","_hoisted_3","_hoisted_4","routes","path","component","errorLayut","accessDenied","defaultLayut","router","createRouter","history","createWebHistory","beforeEach","to","from","next","modalId","query","manage_modal","currentNetwork","getCurrenciesPrice","connected","keplr","matched","some","record","access","includes","moonPassport","moonPassportOwnerAddress","showAddAddressModal","location","reload","appLoaded","en","createI18n","locale","fallbackLocale","messages","VueI18nMessages","mitt","app","createApp","App","use","createPinia","Notifications","timeago","provide","config","globalProperties","$filters","limit","newValue","timeAgo","fromNow","clickOutside","beforeMount","binding","clickOutsideEvent","unmounted","removeEventListener","directive","VueCountdown","mount","userName","avatar","signature","useLocalStorage","moonPassportOwner","info","currentWallet","balance_usdt","balance_atom","balance_eth","balance_btc","RPDE_usdt","RPDE_atom","RPDE_eth","RPDE_btc","totalPrice_usdt","totalPrice_atom","totalPrice_eth","totalPrice_btc","personal_APR","delegations_price","status","rpc_api","websocket_url","token_name","chainId","coingecko_api","mintscanAlias","prefix","address_prefix","health","health_color","ibc_tokens","ibc_percents","availabel_percents","delegations_tokens","delegations_percents","delegations_price_usdt","delegations_price_atom","delegations_price_eth","delegations_price_btc","rewards_tokens","rewards_percents","rewards_price","rewards_price_usdt","rewards_price_atom","rewards_price_eth","rewards_price_btc","RPDE","RPDE_year_usdt","RPDE_year_atom","RPDE_year_eth","RPDE_year_btc","price","price_usdt","price_atom","price_eth","price_btc","apr","apy","speed","total_annual_provision","tokens_sum","gas","run_time","minimum_reward","proposal_need","chainName","rpc","rest","bip44","coinType","bech32Config","bech32PrefixAccAddr","bech32PrefixAccPub","bech32PrefixValAddr","bech32PrefixValPub","bech32PrefixConsAddr","bech32PrefixConsPub","currencies","coinDenom","coinMinimalDenom","coinDecimals","coinGeckoId","coinImageUrl","features","feeCurrencies","gasPriceStep","low","average","high","stakeCurrency","beta","cosmoshub","bostrom","osmosis","juno","emoney","stargaze","gravity","crescent","omniflix","desmos","stride","localStorage","setItem","JSON","stringify","defineStore","CONTRACT_ADDRESS_PASSPORT","CONSTITUTION_HASH","node","recalc","auth","needReload","jsCyber","constitutionStatus","BTC_price","ETH_price","ATOM_price","showManageRejectModal","showConstitutionModal","showAddProposalModal","showMakeChoice","showDeleteAddressModal","manageModalnetwork","currentDeleteAddress","colors","validatorInfo","actions","updateOwnerMoonPassport","updateAvatar","enable","offlineSigner","getOfflineSignerAuto","accounts","getAccounts","key","getKey","offlineSignerEvmos","getOfflineSigner","this","accountsEvmos","checkChains","desmosConfig","crescentConfig","omniflixConfig","accountsDesmos","i","experimentalSuggestChain","activeKeplrAddress","$patch","toBech32","fromBech32","getMoonPassport","owner","getOwnerMoonPassport","setUserInfo","tendermintClient","Tendermint34Client","CyberClient","queryContractSmart","active_passport","nickname","extension","color","prices","symbol","addresses","substr","generateAddress","label","user","toLowerCase","startIPFS","isOnline","getAvatar","IPFS","repo","init","start","relay","enabled","hop","EXPERIMENTAL","pubsub","Addresses","Swarm","Bootstrap","avatarStatus","delay","content","chunk","cat","URL","createObjectURL","Blob","setWallet","delegation_responses","sum","balance","delegation","shares","total","reward","availabel","balances","ibc","tempNetwork","denom_trace","base_denom","calcNetworkTokensSum","getNetworkDelegationsTokens","getNetworkRewardsTokens","getNetworkAvailabelIBCTokens","annual_provision","commission","commission_rates","rate","calcNetworkRPDEInCurrency","calcNetworkBalance","calcDelegationsPrice","calcRewardsPrice","getNetworksInfo","infos","Math","pow","display","ATOM","BTC","ETH","updateAccountBalance","offlineSignerDesmos","offlineSignerCrescent","accountsCrescent","offlineSignerOmniflix","accountsOmniflix","getNetworkStatus","getNetworkTokens","networkData","getNetworkData","Promise","all","getNetworksData","promiseCurrencies","promiseData","junoData","cosmoshubData","bostromData","osmosisData","emoneyData","gravityData","stargazeData","strideData","desmosData","crescentData","omniflixData","msg","gasSimulate","assign","signAmino","sign","rpcEndpoint","client","SigningStargateClient","gasUsed","simulate","fee","round","memo","txRaw","TxType","cosmosChainId","sender","accountAddress","sequence","accountNumber","account_number","pubkey","pub_key","createTxMsgDelegate","createTxMsgBeginRedelegate","createTxMsgWithdrawDelegatorReward","createTxMsgStakeAuthorization","createTxMsgStakeRevokeAuthorization","signDirect","bodyBytes","serializeBinary","authInfoBytes","authInfo","isEthereum","rawTx","createTxRaw","signed","Uint8Array","Buffer","txBytes","TxRaw","broadcastTx","broadcastTimeoutMs","broadcastPollIntervalMs","postOptions","method","headers","generatePostBodyBroadcast","broadcastPost","generateEndpointBroadcast","preparePassportTx","typeRegistry","Registry","MsgExecuteContract","aminoTypes","AminoTypes","createWasmAminoConverters","registry","funds","Array","isArray","contract","toUtf8","__webpack_module_cache__","moduleId","cachedModule","undefined","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","__proto__","mode","ns","create","def","current","indexOf","getOwnPropertyNames","definition","defineProperty","enumerable","get","f","chunkId","reduce","promises","u","miniCssF","g","globalThis","Function","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","url","done","needAttach","scripts","getElementsByTagName","s","getAttribute","createElement","charset","timeout","nc","setAttribute","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","bind","head","appendChild","Symbol","toStringTag","nmd","paths","children","p","createStylesheet","fullhref","reject","linkTag","rel","onLinkComplete","errorType","realHref","href","err","request","findStylesheet","existingLinkTags","tag","dataHref","existingStyleTags","loadStylesheet","installedCssChunks","miniCss","cssChunks","installedChunks","installedChunkData","promise","loadingEnded","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}