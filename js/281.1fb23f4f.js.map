{"version":3,"file":"js/281.1fb23f4f.js","mappings":"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","sources":["webpack://bro_app/./src/components/account/Networks.vue","webpack://bro_app/./src/components/account/Networks.vue?68c2","webpack://bro_app/./src/components/account/Charts.vue","webpack://bro_app/./src/components/account/Charts.vue?21aa","webpack://bro_app/./src/components/account/Stats.vue","webpack://bro_app/./src/components/account/Stats.vue?7fbe","webpack://bro_app/./src/components/modal/ValidatorModal.vue","webpack://bro_app/./src/components/modal/ValidatorModal.vue?59af","webpack://bro_app/./src/components/account/Validators.vue","webpack://bro_app/./src/components/account/Validators.vue?7bab","webpack://bro_app/./src/components/account/Proposals.vue","webpack://bro_app/./src/components/account/Proposals.vue?4ae9","webpack://bro_app/./src/components/modal/AddAddressModal.vue","webpack://bro_app/./src/components/modal/AddAddressModal.vue?e8ab","webpack://bro_app/./src/components/modal/DeleteAddressModal.vue","webpack://bro_app/./src/components/modal/DeleteAddressModal.vue?a0ae","webpack://bro_app/./src/components/account/EditAddressName.vue","webpack://bro_app/./src/components/account/EditAddressName.vue?463c","webpack://bro_app/./src/components/account/ConnectedAddresses.vue","webpack://bro_app/./src/components/account/ConnectedAddresses.vue?7fc1","webpack://bro_app/./src/views/Account.vue","webpack://bro_app/./src/views/Account.vue?727f"],"sourcesContent":["<template>\n    <section class=\"networks\">\n        <div class=\"title\">\n            {{ $t('message.account_networks_title') }}\n        </div>\n\n        <div class=\"list\">\n            <button class=\"network active\">\n                <div class=\"logo\">\n                    <img src=\"/cosmoshub_logo.png\" alt=\"\">\n                </div>\n\n                <div>\n                    <div class=\"name\">{{ store.networks.cosmoshub.name }}</div>\n                    <div class=\"token\">{{ store.networks.cosmoshub.token_name }}</div>\n                </div>\n            </button>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { useGlobalStore } from '@/stores'\n\n    const store = useGlobalStore()\n</script>\n\n\n\n<style scoped>\n    .networks\n    {\n        padding: 14px;\n\n        border-radius: 20px;\n        background: #0d0d0d;\n    }\n\n\n    .networks .title\n    {\n        font-size: 30px;\n        font-weight: 600;\n        line-height: 36px;\n\n        margin-bottom: 20px;\n    }\n\n\n    .networks .list > * + *\n    {\n        margin-top: 4px;\n    }\n\n\n    .networks .network\n    {\n        display: flex;\n\n        width: 100%;\n        padding: 10px;\n\n        transition: background .2s linear;\n        text-align: left;\n\n        border-radius: 14px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .networks .logo\n    {\n        position: relative;\n\n        overflow: hidden;\n\n        width: 40px;\n        height: 40px;\n\n        border-radius: 50%;\n    }\n\n\n    .networks .logo img\n    {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n\n    .networks .logo + *\n    {\n        width: calc(100% - 54px);\n        margin-left: auto;\n    }\n\n\n    .networks .name\n    {\n        font-size: 18px;\n        font-weight: 500;\n        line-height: 100%;\n    }\n\n\n    .networks .token\n    {\n        color: #555;\n        font-size: 12px;\n        line-height: 15px;\n\n        margin-top: 6px;\n\n        text-transform: uppercase;\n    }\n\n\n    .networks .network:hover,\n    .networks .network.active\n    {\n        background: #141414;\n    }\n\n\n\n    @media print, (max-width: 1899px)\n    {\n        .networks .title\n        {\n            font-size: 27px;\n            line-height: 33px;\n        }\n    }\n\n</style>","import script from \"./Networks.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Networks.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Networks.vue?vue&type=style&index=0&id=4e4222cd&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4e4222cd\"]])\n\nexport default __exports__","<template>\n    <div class=\"row\">\n        <div class=\"tabs\">\n            <button class=\"btn\" :class=\"{'active': chartActive == 1}\" @click.prevent=\"chartActive = 1\" @mouseover=\"emitter.emit('setNotification', $t('message.account_charts_tab1_notice'))\">\n                {{ $t('message.account_charts_tab1') }}\n            </button>\n\n            <button class=\"btn\" :class=\"{'active': chartActive == 2}\" @click.prevent=\"chartActive = 2\" @mouseover=\"emitter.emit('setNotification', $t('message.account_charts_tab2_notice'))\">\n                {{ $t('message.account_charts_tab2') }}\n            </button>\n\n            <button class=\"btn\" :class=\"{'active': chartActive == 5}\" @click.prevent=\"chartActive = 5\" @mouseover=\"emitter.emit('setNotification', $t('message.account_charts_tab5_notice'))\">\n                {{ $t('message.account_charts_tab5') }}\n            </button>\n\n            <button class=\"btn\" :class=\"{'active': chartActive == 3}\" @click.prevent=\"chartActive = 3\" @mouseover=\"emitter.emit('setNotification', $t('message.account_charts_tab3_notice'))\">\n                {{ $t('message.account_charts_tab3') }}\n            </button>\n\n            <button class=\"btn\" :class=\"{'active': chartActive == 4}\" @click.prevent=\"chartActive = 4\" @mouseover=\"emitter.emit('setNotification', $t('message.account_charts_tab4_notice'))\">\n                {{ $t('message.account_charts_tab4') }}\n            </button>\n        </div>\n\n\n        <div class=\"loader_wrap\" v-if=\"loading\">\n            <div class=\"loader\"><span></span></div>\n        </div>\n\n        <template v-else>\n        <template v-if=\"chartActive == 1\">\n        <div class=\"block_title\">{{ $t('message.account_charts_block_title1') }}</div>\n\n        <div class=\"block_desc\">{{ $t('message.account_charts_desc1') }}</div>\n        </template>\n\n        <template v-if=\"chartActive == 2\">\n        <div class=\"block_title\">{{ $t('message.account_charts_block_title2') }}</div>\n\n        <div class=\"block_desc\">{{ $t('message.account_charts_desc2') }}</div>\n        </template>\n\n        <template v-if=\"chartActive == 5\">\n        <div class=\"block_title\">{{ $t('message.account_charts_block_title5') }}</div>\n\n        <div class=\"block_desc\">{{ $t('message.account_charts_desc5') }}</div>\n        </template>\n\n        <template v-if=\"chartActive == 4\">\n        <div class=\"block_title\">{{ $t('message.account_charts_block_title3') }}</div>\n\n        <div class=\"block_desc\">{{ $t('message.account_charts_desc3') }}</div>\n        </template>\n\n        <template v-if=\"chartActive == 3\">\n        <div class=\"block_title\">{{ $t('message.account_charts_block_title4') }}</div>\n\n        <div class=\"block_desc\">{{ $t('message.account_charts_desc4') }}</div>\n        </template>\n\n\n        <div class=\"col_left\">\n            <div class=\"charts\" v-if=\"chartActive == 1 || chartActive == 2\">\n                <div class=\"avatar\">\n                    <img :src=\"store.account.avatar\" alt=\"\">\n\n                    <router-link to=\"/account/passport\" class=\"edit_link\">\n                        <div class=\"btn\">\n                            <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_settings\"></use></svg>\n                            <span>{{ $t('message.settings_btn') }}</span>\n                        </div>\n                    </router-link>\n                </div>\n\n                <div class=\"chart chartFirst\" :class=\"{'active': chartActive == 1}\" @click.prevent=\"chartActive = 1\">\n                    <Doughnut ref=\"chartFirst\" :data=\"chartDataFirst\" :options=\"chartOptionsFirst\" />\n                </div>\n\n                <div class=\"chart chartSecond\" :class=\"{'active': chartActive == 2}\" @click.prevent=\"chartActive = 2\">\n                    <Doughnut ref=\"chartSecond\" :data=\"chartDataSecond\" :options=\"chartOptionsSecond\" />\n                </div>\n            </div>\n\n            <div class=\"charts\" v-if=\"chartActive == 3\">\n                <div class=\"chart chartThird active\">\n                    <Doughnut ref=\"chartThird\" :data=\"chartDataThird\" :options=\"chartOptionsThird\" />\n\n                    <div class=\"total\">\n                        <div class=\"label\">{{ $t('message.account_charts_total_assets') }}</div>\n\n                        <div class=\"price\">\n                            <template v-if=\"store.currency == 'USDT'\">\n                            {{ $filters.toFixed((totalChartThird / currentNetwork.exponent) * currentNetwork.price_usdt, 2) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'ATOM'\">\n                            {{ $filters.toFixed((totalChartThird / currentNetwork.exponent) * currentNetwork.price_atom, 2) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'ETH'\">\n                            {{ $filters.toFixed((totalChartThird / currentNetwork.exponent) * currentNetwork.price_eth, 4) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'BTC'\">\n                            {{ $filters.toFixed((totalChartThird / currentNetwork.exponent) * currentNetwork.price_btc, 5) }}\n                            </template>\n\n                            <span>{{ store.currency }}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"charts\" v-if=\"chartActive == 4\">\n                <div class=\"chart chartFourth active\">\n                    <Doughnut ref=\"chartFourth\" :data=\"chartDataFourth\" :options=\"chartOptionsFourth\" />\n\n                    <div class=\"total\">\n                        <div class=\"label\">{{ $t('message.account_charts_total_assets') }}</div>\n\n                        <div class=\"price\">\n                            <template v-if=\"store.currency == 'USDT'\">\n                            {{ $filters.toFixed(currentData.totalPrice_usdt, 2) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'ATOM'\">\n                            {{ $filters.toFixed(currentData.totalPrice_atom, 2) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'ETH'\">\n                            {{ $filters.toFixed(currentData.totalPrice_eth, 4) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'BTC'\">\n                            {{ $filters.toFixed(currentData.totalPrice_btc, 5) }}\n                            </template>\n\n                            <span>{{ store.currency }}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"charts\" v-if=\"chartActive == 5\">\n                <div class=\"chart chartFifth active\">\n                    <Doughnut ref=\"chartFifth\" :data=\"chartDataFifth\" :options=\"chartOptionsFifth\" />\n\n                    <div class=\"total\">\n                        <div class=\"label\">{{ $t('message.account_charts_total_assets') }}</div>\n                        <div class=\"price\" v-if=\"(typeof chartFifthActiveLegend == 'undefined' || typeof chartFifthActiveLegend == 'object')\">\n                            <template v-if=\"store.currency == 'USDT'\">\n                            {{ $filters.toFixed(store.account.totalPrice_usdt, 2) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'ATOM'\">\n                            {{ $filters.toFixed(store.account.totalPrice_atom, 2) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'ETH'\">\n                            {{ $filters.toFixed(store.account.totalPrice_eth, 4) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'BTC'\">\n                            {{ $filters.toFixed(store.account.totalPrice_btc, 5) }}\n                            </template>\n\n                            <span>{{ store.currency }}</span>\n                        </div>\n\n                        <template v-for=\"(wallet, index) in store.account.wallets\" :key=\"index\">\n                            <div class=\"price\" v-if=\"chartFifthActiveLegend == index\">\n                                <template v-if=\"store.currency == 'USDT'\">\n                                {{ $filters.toFixed(wallet.totalPrice_usdt, 2) }}\n                                </template>\n\n                                <template v-if=\"store.currency == 'ATOM'\">\n                                {{ $filters.toFixed(wallet.totalPrice_atom, 2) }}\n                                </template>\n\n                                <template v-if=\"store.currency == 'ETH'\">\n                                {{ $filters.toFixed(wallet.totalPrice_eth, 4) }}\n                                </template>\n\n                                <template v-if=\"store.currency == 'BTC'\">\n                                {{ $filters.toFixed(wallet.totalPrice_btc, 5) }}\n                                </template>\n\n                                <span>{{ store.currency }}</span>\n                            </div>\n                        </template>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"col_main\">\n            <div class=\"legends\" v-if=\"chartActive == 1\">\n                <div class=\"legends empty\" v-if=\"!currentNetwork.total.liquid_rewards && !currentNetwork.total.staked && !currentNetwork.total.unbonding\">\n                    <div class=\"legend\">\n                        <div class=\"name\">\n                            <span></span>\n                        </div>\n\n                        <div class=\"amount\">\n                            <span></span>\n                        </div>\n\n                        <div class=\"progress\">\n                            <div class=\"bar\"><div></div></div>\n                        </div>\n                    </div>\n\n                    <div class=\"legend\">\n                        <div class=\"name\">\n                            <span></span>\n                        </div>\n\n                        <div class=\"amount\">\n                            <span></span>\n                        </div>\n\n                        <div class=\"progress\">\n                            <div class=\"bar\"><div></div></div>\n                        </div>\n                    </div>\n\n                    <div class=\"legend\">\n                        <div class=\"name\">\n                            <span></span>\n                        </div>\n\n                        <div class=\"amount\">\n                            <span></span>\n                        </div>\n\n                        <div class=\"progress\">\n                            <div class=\"bar\"><div></div></div>\n                        </div>\n                    </div>\n\n                    <div class=\"legend\">\n                        <div class=\"name\">\n                            <span></span>\n                        </div>\n\n                        <div class=\"amount\">\n                            <span></span>\n                        </div>\n\n                        <div class=\"progress\">\n                            <div class=\"bar\"><div></div></div>\n                        </div>\n                    </div>\n                </div>\n\n                <template v-else>\n                <div class=\"legend\" v-if=\"currentNetwork.total.staked\" :class=\"{'active': chartFirstActiveLegend == 0}\" @mouseenter=\"mouseenterLegend('chartFirst', 0)\" @mouseleave=\"mouseleaveLegend('chartFirst')\">\n                    <div class=\"name\">\n                        <div class=\"color\" style=\"background-color: #950FFF;\"></div>\n                        <span>{{ $t('message.account_charts_staked_label') }}</span>\n                    </div>\n\n                    <div class=\"amount\">\n                        <template v-if=\"(currentNetwork.total.staked / currentNetwork.exponent) < 0.01\">&lt; 0.01</template>\n                        <template v-else>{{ $filters.toFixed(currentNetwork.total.staked / currentNetwork.exponent, 2) }}</template>\n                        {{ currentNetwork.token_name }}\n\n                        <div class=\"price\">\n                            <template v-if=\"store.currency == 'USDT'\">\n                            {{ $filters.toFixed((currentNetwork.total.staked / currentNetwork.exponent) * currentNetwork.price_usdt, 2) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'ATOM'\">\n                            {{ $filters.toFixed((currentNetwork.total.staked / currentNetwork.exponent) * currentNetwork.price_atom, 2) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'ETH'\">\n                            {{ $filters.toFixed((currentNetwork.total.staked / currentNetwork.exponent) * currentNetwork.price_eth, 4) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'BTC'\">\n                            {{ $filters.toFixed((currentNetwork.total.staked / currentNetwork.exponent) * currentNetwork.price_btc, 5) }}\n                            </template>\n\n                            {{ store.currency }}\n                        </div>\n                    </div>\n\n                    <div class=\"progress\">\n                        <div class=\"bar\"><div style=\"background-color: #950FFF;\" :style=\"setWidth(calcPercentsChart1('staked'))\"></div></div>\n                    </div>\n                </div>\n\n                <div class=\"legend\" v-if=\"currentNetwork.total.liquid_rewards\" :class=\"{'active': chartFirstActiveLegend == 1}\" @mouseenter=\"mouseenterLegend('chartFirst', 1)\" @mouseleave=\"mouseleaveLegend('chartFirst')\">\n                    <div class=\"name\">\n                        <div class=\"color\" style=\"background-color: #0343E8;\"></div>\n                        <span>{{ $t('message.account_charts_liquid_tokens_label') }}</span>\n                    </div>\n\n                    <div class=\"amount\">\n                        <template v-if=\"(currentNetwork.total.liquid_rewards / currentNetwork.exponent) < 0.01\">&lt; 0.01</template>\n                        <template v-else>{{ $filters.toFixed(currentNetwork.total.liquid_rewards / currentNetwork.exponent, 2) }}</template>\n                        {{ currentNetwork.token_name }}\n\n                        <div class=\"price\">\n                            <template v-if=\"store.currency == 'USDT'\">\n                            {{ $filters.toFixed((currentNetwork.total.liquid_rewards / currentNetwork.exponent) * currentNetwork.price_usdt, 2) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'ATOM'\">\n                            {{ $filters.toFixed((currentNetwork.total.liquid_rewards / currentNetwork.exponent) * currentNetwork.price_atom, 2) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'ETH'\">\n                            {{ $filters.toFixed((currentNetwork.total.liquid_rewards / currentNetwork.exponent) * currentNetwork.price_eth, 4) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'BTC'\">\n                            {{ $filters.toFixed((currentNetwork.total.liquid_rewards / currentNetwork.exponent) * currentNetwork.price_btc, 5) }}\n                            </template>\n\n                            {{ store.currency }}\n                        </div>\n                    </div>\n\n                    <div class=\"progress\">\n                        <div class=\"bar\"><div style=\"background-color: #0343E8;\" :style=\"setWidth(calcPercentsChart1('liquid_rewards'))\"></div></div>\n                    </div>\n                </div>\n\n                <div class=\"legend\" v-if=\"currentNetwork.total.unbonding\" :class=\"{'active': chartFirstActiveLegend == 2}\" @mouseenter=\"mouseenterLegend('chartFirst', 2)\" @mouseleave=\"mouseleaveLegend('chartFirst')\">\n                    <div class=\"name\">\n                        <div class=\"color\" style=\"background-color: #EB5757;\"></div>\n                        <span>{{ $t('message.account_charts_unbonding_label') }}</span>\n                    </div>\n\n                    <div class=\"amount\">\n                        <template v-if=\"(currentNetwork.total.unbonding / currentNetwork.exponent) < 0.01\">&lt; 0.01</template>\n                        <template v-else>{{ $filters.toFixed(currentNetwork.total.unbonding / currentNetwork.exponent, 2) }}</template>\n                        {{ currentNetwork.token_name }}\n\n                        <div class=\"price\">\n                            <template v-if=\"store.currency == 'USDT'\">\n                            {{ $filters.toFixed((currentNetwork.total.unbonding / currentNetwork.exponent) * currentNetwork.price_usdt, 2) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'ATOM'\">\n                            {{ $filters.toFixed((currentNetwork.total.unbonding / currentNetwork.exponent) * currentNetwork.price_atom, 2) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'ETH'\">\n                            {{ $filters.toFixed((currentNetwork.total.unbonding / currentNetwork.exponent) * currentNetwork.price_eth, 4) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'BTC'\">\n                            {{ $filters.toFixed((currentNetwork.total.unbonding / currentNetwork.exponent) * currentNetwork.price_btc, 5) }}\n                            </template>\n\n                            {{ store.currency }}\n                        </div>\n                    </div>\n\n                    <div class=\"progress\">\n                        <div class=\"bar\"><div style=\"background-color: #EB5757;\" :style=\"setWidth(calcPercentsChart1('unbonding'))\"></div></div>\n                    </div>\n                </div>\n                </template>\n            </div>\n\n\n            <div class=\"legends\" v-if=\"chartActive == 2\">\n                <div class=\"legends empty\" v-if=\"!currentNetwork.totalPrice_usdt\">\n                    <div class=\"legend\">\n                        <div class=\"name\">\n                            <span></span>\n                        </div>\n\n                        <div class=\"amount\">\n                            <span></span>\n                        </div>\n\n                        <div class=\"progress\">\n                            <div class=\"bar\"><div></div></div>\n                        </div>\n                    </div>\n\n                    <div class=\"legend\">\n                        <div class=\"name\">\n                            <span></span>\n                        </div>\n\n                        <div class=\"amount\">\n                            <span></span>\n                        </div>\n\n                        <div class=\"progress\">\n                            <div class=\"bar\"><div></div></div>\n                        </div>\n                    </div>\n\n                    <div class=\"legend\">\n                        <div class=\"name\">\n                            <span></span>\n                        </div>\n\n                        <div class=\"amount\">\n                            <span></span>\n                        </div>\n\n                        <div class=\"progress\">\n                            <div class=\"bar\"><div></div></div>\n                        </div>\n                    </div>\n\n                    <div class=\"legend\">\n                        <div class=\"name\">\n                            <span></span>\n                        </div>\n\n                        <div class=\"amount\">\n                            <span></span>\n                        </div>\n\n                        <div class=\"progress\">\n                            <div class=\"bar\"><div></div></div>\n                        </div>\n                    </div>\n                </div>\n\n                <template v-else>\n                <div class=\"legend\" v-if=\"currentNetwork.total.liquid\" :class=\"{'active': chartSecondActiveLegend == 0}\" @mouseenter=\"mouseenterLegend('chartSecond', 0)\" @mouseleave=\"mouseleaveLegend('chartSecond')\">\n                    <div class=\"name\">\n                        <div class=\"color\" style=\"background-color: #7879F1;\"></div>\n                        <span>{{ $t('message.account_charts_liquid_tokens_label') }}</span>\n                    </div>\n\n                    <div class=\"amount\">\n                        <template v-if=\"(currentNetwork.total.liquid / currentNetwork.exponent) < 0.01\">&lt; 0.01</template>\n                        <template v-else>{{ $filters.toFixed(currentNetwork.total.liquid / currentNetwork.exponent, 2) }}</template>\n                        {{ currentNetwork.token_name }}\n\n                        <div class=\"price\">\n                            <template v-if=\"store.currency == 'USDT'\">\n                            {{ $filters.toFixed((currentNetwork.total.liquid / currentNetwork.exponent) * currentNetwork.price_usdt, 2) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'ATOM'\">\n                            {{ $filters.toFixed((currentNetwork.total.liquid / currentNetwork.exponent) * currentNetwork.price_atom, 2) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'ETH'\">\n                            {{ $filters.toFixed((currentNetwork.total.liquid / currentNetwork.exponent) * currentNetwork.price_eth, 4) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'BTC'\">\n                            {{ $filters.toFixed((currentNetwork.total.liquid / currentNetwork.exponent) * currentNetwork.price_btc, 5) }}\n                            </template>\n\n                            {{ store.currency }}\n                        </div>\n                    </div>\n                </div>\n\n\n                <div class=\"legend\" v-if=\"currentNetwork.total.ibc\" :class=\"{'active': chartSecondActiveLegend == 1}\" @mouseenter=\"mouseenterLegend('chartSecond', 1)\" @mouseleave=\"mouseleaveLegend('chartSecond')\">\n                    <div class=\"name\" @click.prevent=\"toggleActiveClass\">\n                        <div class=\"color\" style=\"background-color: #EF5DA8;\"></div>\n                        <span>{{ $t('message.account_charts_ibc_label') }}</span>\n\n                        <!-- <svg class=\"arr\"><use xlink:href=\"/sprite.svg#ic_arr_down\"></use></svg> -->\n                    </div>\n\n                    <div class=\"dropdown\">\n                        <!-- <pre>{{ currentNetwork.balance.liquid.ibc }}</pre> -->\n\n                        <div class=\"tokens\">\n                            <div v-for=\"(item, index) in currentNetwork.balance.liquid.ibc\" :key=\"index\" class=\"item\">\n                                <div class=\"logo\">\n                                    <img :src=\"`${item.logo}`\" alt=\"\">\n\n                                    <div class=\"on_chain_logo\">\n                                        <img :src=\"`/${currentNetwork.name}_logo.png`\" alt=\"\">\n                                    </div>\n                                </div>\n\n                                <div>\n                                    <div class=\"token\">{{ item.symbol }}</div>\n\n                                    <div class=\"on_chain\">\n                                        {{ $t('message.account_charts_on_chain') }} {{ store.networks[currentNetwork.name].name }}\n                                    </div>\n                                </div>\n\n                                <div>\n                                    <div class=\"amount\">\n                                        <template v-if=\"item.symbol == 'BOOT'\">\n                                            <span v-if=\"(item.amount / Math.pow(10, item.exponent) / 1000000) < 0.01\">&lt; 0.01</span>\n                                            <span v-else>{{ $filters.toFixed(item.amount / Math.pow(10, item.exponent) / 1000000, 2) }}</span>\n                                        </template>\n\n                                        <template v-else>\n                                            <span v-if=\"(item.amount / Math.pow(10, item.exponent)) < 0.01\">&lt; 0.01</span>\n                                            <span v-else>{{ $filters.toFixed(item.amount / Math.pow(10, item.exponent), 2) }}</span>\n                                        </template>\n\n                                        <span class=\"token\" v-if=\"item.symbol == 'BOOT'\">M{{ item.symbol }}</span>\n                                        <span class=\"token\" v-else>{{ item.symbol }}</span>\n\n                                        <div class=\"price\">\n                                            <template v-if=\"store.currency == 'USDT'\">\n                                            {{ $filters.toFixed((item.amount / Math.pow(10, item.exponent)) * item.price_usdt, 2) }}\n                                            </template>\n\n                                            <template v-if=\"store.currency == 'ATOM'\">\n                                            {{ $filters.toFixed((item.amount / Math.pow(10, item.exponent)) * item.price_atom, 2) }}\n                                            </template>\n\n                                            <template v-if=\"store.currency == 'ETH'\">\n                                            {{ $filters.toFixed((item.amount / Math.pow(10, item.exponent)) * item.price_eth, 4) }}\n                                            </template>\n\n                                            <template v-if=\"store.currency == 'BTC'\">\n                                            {{ $filters.toFixed((item.amount / Math.pow(10, item.exponent)) * item.price_btc, 5) }}\n                                            </template>\n\n                                            {{ store.currency }}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div class=\"legend\" v-if=\"currentNetwork.total.rewards\" :class=\"{'active': chartSecondActiveLegend == 2}\" @mouseenter=\"mouseenterLegend('chartSecond', 2)\" @mouseleave=\"mouseleaveLegend('chartSecond')\">\n                    <div class=\"name\">\n                        <div class=\"color\" style=\"background-color: #1BC562;\"></div>\n                        <span>{{ $t('message.account_charts_rewards_label') }}</span>\n                    </div>\n\n                    <div class=\"amount\">\n                        <template v-if=\"(currentNetwork.total.rewards / currentNetwork.exponent) < 0.01\">&lt; 0.01</template>\n                        <template v-else>{{ $filters.toFixed(currentNetwork.total.rewards / currentNetwork.exponent, 5) }}</template>\n                        {{ currentNetwork.token_name }}\n\n                        <div class=\"price\">\n                            <template v-if=\"store.currency == 'USDT'\">\n                            {{ $filters.toFixed((currentNetwork.total.rewards / currentNetwork.exponent) * currentNetwork.price_usdt, 2) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'ATOM'\">\n                            {{ $filters.toFixed((currentNetwork.total.rewards / currentNetwork.exponent) * currentNetwork.price_atom, 2) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'ETH'\">\n                            {{ $filters.toFixed((currentNetwork.total.rewards / currentNetwork.exponent) * currentNetwork.price_eth, 4) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'BTC'\">\n                            {{ $filters.toFixed((currentNetwork.total.rewards / currentNetwork.exponent) * currentNetwork.price_btc, 5) }}\n                            </template>\n\n                            {{ store.currency }}\n                        </div>\n                    </div>\n                </div>\n                </template>\n            </div>\n\n\n            <div class=\"legends2\" :class=\"{ empty: !currentNetwork.totalPrice_usdt }\" v-if=\"chartActive == 3\">\n                <template v-if=\"!currentNetwork.totalPrice_usdt\">\n                <div class=\"legend\"></div>\n\n                <div class=\"legend\"></div>\n\n                <div class=\"legend\"></div>\n\n                <div class=\"legend\"></div>\n                </template>\n\n                <template v-else>\n                <div v-for=\"(item, index) in currentNetwork.balance.groupByDenom\" :key=\"index\" class=\"legend\" :class=\"{'active': chartThirdActiveLegend == index}\" @mouseenter=\"mouseenterLegend('chartThird', index)\" @mouseleave=\"mouseleaveLegend('chartThird')\">\n                    <div class=\"logo\">\n                        <img :src=\"item.logo\" alt=\"\">\n                    </div>\n\n                    <div class=\"token\">\n                        {{ item.symbol }}\n                    </div>\n\n                    <div class=\"price\">\n                        <div>\n                            <template v-if=\"store.currency == 'USDT'\">\n                            {{ $filters.toFixed((item.amount / currentNetwork.exponent) * currentNetwork.price_usdt, 2) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'ATOM'\">\n                            {{ $filters.toFixed((item.amount / currentNetwork.exponent) * currentNetwork.price_atom, 2) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'ETH'\">\n                            {{ $filters.toFixed((item.amount / currentNetwork.exponent) * currentNetwork.price_eth, 4) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'BTC'\">\n                            {{ $filters.toFixed((item.amount / currentNetwork.exponent) * currentNetwork.price_btc, 5) }}\n                            </template>\n\n                            {{ store.currency }}\n                        </div>\n\n                        <div class=\"percents\">\n                            {{ $filters.toFixed(calcPercentsChart3(item.symbol), 2) }}%\n                        </div>\n                    </div>\n                </div>\n                </template>\n            </div>\n\n\n            <div class=\"legends2\" :class=\"{ empty: !currentNetwork.totalPrice_usdt }\" v-if=\"chartActive == 4\">\n                <template v-if=\"!currentNetwork.totalPrice_usdt\">\n                <div class=\"legend\"></div>\n\n                <div class=\"legend\"></div>\n\n                <div class=\"legend\"></div>\n\n                <div class=\"legend\"></div>\n                </template>\n\n                <template v-else>\n                <div v-for=\"(network, index) in currentData.networks\" :key=\"index\" class=\"legend\" :class=\"{'active': chartFourthActiveLegend == index}\" @mouseenter=\"mouseenterLegend('chartFourth', index)\" @mouseleave=\"mouseleaveLegend('chartFourth')\">\n                    <div class=\"logo\">\n                        <img :src=\"`/${network.name}_logo.png`\" alt=\"\">\n                    </div>\n\n                    <div class=\"token\">\n                        {{ store.networks[network.name].name }}\n                    </div>\n\n                    <div class=\"price\">\n                        <div>{{ $filters.toFixed(calcPercentsChart4(network.totalPrice_usdt), 2) }}%</div>\n\n                        <div class=\"percents\">\n                            <template v-if=\"store.currency == 'USDT'\">\n                            {{ $filters.toFixed(network.totalPrice_usdt, 2) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'ATOM'\">\n                            {{ $filters.toFixed(network.totalPrice_atom, 2) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'ETH'\">\n                            {{ $filters.toFixed(network.totalPrice_eth, 4) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'BTC'\">\n                            {{ $filters.toFixed(network.totalPrice_btc, 5) }}\n                            </template>\n\n                            {{ store.currency }}\n                        </div>\n                    </div>\n                </div>\n                </template>\n            </div>\n\n\n            <div class=\"legends2\" v-if=\"chartActive == 5\">\n                <div v-for=\"(wallet, index) in store.account.wallets\" :key=\"index\" class=\"legend\" :class=\"{'active': chartFifthActiveLegend == index}\" @mouseenter=\"mouseenterLegend('chartFifth', index)\" @mouseleave=\"mouseleaveLegend('chartFifth')\">\n                    <div class=\"address\">\n                        <span v-if=\"wallet.nickname\">{{ wallet.nickname }}</span>\n                        <span v-else>{{ wallet.address.slice(0, 13) + '...' + wallet.address.slice(-6) }}</span>\n                    </div>\n\n                    <div class=\"price\">\n                        <div>\n                        <template v-if=\"store.currency == 'USDT'\">\n                        {{ $filters.toFixed(wallet.totalPrice_usdt, 2) }}\n                        </template>\n\n                        <template v-if=\"store.currency == 'ATOM'\">\n                        {{ $filters.toFixed(wallet.totalPrice_atom, 2) }}\n                        </template>\n\n                        <template v-if=\"store.currency == 'ETH'\">\n                        {{ $filters.toFixed(wallet.totalPrice_eth, 4) }}\n                        </template>\n\n                        <template v-if=\"store.currency == 'BTC'\">\n                        {{ $filters.toFixed(wallet.totalPrice_btc, 5) }}\n                        </template>\n\n                        {{ store.currency }}\n                        </div>\n\n                        <div class=\"percents\">\n                            {{ $filters.toFixed(calcPercentsChart5(wallet.totalPrice_usdt), 2) }}%\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </template>\n    </div>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, reactive, ref, inject, computed } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { generateAddress } from '@/utils'\n\n    import { Chart as ChartJS, ArcElement } from 'chart.js'\n    import { Doughnut } from 'vue-chartjs'\n\n    ChartJS.register(ArcElement)\n\n    var store = useGlobalStore(),\n        i18n = inject('i18n'),\n        emitter = inject('emitter'),\n        loading = ref(true),\n        chartActive = ref(1),\n        chartFirst = ref(null),\n        chartSecond = ref(null),\n        chartThird = ref(null),\n        chartFourth = ref(null),\n        chartFifth = ref(null),\n        chartFirstActiveLegend = ref(),\n        chartSecondActiveLegend = ref(),\n        chartThirdActiveLegend = ref(),\n        chartFourthActiveLegend = ref(),\n        chartFifthActiveLegend = ref(),\n        chartOptionsFirst = reactive({\n            responsive: true,\n            plugins: {\n                legend: false,\n                tooltip: false\n            },\n            animation: {\n                duration: 200\n            },\n            transitions: {\n                active: {\n                    animation: {\n                        duration: 200\n                    }\n                }\n            },\n            onHover: (e, item) => {\n                item.length\n                    ? chartFirstActiveLegend.value = item[0].index\n                    : chartFirstActiveLegend.value = null\n            }\n        }),\n        chartOptionsSecond = reactive({\n            responsive: true,\n            plugins: {\n                legend: false,\n                tooltip: false\n            },\n            animation: {\n                duration: 200\n            },\n            transitions: {\n                active: {\n                    animation: {\n                        duration: 200\n                    }\n                }\n            },\n            onHover: (e, item) => {\n                item.length\n                    ? chartSecondActiveLegend.value = item[0].index\n                    : chartSecondActiveLegend.value = null\n            }\n        }),\n        chartOptionsThird = reactive({\n            responsive: true,\n            plugins: {\n                legend: false,\n                tooltip: false\n            },\n            animation: {\n                duration: 200\n            },\n            transitions: {\n                active: {\n                    animation: {\n                        duration: 200\n                    }\n                }\n            },\n            onHover: (e, item) => {\n                item.length\n                    ? chartThirdActiveLegend.value = item[0].index\n                    : chartThirdActiveLegend.value = null\n            }\n        }),\n        chartOptionsFourth = reactive({\n            responsive: true,\n            plugins: {\n                legend: false,\n                tooltip: false\n            },\n            animation: {\n                duration: 200\n            },\n            transitions: {\n                active: {\n                    animation: {\n                        duration: 200\n                    }\n                }\n            },\n            onHover: (e, item) => {\n                item.length\n                    ? chartFourthActiveLegend.value = item[0].index\n                    : chartFourthActiveLegend.value = null\n            }\n        }),\n        chartOptionsFifth = reactive({\n            responsive: true,\n            plugins: {\n                legend: false,\n                tooltip: false\n            },\n            animation: {\n                duration: 200\n            },\n            transitions: {\n                active: {\n                    animation: {\n                        duration: 200\n                    }\n                }\n            },\n            onHover: (e, item) => {\n                item.length\n                    ? chartFifthActiveLegend.value = item[0].index\n                    : chartFifthActiveLegend.value = null\n            }\n        }),\n\n        chartDatasetsFirst = reactive([]),\n        chartDatasetsSecond = reactive([]),\n        chartDatasetsThird = reactive([]),\n        chartDatasetsFourth = reactive([]),\n        chartDatasetsFifth = reactive([]),\n\n        chartColorsThird = reactive([]),\n        chartColorsFourth = reactive([]),\n\n        chartDataFirst = computed(() => ({\n            labels: [\n                i18n.global.t('message.account_charts_staked_label'),\n                i18n.global.t('message.account_charts_liquid_tokens_label'),\n                i18n.global.t('message.account_charts_unbonding_label')\n            ],\n            datasets: [{\n                data: chartDatasetsFirst,\n                backgroundColor: ['#950FFF', '#0343E8', '#EB5757'],\n                borderColor: '#0d0d0d',\n                borderWidth: 4,\n                hoverBackgroundColor: ['#7700E1', '#3400D1', '#D74343'],\n                hoverBorderColor: ['#7700E1', '#3400D1', '#D74343'],\n                borderAlign: 'inner',\n                cutout: '84%',\n            }]\n        })),\n\n        chartDataSecond = computed(() => ({\n            datasets: [{\n                data: chartDatasetsSecond,\n                backgroundColor: ['#7879F1', '#EF5DA8', '#1BC562'],\n                borderColor: '#0d0d0d',\n                borderWidth: 4,\n                hoverBackgroundColor: ['#7879F1', '#EF5DA8', '#07B14E'],\n                hoverBorderColor: ['#7879F1', '#EF5DA8', '#07B14E'],\n                borderAlign: 'inner',\n                cutout: '80%'\n            }]\n        })),\n\n        chartDataThird = computed(() => ({\n            datasets: [{\n                data: chartDatasetsThird,\n                backgroundColor: chartColorsThird,\n                borderColor: '#0d0d0d',\n                borderWidth: 4,\n                hoverBackgroundColor: chartColorsThird,\n                hoverBorderColor: chartColorsThird,\n                borderAlign: 'inner',\n                cutout: '84%',\n            }]\n        })),\n        chartDataFourth = computed(() => ({\n            datasets: [{\n                data: chartDatasetsFourth,\n                backgroundColor: chartColorsFourth,\n                borderColor: '#0d0d0d',\n                borderWidth: 4,\n                hoverBackgroundColor: chartColorsFourth,\n                hoverBorderColor: chartColorsFourth,\n                borderAlign: 'inner',\n                cutout: '84%',\n            }]\n        })),\n        chartDataFifth = computed(() => ({\n            datasets: [{\n                data: chartDatasetsFifth,\n                backgroundColor: ['#4B0582', '#550694', '#6B09B7', '#800CDB', '#950FFF', '#A636FF', '#B75DFF', '#C983FF'],\n                borderColor: '#0d0d0d',\n                borderWidth: 4,\n                hoverBackgroundColor: ['#4B0582', '#550694', '#6B09B7', '#800CDB', '#950FFF', '#A636FF', '#B75DFF', '#C983FF'],\n                hoverBorderColor: ['#4B0582', '#550694', '#6B09B7', '#800CDB', '#950FFF', '#A636FF', '#B75DFF', '#C983FF'],\n                borderAlign: 'inner',\n                cutout: '84%',\n            }]\n        })),\n        totalChartFirst = ref(0),\n        totalChartThird = ref(0),\n        currentData = ref({\n            networks: [],\n            totalPrice_usdt: 0,\n            totalPrice_eth: 0,\n            totalPrice_btc: 0,\n            totalPrice_atom: 0\n        }),\n        currentNetwork = ref({\n            totalPrice_usdt: 0,\n            totalPrice_eth: 0,\n            totalPrice_btc: 0,\n            totalPrice_atom: 0\n        })\n\n\n    onBeforeMount(async () => {\n        // Get data\n        await getData()\n\n        // Set actual data\n        setActualData()\n    })\n\n\n    // Get data\n    async function getData() {\n        // Set loader\n        loading.value = true\n\n        // Get cosmos hub data\n        for (let wallet of store.account.wallets) {\n            try {\n                await fetch(`https://rpc.bronbro.io/account/account_balance/${generateAddress(store.networks.cosmoshub.address_prefix, wallet.address)}`)\n                    .then(res => res.json())\n                    .then(response => {\n                        // Clean data\n                        if(response.liquid && response.liquid.native) {\n                            for (let i = response.liquid.native.length - 1; i >= 0; i--) {\n                                if (response.liquid.native[i].symbol === null || response.liquid.native[i].exponent === null || response.liquid.native[i].price === null) {\n                                    response.liquid.native.splice(i, 1)\n                                }\n                            }\n                        }\n\n                        if(response.liquid && response.liquid.ibc) {\n                            for (let i = response.liquid.ibc.length - 1; i >= 0; i--) {\n                                if (response.liquid.ibc[i].symbol === null || response.liquid.ibc[i].exponent === null || response.liquid.ibc[i].price === null) {\n                                    response.liquid.ibc.splice(i, 1)\n                                }\n                            }\n                        }\n\n                        if(response.staked) {\n                            for (let i = response.staked.length - 1; i >= 0; i--) {\n                                if (response.staked[i].symbol === null || response.staked[i].exponent === null || response.staked[i].price === null) {\n                                    response.staked.splice(i, 1)\n                                }\n                            }\n                        }\n\n                        if(response.unbonding) {\n                            for (let i = response.unbonding.length - 1; i >= 0; i--) {\n                                if (response.unbonding[i].symbol === null || response.unbonding[i].exponent === null || response.unbonding[i].price === null) {\n                                    response.unbonding.splice(i, 1)\n                                }\n                            }\n                        }\n\n                        if(response.rewards) {\n                            for (let i = response.rewards.length - 1; i >= 0; i--) {\n                                if (response.rewards[i].symbol === null || response.rewards[i].exponent === null || response.rewards[i].price === null) {\n                                    response.rewards.splice(i, 1)\n                                }\n                            }\n                        }\n\n\n                        let totals = {\n                            liquid: 0,\n                            staked: 0,\n                            unbonding: 0,\n                            rewards: 0,\n                            outside: 0,\n                            ibc: 0,\n                            liquid_rewards: 0\n                        },\n                        groupByDenom = []\n\n\n                        // Calc liquid tokens\n                        if(response.liquid && response.liquid.native) {\n                            response.liquid.native.forEach(el => {\n                                // Sum total\n                                totals.liquid += el.amount\n                                totals.liquid_rewards += el.amount\n\n                                // Group by denom\n                                let duplicate = groupByDenom.find(e => e.symbol == el.symbol)\n\n                                if(duplicate) {\n                                    duplicate.amount += (el.amount / Math.pow(10, el.exponent) * (el.price / store.networks.cosmoshub.price_usdt)) * store.networks.cosmoshub.exponent\n                                } else {\n                                    groupByDenom.push({\n                                        'amount': (el.amount / Math.pow(10, el.exponent) * (el.price / store.networks.cosmoshub.price_usdt)) * store.networks.cosmoshub.exponent,\n                                        'logo': el.logo,\n                                        'symbol': el.symbol\n                                    })\n                                }\n                            })\n                        }\n\n                        // Calc ibc tokens\n                        if(response.liquid && response.liquid.ibc) {\n                            response.liquid.ibc.forEach(el => {\n                                // Convert to current denom\n                                el.amountCurrentDenom = el.amount / Math.pow(10, el.exponent) * (el.price / store.networks.cosmoshub.price_usdt)\n\n                                // Sum total\n                                totals.ibc += parseFloat(el.amountCurrentDenom * store.networks.cosmoshub.exponent)\n\n                                // Group by denom\n                                let duplicate = groupByDenom.find(e => e.symbol == el.symbol)\n\n                                if(duplicate) {\n                                    duplicate.amount += (el.amount / Math.pow(10, el.exponent) * (el.price / store.networks.cosmoshub.price_usdt)) * store.networks.cosmoshub.exponent\n                                } else {\n                                    groupByDenom.push({\n                                        'amount': (el.amount / Math.pow(10, el.exponent) * (el.price / store.networks.cosmoshub.price_usdt)) * store.networks.cosmoshub.exponent,\n                                        'logo': el.logo,\n                                        'symbol': el.symbol\n                                    })\n                                }\n\n                                // Set prices\n                                el.price_usdt = el.price\n                                el.price_atom = el.price / store.ATOM_price\n                                el.price_eth = el.price / store.ETH_price\n                                el.price_btc = el.price / store.BTC_price\n                            })\n                        }\n\n                        // Calc staked tokens\n                        if(response.staked) {\n                            response.staked.forEach(el => {\n                                // Sum total\n                                totals.staked += el.amount\n\n                                // Group by denom\n                                let duplicate = groupByDenom.find(e => e.symbol == el.symbol)\n\n                                if(duplicate) {\n                                    duplicate.amount += (el.amount / Math.pow(10, el.exponent) * (el.price / store.networks.cosmoshub.price_usdt)) * store.networks.cosmoshub.exponent\n                                } else {\n                                    groupByDenom.push({\n                                        'amount': (el.amount / Math.pow(10, el.exponent) * (el.price / store.networks.cosmoshub.price_usdt)) * store.networks.cosmoshub.exponent,\n                                        'logo': el.logo,\n                                        'symbol': el.symbol\n                                    })\n                                }\n                            })\n                        }\n\n                        // Calc unbonding tokens\n                        if(response.unbonding) {\n                            response.unbonding.forEach(el => {\n                                // Sum total\n                                totals.unbonding += el.amount\n\n                                // Group by denom\n                                let duplicate = groupByDenom.find(e => e.symbol == el.symbol)\n\n                                if(duplicate) {\n                                    duplicate.amount += (el.amount / Math.pow(10, el.exponent) * (el.price / store.networks.cosmoshub.price_usdt)) * store.networks.cosmoshub.exponent\n                                } else {\n                                    groupByDenom.push({\n                                        'amount': (el.amount / Math.pow(10, el.exponent) * (el.price / store.networks.cosmoshub.price_usdt)) * store.networks.cosmoshub.exponent,\n                                        'logo': el.logo,\n                                        'symbol': el.symbol\n                                    })\n                                }\n                            })\n                        }\n\n                        // Calc rewards tokens\n                        if(response.rewards) {\n                            response.rewards.forEach(el => {\n                                // Convert to current denom\n                                el.amountCurrentDenom = el.amount / Math.pow(10, el.exponent) * (el.price / store.networks.cosmoshub.price_usdt)\n\n                                // Sum total\n                                if(el.amount * Math.pow(10, el.exponent) >= 1) {\n                                    totals.rewards += parseFloat(el.amountCurrentDenom * store.networks.cosmoshub.exponent)\n                                }\n\n                                totals.liquid_rewards = totals.liquid + totals.rewards\n\n                                // Group by denom\n                                let duplicate = groupByDenom.find(e => e.symbol == el.symbol)\n\n                                if(duplicate) {\n                                    duplicate.amount += (el.amount / Math.pow(10, el.exponent) * (el.price / store.networks.cosmoshub.price_usdt)) * store.networks.cosmoshub.exponent\n                                } else {\n                                    groupByDenom.push({\n                                        'amount': (el.amount / Math.pow(10, el.exponent) * (el.price / store.networks.cosmoshub.price_usdt)) * store.networks.cosmoshub.exponent,\n                                        'logo': el.logo,\n                                        'symbol': el.symbol\n                                    })\n                                }\n                            })\n                        }\n\n\n                        // Set data in network\n                        let currentNetworkInWallet = wallet.networks.find(network => network.name == 'cosmoshub')\n\n                        currentNetworkInWallet.address = response.address\n                        currentNetworkInWallet.total = totals\n\n                        currentNetworkInWallet.balance = {\n                            liquid: {\n                                native: response.liquid && response.liquid.native ? response.liquid.native : null,\n                                ibc: response.liquid && response.liquid.ibc ? response.liquid.ibc : null\n                            },\n                            staked: response.staked,\n                            unbonding: response.unbonding,\n                            rewards: response.rewards,\n                            groupByDenom: groupByDenom.sort((a, b) => {\n                                if (a.amount > b.amount) { return -1 }\n                                if (a.amount < b.amount) { return 1 }\n                                return 0\n                            })\n                        }\n\n                        currentNetworkInWallet.totalPrice_usdt = totals.liquid / store.networks.cosmoshub.exponent * store.networks.cosmoshub.price_usdt + totals.ibc / store.networks.cosmoshub.exponent * store.networks.cosmoshub.price_usdt + totals.staked / store.networks.cosmoshub.exponent * store.networks.cosmoshub.price_usdt + totals.rewards / store.networks.cosmoshub.exponent * store.networks.cosmoshub.price_usdt + totals.unbonding / store.networks.cosmoshub.exponent * store.networks.cosmoshub.price_usdt\n\n                        currentNetworkInWallet.totalPrice_atom = totals.liquid / store.networks.cosmoshub.exponent * store.networks.cosmoshub.price_atom + totals.ibc / store.networks.cosmoshub.exponent * store.networks.cosmoshub.price_atom + totals.staked / store.networks.cosmoshub.exponent * store.networks.cosmoshub.price_atom + totals.rewards / store.networks.cosmoshub.exponent * store.networks.cosmoshub.price_atom + totals.unbonding / store.networks.cosmoshub.exponent * store.networks.cosmoshub.price_atom\n\n                        currentNetworkInWallet.totalPrice_eth = totals.liquid / store.networks.cosmoshub.exponent * store.networks.cosmoshub.price_eth + totals.ibc / store.networks.cosmoshub.exponent * store.networks.cosmoshub.price_eth + totals.staked / store.networks.cosmoshub.exponent * store.networks.cosmoshub.price_eth + totals.rewards / store.networks.cosmoshub.exponent * store.networks.cosmoshub.price_eth + totals.unbonding / store.networks.cosmoshub.exponent * store.networks.cosmoshub.price_eth\n\n                        currentNetworkInWallet.totalPrice_btc = totals.liquid / store.networks.cosmoshub.exponent * store.networks.cosmoshub.price_btc + totals.ibc / store.networks.cosmoshub.exponent * store.networks.cosmoshub.price_btc + totals.staked / store.networks.cosmoshub.exponent * store.networks.cosmoshub.price_btc + totals.rewards / store.networks.cosmoshub.exponent * store.networks.cosmoshub.price_btc + totals.unbonding / store.networks.cosmoshub.exponent * store.networks.cosmoshub.price_btc\n\n                        currentNetworkInWallet.totalRewards_usdt = totals.rewards / store.networks.cosmoshub.exponent * currentNetworkInWallet.price_usdt\n                        currentNetworkInWallet.totalRewards_eth = totals.rewards / store.networks.cosmoshub.exponent * currentNetworkInWallet.price_eth\n                        currentNetworkInWallet.totalRewards_atom = totals.rewards / store.networks.cosmoshub.exponent * currentNetworkInWallet.price_atom\n                        currentNetworkInWallet.totalRewards_btc = totals.rewards / store.networks.cosmoshub.exponent * currentNetworkInWallet.price_btc\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n\n        // Calc total prices\n        store.account.wallets.forEach(el => {\n            el.totalPrice_usdt = 0\n            el.totalPrice_eth = 0\n            el.totalPrice_btc = 0\n            el.totalPrice_atom = 0\n\n            el.networks.forEach(network => {\n                el.totalPrice_usdt += network.totalPrice_usdt\n                el.totalPrice_eth += network.totalPrice_eth\n                el.totalPrice_btc += network.totalPrice_btc\n                el.totalPrice_atom += network.totalPrice_atom\n            })\n        })\n\n\n        // Calc total rewards\n        store.account.wallets.forEach(el => {\n            el.totalRewards_usdt = 0\n            el.totalRewards_eth = 0\n            el.totalRewards_btc = 0\n            el.totalRewards_atom = 0\n\n            el.networks.forEach(network => {\n                el.totalRewards_usdt += network.totalRewards_usdt\n                el.totalRewards_eth += network.totalRewards_eth\n                el.totalRewards_btc += network.totalRewards_btc\n                el.totalRewards_atom += network.totalRewards_atom\n            })\n        })\n    }\n\n\n    // Set actual data\n    function setActualData() {\n        if(store.account.currentWallet != 'all') {\n            // Get current walllet data\n            currentData.value = store.account.wallets.find(el => el.address == store.account.currentWallet)\n\n            // Get current network data\n            currentNetwork.value = currentData.value.networks.find(el => el.name == 'cosmoshub')\n\n            // Calc charts totals\n            totalChartFirst.value = currentNetwork.value.total.staked + currentNetwork.value.total.liquid_rewards + currentNetwork.value.total.unbonding\n\n            currentNetwork.value.balance.groupByDenom.forEach(el => totalChartThird.value += el.amount)\n\n\n            // Set data for first chart\n            chartDatasetsFirst.push(currentNetwork.value.total.staked)\n            chartDatasetsFirst.push(currentNetwork.value.total.liquid_rewards)\n            chartDatasetsFirst.push(currentNetwork.value.total.unbonding)\n\n\n            // Set data for second chart\n            chartDatasetsSecond.push(currentNetwork.value.total.liquid)\n            chartDatasetsSecond.push(currentNetwork.value.total.ibc)\n            chartDatasetsSecond.push(currentNetwork.value.total.rewards)\n\n\n            // Set data for third chart\n            currentNetwork.value.balance.groupByDenom.forEach(el => {\n                chartDatasetsThird.push(el.amount)\n\n                let color = store.networkColors[el.symbol]\n\n                if(el.symbol.substring(0, 2) == 'st') {\n                    color = store.networkColors.STRD\n                }\n\n                if(el.symbol.substring(0, 3) == 'stk') {\n                    color = store.networkColors.XPRT\n                }\n\n                if(el.symbol.substring(0, 1) == 'q') {\n                    color = store.networkColors.QCK\n                }\n\n                chartColorsThird.push(color)\n            })\n\n\n            // Set data for fourth chart\n            currentData.value.networks.forEach(network => {\n                chartDatasetsFourth.push(network.totalPrice_usdt)\n                chartColorsFourth.push(network.color)\n            })\n        } else {\n            let totals = {\n                liquid: 0,\n                staked: 0,\n                unbonding: 0,\n                rewards: 0,\n                outside: 0,\n                ibc: 0,\n                liquid_rewards: 0\n            },\n            allGroupByDenom = []\n\n\n            // Get current walllet data\n            for (let wallet of store.account.wallets) {\n                currentData.value.totalPrice_usdt += wallet.totalPrice_usdt,\n                currentData.value.totalPrice_eth += wallet.totalPrice_eth,\n                currentData.value.totalPrice_btc += wallet.totalPrice_btc,\n                currentData.value.totalPrice_atom += wallet.totalPrice_atom\n            }\n\n            // Get current network data\n            currentNetwork.value = store.account.wallets[0].networks.find(el => el.name == 'cosmoshub')\n\n\n            // Calc charts totals\n            for (let wallet of store.account.wallets) {\n                for (let network of wallet.networks) {\n                    if(network.name == 'cosmoshub') {\n                        totals.liquid += network.total.liquid,\n                        totals.staked += network.total.staked ,\n                        totals.unbonding += network.total.unbonding,\n                        totals.rewards += network.total.rewards,\n                        totals.outside += network.total.outside,\n                        totals.ibc += network.total.ibc,\n                        totals.liquid_rewards += network.total.liquid_rewards\n\n                        network.balance.groupByDenom.forEach(el => totalChartThird.value += el.amount)\n                    }\n                }\n            }\n\n            totalChartFirst.value = totals.staked + totals.liquid_rewards + totals.unbonding\n\n\n            // Balance\n            let i = 0\n\n            for (let wallet of store.account.wallets) {\n                for (let network of wallet.networks) {\n                    if(network.name == 'cosmoshub') {\n                        // Concat ibc\n                        if(i && network.balance.liquid.ibc != null) {\n                            network.balance.liquid.ibc.forEach(el => {\n                                if(currentNetwork.value.balance.liquid.ibc != null) {\n                                    let duplicate = currentNetwork.value.balance.liquid.ibc.find(e => e.symbol == el.symbol)\n\n                                    duplicate\n                                        ? duplicate.amount += el.amount\n                                        : currentNetwork.value.balance.liquid.ibc.push(el)\n                                } else {\n                                    currentNetwork.value.balance.liquid.ibc = []\n                                    currentNetwork.value.balance.liquid.ibc.push(el)\n                                }\n                            })\n                        }\n\n                        // Group by denom\n                        network.balance.groupByDenom.forEach(el => {\n                            let duplicate = allGroupByDenom.find(e => e.symbol == el.symbol)\n\n                            if(duplicate) {\n                                duplicate.amount += el.amount\n                            } else {\n                                allGroupByDenom.push({\n                                    'amount': el.amount,\n                                    'logo': el.logo,\n                                    'symbol': el.symbol\n                                })\n                            }\n                        })\n\n                        i++\n                    }\n                }\n            }\n\n            allGroupByDenom.sort((a, b) => {\n                if (a.amount > b.amount) { return -1 }\n                if (a.amount < b.amount) { return 1 }\n                return 0\n            })\n\n\n            // Set data for first chart\n            chartDatasetsFirst.push(totals.staked)\n            chartDatasetsFirst.push(totals.liquid_rewards)\n            chartDatasetsFirst.push(totals.unbonding)\n\n\n            // Set data for second chart\n            chartDatasetsSecond.push(totals.liquid)\n            chartDatasetsSecond.push(totals.ibc)\n            chartDatasetsSecond.push(totals.rewards)\n\n\n            // Set data for first/second legends\n            currentNetwork.value.total = totals\n\n\n\n            // Set data for third chart\n            allGroupByDenom.forEach(el => {\n                chartDatasetsThird.push(el.amount)\n\n                let color = store.networkColors[el.symbol]\n\n                if(el.symbol.substring(0, 2) == 'st') {\n                    color = store.networkColors.STRD\n                }\n\n                if(el.symbol.substring(0, 3) == 'stk') {\n                    color = store.networkColors.XPRT\n                }\n\n                if(el.symbol.substring(0, 1) == 'q') {\n                    color = store.networkColors.QCK\n                }\n\n                chartColorsThird.push(color)\n            })\n\n\n            // Set data for third legends\n            currentNetwork.value.balance.groupByDenom = allGroupByDenom\n\n\n            // Set data for fourth chart\n            let cosmosHubWalletTotalPrice_usdt = 0,\n                cosmosHubWalletTotalPrice_atom = 0,\n                cosmosHubWalletTotalPrice_btc = 0,\n                cosmosHubWalletTotalPrice_eth = 0\n\n            for (let wallet of store.account.wallets) {\n                for (let network of wallet.networks) {\n                    if(network.name == 'cosmoshub') {\n                        cosmosHubWalletTotalPrice_usdt += network.totalPrice_usdt\n                        cosmosHubWalletTotalPrice_atom += network.totalPrice_atom\n                        cosmosHubWalletTotalPrice_btc += network.totalPrice_ubttc\n                        cosmosHubWalletTotalPrice_eth += network.totalPrice_eth\n                    }\n                }\n            }\n\n            // Set data for fourth legends\n            currentData.value.networks.push({\n                name: 'cosmoshub',\n                totalPrice_usdt: cosmosHubWalletTotalPrice_usdt,\n                totalPrice_eth: cosmosHubWalletTotalPrice_eth,\n                totalPrice_btc: cosmosHubWalletTotalPrice_btc,\n                totalPrice_atom: cosmosHubWalletTotalPrice_atom\n            })\n\n            // Set data to chart\n            chartDatasetsFourth.push(cosmosHubWalletTotalPrice_usdt)\n            chartColorsFourth.push(currentNetwork.value.color)\n        }\n\n\n        // Set data for fifth chart\n        store.account.wallets.forEach(el => chartDatasetsFifth.push(el.totalPrice_usdt))\n\n\n        // Calc totals for account\n        store.account.totalPrice_usdt = 0\n        store.account.totalPrice_eth = 0\n        store.account.totalPrice_btc = 0\n        store.account.totalPrice_atom = 0\n\n        store.account.wallets.forEach(wallet => {\n            store.account.totalPrice_usdt += wallet.totalPrice_usdt\n            store.account.totalPrice_eth += wallet.totalPrice_eth\n            store.account.totalPrice_btc += wallet.totalPrice_btc\n            store.account.totalPrice_atom += wallet.totalPrice_atom\n        })\n\n        store.account.totalRewards_usdt = 0\n        store.account.totalRewards_eth = 0\n        store.account.totalRewards_btc = 0\n        store.account.totalRewards_atom = 0\n\n        store.account.wallets.forEach(wallet => {\n            store.account.totalRewards_usdt += wallet.totalRewards_usdt\n            store.account.totalRewards_eth += wallet.totalRewards_eth\n            store.account.totalRewards_btc += wallet.totalRewards_btc\n            store.account.totalRewards_atom += wallet.totalRewards_atom\n        })\n\n\n        // Hide loader\n        loading.value = false\n    }\n\n\n    // Set width\n    function setWidth(percents) {\n        return `width: ${percents}%;`\n    }\n\n\n    // Toggle active class\n    function toggleActiveClass(e) {\n        e.target.closest('.legend').classList.toggle('active')\n    }\n\n\n    // Mouse enter on legend for third chart\n    function mouseenterLegend(chart, dataIndex) {\n        let chartInstance = {}\n\n        if(chart == 'chartFirst') {\n            chartInstance = chartFirst.value.chart\n            chartFirstActiveLegend.value = dataIndex\n        }\n\n        if(chart == 'chartSecond') {\n            chartInstance = chartSecond.value.chart\n            chartSecondActiveLegend.value = dataIndex\n        }\n\n        if(chart == 'chartThird') {\n            chartInstance = chartThird.value.chart\n            chartThirdActiveLegend.value = dataIndex\n        }\n\n        if(chart == 'chartFourth') {\n            chartInstance = chartFourth.value.chart\n            chartFourthActiveLegend.value = dataIndex\n        }\n\n        if(chart == 'chartFifth') {\n            chartInstance = chartFifth.value.chart\n            chartFifthActiveLegend.value = dataIndex\n        }\n\n        chartInstance.setActiveElements([{\n            datasetIndex: 0,\n            index: dataIndex\n        }])\n\n        chartInstance.update()\n    }\n\n\n    // Mouse leave from legend for first chart\n    function mouseleaveLegend(chart) {\n        let chartInstance = {}\n\n        if(chart == 'chartFirst') {\n            chartInstance = chartFirst.value.chart\n            chartFirstActiveLegend.value = null\n        }\n\n        if(chart == 'chartSecond') {\n            chartInstance = chartSecond.value.chart\n            chartSecondActiveLegend.value = null\n        }\n\n        if(chart == 'chartThird') {\n            chartInstance = chartThird.value.chart\n            chartThirdActiveLegend.value = null\n        }\n\n        if(chart == 'chartFourth') {\n            chartInstance = chartFourth.value.chart\n            chartFourthActiveLegend.value = null\n        }\n\n        if(chart == 'chartFifth') {\n            chartInstance = chartFifth.value.chart\n            chartFifthActiveLegend.value = null\n        }\n\n        chartInstance.setActiveElements([])\n        chartInstance.update()\n    }\n\n\n    // Calc percents for chart 1\n    function calcPercentsChart1(type) {\n        let result = 0\n\n        if(totalChartFirst.value) {\n            result = currentNetwork.value.total[type] / totalChartFirst.value * 100\n        }\n\n        return result\n    }\n\n\n    // Calc percents for chart 3\n    function calcPercentsChart3(symbol) {\n        let result = 0,\n            token = currentNetwork.value.balance.groupByDenom.find(e => e.symbol == symbol)\n\n        if(totalChartThird.value) {\n            result = token.amount / totalChartThird.value * 100\n        }\n\n        return result\n    }\n\n\n    // Calc percents for chart 4\n    function calcPercentsChart4(price) {\n        let result = 0\n\n        if(currentData.value.totalPrice_usdt) {\n            result = price / currentData.value.totalPrice_usdt * 100\n        }\n\n        return result\n    }\n\n\n    // Calc percents for chart 5\n    function calcPercentsChart5(price) {\n        let result = 0\n\n        if(store.account.totalPrice_usdt) {\n            result = price / store.account.totalPrice_usdt * 100\n        }\n\n        return result\n    }\n</script>\n\n\n<style scoped>\n    .tabs\n    {\n        display: flex;\n\n        width: 100%;\n        margin-bottom: 24px;\n\n        justify-content: flex-start;\n        align-items: stretch;\n        align-content: stretch;\n        flex-wrap: nowrap;\n    }\n\n\n    .tabs .btn\n    {\n        color: #555;\n        font-size: 16px;\n        line-height: 100%;\n\n        display: block;\n\n        width: 100%;\n        min-height: 62px;\n        padding: 10px 0 9px;\n\n        text-align: center;\n\n        border-bottom: 1px solid rgba(255, 255, 255, .1);\n    }\n\n    .tabs .btn + .btn\n    {\n        margin-left: 4px;\n    }\n\n    .tabs .btn:hover,\n    .tabs .btn.active\n    {\n        color: #950fff;\n\n        border-color: #950fff;\n    }\n\n\n    .loader_wrap\n    {\n        position: relative;\n\n        height: auto;\n        padding: 0;\n\n        background: none;\n    }\n\n\n    .block_title\n    {\n        font-size: 20px;\n        font-weight: 500;\n        line-height: 24px;\n\n        width: 100%;\n        margin-bottom: 8px;\n    }\n\n\n    .block_desc\n    {\n        color: #555;\n        line-height: 110%;\n\n        width: 100%;\n        margin-bottom: 24px;\n    }\n\n\n    .col_left\n    {\n        width: 291px;\n        max-width: 100%;\n    }\n\n    .col_main\n    {\n        width: calc(100% - 307px);\n        margin-left: auto;\n    }\n\n\n\n    .charts\n    {\n        position: relative;\n\n        width: 291px;\n        max-width: 100%;\n        height: 291px;\n\n        border-radius: 50%;\n        background: #0d0d0d;\n    }\n\n\n    .chart\n    {\n        position: absolute !important;\n        z-index: 1;\n        top: 0;\n        left: 0;\n\n        width: 100%;\n        height: 100%;\n\n        cursor: pointer;\n\n        opacity: .2;\n        border-radius: 50%;\n\n        clip-path: circle(50% at 50% 50%);\n    }\n\n    .chart.chartSecond\n    {\n        z-index: 3;\n\n        width: calc(100% - 44px);\n        height: calc(100% - 44px);\n        margin: auto;\n\n        inset: 0;\n    }\n\n    .chart.chartThird\n    {\n        cursor: default;\n    }\n\n    .chart:before\n    {\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        content: '';\n\n        border: 14px solid #282828;\n        border-radius: 50%;\n    }\n\n    .chart:after\n    {\n        position: absolute;\n        z-index: 5;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        content: '';\n\n        border-radius: 50%;\n    }\n\n    .chart.active\n    {\n        opacity: 1;\n    }\n\n    .chart.active:after\n    {\n        display: none;\n    }\n\n\n\n    .chart .total\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 100%;\n\n        position: absolute;\n        z-index: 0;\n        top: 0;\n        left: 0;\n\n        display: flex;\n\n        width: 100%;\n        height: 100%;\n\n        text-align: center;\n        white-space: nowrap;\n        pointer-events: none;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .chart .total .label\n    {\n        width: 100%;\n        margin-bottom: 8px;\n    }\n\n\n    .chart .total .price\n    {\n        color: #fff;\n        font-size: 18px;\n        font-weight: 500;\n        line-height: 100%;\n\n        width: 100%;\n    }\n\n    .chart .total .price.hide\n    {\n        display: none;\n    }\n\n    .chart .total .price span\n    {\n        font-size: 12px;\n        font-weight: 400;\n        line-height: 100%;\n\n        margin-left: 4px;\n\n        text-transform: uppercase;\n    }\n\n\n\n    .legends > * + *\n    {\n        margin-top: 8px;\n    }\n\n\n    .legends .legend\n    {\n        display: flex;\n\n        padding: 6px 8px;\n\n        transition: background .2s linear;\n\n        border-radius: 10px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .legends .legend .name\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 100%;\n\n        display: flex;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    /* .legends .legend .name.spoler_btn\n                                                                                    {\n                                                                                        cursor: pointer;\n                                                                                    } */\n\n    .legends .legend .color\n    {\n        width: 10px;\n        height: 10px;\n        margin-right: 4px;\n\n        border-radius: 50%;\n    }\n\n\n    /* .legends .legend .arr\n                                                                                    {\n                                                                                        color: #fff;\n\n                                                                                        display: block;\n\n                                                                                        width: 24px;\n                                                                                        height: 24px;\n                                                                                        margin-left: auto;\n\n                                                                                        transition: transform .2s linear;\n                                                                                    } */\n\n\n    .legends .legend .dropdown\n    {\n        /* display: none; */\n        width: 100%;\n        margin-top: 8px;\n    }\n\n\n    .legends .legend .amount\n    {\n        font-size: 18px;\n        font-weight: 600;\n        line-height: 100%;\n\n        margin-left: auto;\n\n        text-align: right;\n        white-space: nowrap;\n        text-transform: uppercase;\n    }\n\n    .legends .legend .amount .token\n    {\n        margin-left: 4px;\n    }\n\n\n    .legends .legend .price\n    {\n        color: #555;\n        font-size: 12px;\n        font-weight: 400;\n        line-height: 100%;\n\n        margin-top: 4px;\n\n        white-space: nowrap;\n    }\n\n\n\n    .legends .legend .progress\n    {\n        display: flex;\n\n        width: 100%;\n        margin-top: 8px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .legends .legend .bar\n    {\n        width: 100%;\n        height: 8px;\n\n        border-radius: 4px;\n        background: #282828;\n    }\n\n    .legends .legend .bar div\n    {\n        width: 0;\n        height: 8px;\n\n        transition: width .4s linear;\n\n        border-radius: 4px;\n    }\n\n\n    /* .legends .legend .percents\n                                                        {\n                                                            font-size: 14px;\n                                                            font-weight: 500;\n                                                            line-height: 100%;\n\n                                                            width: 52px;\n                                                            margin-left: auto;\n\n                                                            text-align: right;\n                                                            white-space: nowrap;\n                                                        } */\n\n\n    .legends .legend .tokens\n    {\n        margin-top: 8px;\n    }\n\n\n    .legends .legend .tokens .item\n    {\n        display: flex;\n\n        padding-top: 8px;\n\n        border-top: 1px solid rgba(255, 255, 255, .05);\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .legends .legend .tokens .item + .item\n    {\n        margin-top: 8px;\n    }\n\n\n    .legends .legend .tokens .item > *:last-child\n    {\n        margin-left: auto;\n    }\n\n\n    .legends .legend .tokens .token\n    {\n        font-size: 16px;\n        font-weight: 500;\n        line-height: 100%;\n\n        white-space: nowrap;\n    }\n\n\n    .legends .legend .tokens .on_chain\n    {\n        color: #555;\n        font-size: 12px;\n        line-height: 100%;\n\n        margin-top: 4px;\n    }\n\n\n    .legends .legend .tokens .logo\n    {\n        position: relative;\n\n        width: 30px;\n        height: 30px;\n        margin-right: 11px;\n\n        border-radius: 50%;\n    }\n\n    .legends .legend .tokens .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n\n    .legends .legend .tokens .on_chain_logo\n    {\n        position: absolute;\n        right: -3px;\n        bottom: -5px;\n\n        width: 16px;\n        height: 16px;\n\n        border: 1px solid #141414;\n        border-radius: 50%;\n    }\n\n\n    .legends .legend.active\n    {\n        background: #141414;\n    }\n\n    .legends .legend.active .arr\n    {\n        transform: rotate(180deg);\n    }\n\n    .legends .legend.active .dropdown\n    {\n        display: block;\n    }\n\n\n\n    .legends.empty .legend .name span,\n    .legends.empty .legend .amount span\n    {\n        display: block;\n\n        width: 80px;\n        height: 14px;\n\n        border-radius: 8px;\n        background: #282828;\n    }\n\n\n\n    .legends2 .legend\n    {\n        display: flex;\n\n        padding: 6px 8px;\n\n        cursor: pointer;\n        transition: background .2s linear;\n\n        border-radius: 10px;\n        background: #141414;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .legends2 .legend + .legend\n    {\n        margin-top: 8px;\n    }\n\n\n    .legends2 .legend .logo\n    {\n        width: 24px;\n        height: 24px;\n        margin-right: 8px;\n\n        border-radius: 50%;\n    }\n\n    .legends2 .legend .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n\n    .legends2 .legend .token,\n    .legends2 .legend .address\n    {\n        font-size: 14px;\n        line-height: 100%;\n    }\n\n    .legends2 .legend .address\n    {\n        overflow: hidden;\n\n        width: calc(100% - 140px);\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .legends2 .legend .price\n    {\n        font-size: 14px;\n        line-height: 100%;\n\n        margin-left: auto;\n\n        text-align: right;\n        white-space: nowrap;\n    }\n\n\n    .legends2 .legend .percents\n    {\n        color: #464646;\n        font-size: 12px;\n        line-height: 100%;\n\n        margin-top: 4px;\n    }\n\n\n    .legends2 .legend:hover,\n    .legends2 .legend.active\n    {\n        background: #212121;\n    }\n\n\n    .legends2.empty .legend\n    {\n        height: 40px;\n\n        border-radius: 8px;\n        background: #282828;\n    }\n\n\n\n    .avatar\n    {\n        position: absolute;\n        z-index: 5;\n\n        width: 200px;\n        height: 200px;\n        margin: auto;\n\n        border: 5px solid #0d0d0d;\n        border-radius: 50%;\n\n        inset: 0;\n    }\n\n\n    .avatar img\n    {\n        position: relative;\n        z-index: 10;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n        background: #141414;\n\n        object-fit: cover;\n    }\n\n\n    .avatar .edit_link\n    {\n        color: currentColor;\n        font-size: 14px;\n        line-height: 120%;\n\n        position: absolute;\n        z-index: 20;\n        top: 0;\n        left: 0;\n\n        display: flex;\n\n        width: 100%;\n        height: 100%;\n\n        transition: opacity .2s linear;\n        text-decoration: none;\n\n        opacity: 0;\n        border-radius: 50%;\n        background: rgba(0, 0, 0, .6);\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .avatar .edit_link .btn\n    {\n        display: flex;\n\n        padding: 8px;\n\n        border-radius: 10px;\n        background: #950fff;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .avatar .edit_link .icon\n    {\n        display: block;\n\n        width: 16px;\n        height: 16px;\n        margin-right: 4px;\n    }\n\n    .avatar .edit_link:hover\n    {\n        opacity: 1;\n    }\n\n</style>","import script from \"./Charts.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Charts.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Charts.vue?vue&type=style&index=0&id=53e03578&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-53e03578\"]])\n\nexport default __exports__","<template>\n    <section class=\"stats\">\n        <!-- <pre>{{ data }}</pre> -->\n\n        <div class=\"row\">\n            <div class=\"item\">\n                <div class=\"label\">{{ $t('message.account_APR') }}</div>\n\n                <div class=\"loader_wrap\" v-if=\"loading\">\n                    <div class=\"loader\"><span></span></div>\n                </div>\n\n                <div class=\"val\" v-else>{{ $filters.toFixed(data.apr * 100, 2) }}%</div>\n            </div>\n\n\n            <div class=\"item\">\n                <div class=\"label\">{{ $t('message.account_rewards') }}</div>\n\n                <div class=\"loader_wrap\" v-if=\"loading\">\n                    <div class=\"loader\"><span></span></div>\n                </div>\n\n                <div class=\"val\" v-else>\n                    <template v-if=\"store.currency == 'USDT'\">\n                    {{ '~' + $filters.toFixed(store.account.totalRewards_usdt, 2) }}\n                    </template>\n\n                    <template v-if=\"store.currency == 'ATOM'\">\n                    {{ '~' + $filters.toFixed(store.account.totalRewards_atom, 2) }}\n                    </template>\n\n                    <template v-if=\"store.currency == 'ETH'\">\n                    {{ '~' + $filters.toFixed(store.account.totalRewards_eth, 4) }}\n                    </template>\n\n                    <template v-if=\"store.currency == 'BTC'\">\n                    {{ '~' + $filters.toFixed(store.account.totalRewards_btc, 5) }}\n                    </template>\n\n                    <div class=\"currency\">{{ store.currency }}</div>\n                </div>\n\n                <!-- <div class=\"val\" v-else>\n                    {{ $filters.toFixed(data.voting_power * 100, 8) }}\n                </div> -->\n            </div>\n\n\n            <div class=\"item\">\n                <div class=\"label\">{{ $t('message.account_passport_value') }}</div>\n\n                <div class=\"loader_wrap\" v-if=\"loading\">\n                    <div class=\"loader\"><span></span></div>\n                </div>\n\n                <div class=\"val\" v-else>\n                    <template v-if=\"store.currency == 'USDT'\">\n                    {{ '~' + $filters.toFixed(store.account.totalPrice_usdt, 2) }}\n                    </template>\n\n                    <template v-if=\"store.currency == 'ATOM'\">\n                    {{ '~' + $filters.toFixed(store.account.totalPrice_atom, 2) }}\n                    </template>\n\n                    <template v-if=\"store.currency == 'ETH'\">\n                    {{ '~' + $filters.toFixed(store.account.totalPrice_eth, 4) }}\n                    </template>\n\n                    <template v-if=\"store.currency == 'BTC'\">\n                    {{ '~' + $filters.toFixed(store.account.totalPrice_btc, 5) }}\n                    </template>\n\n                    <div class=\"currency\">{{ store.currency }}</div>\n                </div>\n            </div>\n\n\n            <div class=\"item\">\n                <div class=\"label\">{{ $t('message.account_RPDE') }}</div>\n\n                <div class=\"loader_wrap\" v-if=\"loading\">\n                    <div class=\"loader\"><span></span></div>\n                </div>\n\n                <div class=\"val\" v-else>\n                    <template v-if=\"store.currency == 'USDT'\">\n                    {{ '~' + $filters.toFixed(data.RPDE_USDT, 5) }}\n                    </template>\n\n                    <template v-if=\"store.currency == 'ATOM'\">\n                    {{ '~' + $filters.toFixed(data.RPDE_ATOM, 5) }}\n                    </template>\n\n                    <template v-if=\"store.currency == 'ETH'\">\n                    {{ '~' + $filters.toFixed(data.RPDE_ETH, 7) }}\n                    </template>\n\n                    <template v-if=\"store.currency == 'BTC'\">\n                    {{ '~' + $filters.toFixed(data.RPDE_BTC, 7) }}\n                    </template>\n\n                    <div class=\"currency\">{{ store.currency }}</div>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { ref, onBeforeMount } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { generateAddress } from '@/utils'\n\n    const store = useGlobalStore(),\n        loading = ref(true),\n        data = ref({\n            RPDE_USDT: 0,\n            RPDE_BTC: 0,\n            RPDE_ETH: 0,\n            RPDE_ATOM: 0\n        })\n\n\n    onBeforeMount(async () => {\n        // Get data\n        await getData()\n    })\n\n\n    // Get data\n    async function getData() {\n        // Set loader\n        loading.value = true\n\n        for (const wallet of store.account.wallets) {\n            // Get cosmos hub data\n            let cosmosHubAddress = generateAddress(store.networks[store.currentNetwork].address_prefix, wallet.address)\n\n            try {\n                await fetch(`https://rpc.bronbro.io/account/account_info/${cosmosHubAddress}`)\n                    .then(res => res.json())\n                    .then(response => {\n                        // Set network info\n                        let currentNetworkInWallet = wallet.networks.find(network => network.name == 'cosmoshub')\n\n                        currentNetworkInWallet.info = response\n\n                        // Set current data\n                        data.value.apr = response.apr\n                    })\n\n                // Calc wallet info\n                // wallet.info.voting_power = 0\n                wallet.info.RPDE_USDT = 0\n                wallet.info.RPDE_BTC = 0\n                wallet.info.RPDE_ETH = 0\n                wallet.info.RPDE_ATOM = 0\n\n                for (const network of wallet.networks) {\n                    // wallet.info.voting_power += network.info.voting_power\n\n                    wallet.info.RPDE_USDT += (network.info.rpde.amount / Math.pow(10, network.info.rpde.exponent)) * network.info.rpde.price\n                    wallet.info.RPDE_BTC += (network.info.rpde.amount / Math.pow(10, network.info.rpde.exponent)) * (network.info.rpde.price / store.BTC_price)\n                    wallet.info.RPDE_ETH += (network.info.rpde.amount / Math.pow(10, network.info.rpde.exponent)) * (network.info.rpde.price / store.ETH_price)\n                    wallet.info.RPDE_ATOM += (network.info.rpde.amount / Math.pow(10, network.info.rpde.exponent)) * (network.info.rpde.price / store.ATOM_price)\n                }\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n\n        // Calc account info\n        // store.account.info.voting_power = 0\n        store.account.info.RPDE_USDT = 0\n        store.account.info.RPDE_BTC = 0\n        store.account.info.RPDE_ETH = 0\n        store.account.info.RPDE_ATOM = 0\n\n        for (const wallet of store.account.wallets) {\n            // store.account.info.voting_power += wallet.voting_power\n\n            store.account.info.RPDE_USDT += wallet.RPDE_USDT\n            store.account.info.RPDE_BTC += wallet.RPDE_BTC\n            store.account.info.RPDE_ETH += wallet.RPDE_ETH\n            store.account.info.RPDE_ATOM += wallet.RPDE_ATOM\n        }\n\n\n        // Set current data\n        if(store.account.currentWallet != 'all') {\n            // Data from current wallet\n            let currentWallet = store.account.wallets.find(el => el.address == store.account.currentWallet)\n\n            // data.value.voting_power = currentWallet.info.voting_power,\n            data.value.RPDE_USDT = currentWallet.info.RPDE_USDT,\n            data.value.RPDE_BTC = currentWallet.info.RPDE_BTC,\n            data.value.RPDE_ETH = currentWallet.info.RPDE_ETH,\n            data.value.RPDE_ATOM = currentWallet.info.RPDE_ATOM\n        } else {\n            // Sum from all wallets\n            for (const wallet of store.account.wallets) {\n                // data.value.voting_power = currentWallet.info.voting_power,\n                data.value.RPDE_USDT += wallet.info.RPDE_USDT,\n                data.value.RPDE_BTC += wallet.info.RPDE_BTC,\n                data.value.RPDE_ETH += wallet.info.RPDE_ETH,\n                data.value.RPDE_ATOM += wallet.info.RPDE_ATOM\n            }\n        }\n\n\n        // Hide loader\n        loading.value = false\n    }\n</script>\n\n\n<style scoped>\n    .row\n    {\n        margin-bottom: -20px;\n        margin-left: -20px;\n\n        align-items: stretch;\n        align-content: stretch;\n    }\n\n    .row > *\n    {\n        width: calc(25% - 20px);\n        margin-bottom: 20px;\n        margin-left: 20px;\n    }\n\n\n    .item\n    {\n        padding: 16px 8px;\n\n        text-align: center;\n\n        border-radius: 20px;\n        background: #0d0d0d;\n    }\n\n\n    .label\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 17px;\n\n        width: 100%;\n        margin-bottom: 8px;\n    }\n\n\n    .val\n    {\n        font-size: 24px;\n        font-weight: 700;\n        line-height: 100%;\n\n        white-space: nowrap;\n    }\n\n\n    .val .currency\n    {\n        color: #555;\n        font-size: 16px;\n        font-weight: 400;\n        line-height: 100%;\n\n        margin-top: 4px;\n    }\n\n\n    .loader_wrap\n    {\n        position: relative;\n\n        height: auto;\n        margin: 8px auto -4px;\n\n        background: none;\n    }\n\n    .loader\n    {\n        width: 23px;\n        height: 23px;\n    }\n\n</style>","import script from \"./Stats.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Stats.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Stats.vue?vue&type=style&index=0&id=5a3a859a&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5a3a859a\"]])\n\nexport default __exports__","<template>\n    <section class=\"modal\" id=\"validator_modal\">\n        <div class=\"modal_content\" @click.self=\"emitter.emit('closeValidatorModal')\">\n            <div class=\"data\">\n                <button class=\"close_btn\" @click.prevent=\"emitter.emit('closeValidatorModal')\">\n                    <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_close\"></use></svg>\n                </button>\n\n                <div class=\"modal_title\">\n                    {{ $t('message.validator_modal_title') }}\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"logo\">\n                        <div class=\"power\">\n                            {{ store.validatorInfo.result[0][getValidatorInfo('validator_rank')] }}\n                            <svg><use xlink:href=\"/sprite.svg#bg_rank\"></use></svg>\n                        </div>\n\n                        <img :src=\"store.validatorInfo.result[0][getValidatorInfo('logo_path')]\" alt=\"\" @error=\"imageLoadError\">\n                        <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_user\"></use></svg>\n                    </div>\n\n                    <div class=\"info\">\n                        <div class=\"name\">{{ props.validator.moniker }}</div>\n\n                        <div class=\"operator_address\">\n                            <div class=\"label\">\n                                {{ $t('message.validator_modal_operator_address_label') }}\n                            </div>\n\n                            <div class=\"val\">{{ props.validator.operator_address }}</div>\n                        </div>\n                    </div>\n\n                    <div class=\"active_set\" :class=\"{ green: store.validatorInfo.result[0][getValidatorInfo('is_active_set')] }\">\n                        <template v-if=\"store.validatorInfo.result[0][getValidatorInfo('is_active_set')]\">\n                        <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_check\"></use></svg>\n                        <span>{{ $t('message.validator_modal_active_set') }}</span>\n                        </template>\n\n                        <template v-else>\n                        <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_notice\"></use></svg>\n                        <span>{{ $t('message.validator_modal_inactive_set') }}</span>\n                        </template>\n                    </div>\n                </div>\n\n                <div class=\"btns\">\n                    <a :href=\"`https://${props.validator.website.replace('https://', '')}`\" target=\"_blank\" rel=\"noopener nofollow\" class=\"link\">\n                        <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_website\"></use></svg>\n                        <span>{{ $t('message.validator_modal_website_btn') }}</span>\n                    </a>\n\n                    <a :href=\"`https://www.mintscan.io/${store.networks[store.currentNetwork].mintscanAlias}/validators/${props.validator.operator_address}`\" target=\"_blank\" rel=\"noopener nofollow\" class=\"link\" v-if=\"store.networks[store.currentNetwork].mintscanAlias\">\n                        <img src=\"/mintscan_logo.png\" alt=\"\">\n                        <span>{{ $t('message.validator_modal_mintscan_btn') }}</span>\n                    </a>\n\n                    <a :href=\"`https://score.bronbro.io/network?network=${store.currentNetwork}`\" target=\"_blank\" rel=\"noopener nofollow\" class=\"link\">\n                        <img src=\"/broscore_logo.svg\" alt=\"\">\n                        <span>{{ $t('message.validator_modal_broscore_btn') }}</span>\n                    </a>\n                </div>\n\n                <div class=\"details\">\n                    <div class=\"label\">\n                        {{ $t('message.validator_modal_details_label') }}\n                    </div>\n\n                    <div class=\"val\">{{ props.validator.details }}</div>\n                </div>\n\n                <div class=\"features\">\n                    <div class=\"row\">\n                        <div class=\"feature\" @mouseover=\"emitter.emit('setNotification', $t('message.validator_modal_col_greed_notice'))\">\n                            <div class=\"label\">{{ $t('message.validator_modal_commission_label') }}</div>\n\n                            <div class=\"val\">\n                                {{ $filters.toFixed(store.validatorInfo.result[0][getValidatorInfo('greed')] * 100, 2) }}%\n                            </div>\n                        </div>\n\n                        <div class=\"feature\" @mouseover=\"emitter.emit('setNotification', $t('message.validator_modal_col_self_bonded_ownership_notice'))\">\n                            <div class=\"label\" v-html=\"$t('message.validator_modal_ownership_label')\"></div>\n\n                            <div class=\"val\">\n                                <span>\n                                    {{ new Number($filters.toFixed(store.validatorInfo.result[0][getValidatorInfo('ownership')] * store.validatorInfo.result[0][getValidatorInfo('staked')] / store.networks[store.currentNetwork].exponent, 0)).toLocaleString() }}\n                                </span>\n                                /\n                                <span>\n                                    {{ $filters.toFixed(store.validatorInfo.result[0][getValidatorInfo('ownership')] * 100, 2) }}%\n                                </span>\n                            </div>\n                        </div>\n\n                        <div class=\"feature\" @mouseover=\"emitter.emit('setNotification', $t('message.validator_modal_col_total_delegated_notice'))\">\n                            <div class=\"label\">{{ $t('message.validator_modal_total_delegated_label') }}</div>\n\n                            <div class=\"val\">\n                                {{ new Number($filters.toFixed(store.validatorInfo.result[0][getValidatorInfo('staked')] / store.networks[store.currentNetwork].exponent, 0)).toLocaleString() }}\n                            </div>\n                        </div>\n\n                        <div class=\"feature\" @mouseover=\"emitter.emit('setNotification', $t('message.validator_modal_col_voted_notice', { voted: $filters.toFixed(store.validatorInfo.result[0][getValidatorInfo('voted')], 2) }))\">\n                            <div class=\"label\">{{ $t('message.validator_modal_voted_label') }}</div>\n\n                            <div class=\"val\">\n                                {{ $filters.toFixed(store.validatorInfo.result[0][getValidatorInfo('voted')], 0) }}\n                            </div>\n                        </div>\n\n                        <div class=\"feature\" @mouseover=\"emitter.emit('setNotification', $t('message.validator_modal_col_blurring_notice'))\">\n                            <div class=\"label\">{{ $t('message.validator_modal_blurring_label') }}</div>\n\n                            <div class=\"val\">\n                                {{ $filters.toFixed(store.validatorInfo.result[0][getValidatorInfo('blurring')] * 100, 2) }}%\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- <button class=\"manage_btn\" @click.prevent=\"emitter.emit('openManageModal', {\n                    network: store.currentNetwork,\n                    validator: {\n                        logo: store.validatorInfo.result[0][getValidatorInfo('logo_path')],\n                        moniker: props.validator.moniker,\n                        commission: props.validator.commission\n                    }\n                })\">\n                    {{ $t('message.manage_btn') }}\n                </button> -->\n            </div>\n        </div>\n\n        <div class=\"overlay\"></div>\n    </section>\n</template>\n\n\n<script setup>\n    import { inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter'),\n        props = defineProps(['validator'])\n\n    await fetch(`https://rpc.bronbro.io/bro_score/?network=${store.currentNetwork}&validator=${props.validator.operator_address}`)\n        .then(res => res.json())\n        .then(response => {\n            store.validatorInfo = response\n\n            // Add blurring\n            store.validatorInfo.schema.push('blurring')\n\n            store.validatorInfo.result.forEach(el => {\n                el.push(el[store.validatorInfo.schema.indexOf('staked')] / el[store.validatorInfo.schema.indexOf('delegator_shares')])\n            })\n        })\n\n\n    // Replacement of the logo if it is not present\n    function imageLoadError(event) {\n        event.target.classList.add('hide')\n\n        event.target.closest('.logo').style.backgroundColor = store.colors[Math.floor((Math.random()*store.colors.length))]\n    }\n\n\n    // Get validator data from shema\n    function getValidatorInfo(columnName) {\n        return store.validatorInfo.schema.indexOf(columnName)\n    }\n</script>\n\n\n<style scoped>\n    .modal_content .data\n    {\n        width: 960px;\n        padding: 24px;\n\n        background: #0d0d0d;\n    }\n\n\n    .modal_content .modal_title\n    {\n        margin-bottom: 40px;\n    }\n\n\n    .data > .row\n    {\n        flex-wrap: nowrap;\n    }\n\n\n    .logo\n    {\n        position: relative;\n\n        display: flex;\n\n        width: 100px;\n        min-width: 100px;\n        height: 100px;\n        padding: 17px;\n\n        border-radius: 50%;\n        background: #fff;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .logo img\n    {\n        display: block;\n\n        max-width: 100%;\n        max-height: 100%;\n\n        border-radius: 50%;\n    }\n\n    .logo img.hide\n    {\n        display: none;\n    }\n\n\n    .logo .icon\n    {\n        display: none;\n\n        width: 48px;\n        height: 48px;\n    }\n\n    .logo img.hide + .icon\n    {\n        display: block;\n    }\n\n\n\n    .power\n    {\n        color: #fff;\n        font-size: 12px;\n        font-weight: 500;\n        line-height: 34px;\n\n        position: absolute;\n        z-index: 3;\n        top: -10px;\n        right: 0;\n\n        display: block;\n\n        width: 34px;\n        height: 34px;\n\n        text-align: center;\n    }\n\n    .power svg\n    {\n        color: #950fff;\n\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n    }\n\n\n\n    .info\n    {\n        width: 100%;\n        margin: 0 0 0 20px;\n    }\n\n\n    .info .name\n    {\n        font-size: 30px;\n        font-weight: 500;\n        line-height: 100%;\n\n        display: flex;\n\n        min-height: 44px;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .info .name > div\n    {\n        max-width: calc(100% - 124px);\n    }\n\n\n    .info .operator_address\n    {\n        margin-top: 14px;\n    }\n\n\n    .info .operator_address .label\n    {\n        font-size: 14px;\n        line-height: 100%;\n\n        margin-bottom: 10px;\n\n        opacity: .4;\n    }\n\n    .info .operator_address .val\n    {\n        font-size: 14px;\n        line-height: 100%;\n\n        overflow: hidden;\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .active_set\n    {\n        line-height: 100%;\n\n        display: flex;\n\n        padding: 10px 14px;\n\n        white-space: nowrap;\n\n        border-radius: 24px;\n        background: #353535;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: nowrap;\n    }\n\n    .active_set.green\n    {\n        padding: 9px 14px 11px;\n\n        opacity: 1;\n        background: #1bc562;\n    }\n\n    .active_set .icon\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n        margin-right: 4px;\n    }\n\n\n\n    .btns\n    {\n        display: flex;\n\n        margin-top: 30px;\n        margin-bottom: -8px;\n        margin-left: -8px;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .btns > *\n    {\n        margin-bottom: 8px;\n        margin-left: 8px;\n    }\n\n\n    .btns .link\n    {\n        color: currentColor;\n        font-size: 14px;\n        line-height: 100%;\n\n        display: flex;\n\n        min-height: 32px;\n        padding: 4px 6px;\n\n        transition: background .2s linear;\n        text-decoration: none;\n\n        border-radius: 10px;\n        background: #191919;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .btns .link .icon\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n        margin-right: 8px;\n    }\n\n    .btns .link img\n    {\n        display: block;\n\n        width: 24px;\n        height: 20px;\n        margin-right: 8px;\n    }\n\n\n    .btns .link:hover\n    {\n        background: #950fff;\n    }\n\n\n\n    .details\n    {\n        margin-top: 30px;\n    }\n\n\n    .details .label\n    {\n        font-size: 14px;\n        line-height: 100%;\n\n        margin-bottom: 8px;\n\n        opacity: .4;\n    }\n\n\n    .details .val\n    {\n        font-size: 14px;\n        line-height: 120%;\n    }\n\n\n\n    .features\n    {\n        margin-top: 30px;\n    }\n\n\n    .features .row\n    {\n        margin-bottom: -24px;\n        margin-left: -24px;\n\n        align-items: stretch;\n        align-content: stretch;\n    }\n\n    .features .row > *\n    {\n        width: calc(20% - 24px);\n        margin-bottom: 24px;\n        margin-left: 24px;\n    }\n\n\n    .features .feature\n    {\n        padding: 10px;\n\n        border-radius: 12px;\n        background: #141414;\n    }\n\n\n    .features .label\n    {\n        line-height: 120%;\n\n        min-height: 52px;\n        margin-bottom: 10px;\n\n        opacity: .4;\n    }\n\n\n    .features .val\n    {\n        font-weight: 500;\n        line-height: 120%;\n\n        white-space: nowrap;\n    }\n\n\n\n    .manage_btn\n    {\n        color: currentColor;\n        font-size: 14px;\n        line-height: 17px;\n\n        display: block;\n\n        width: 163px;\n        max-width: 100%;\n        height: 42px;\n        margin-top: 20px;\n        margin-left: auto;\n\n        transition: background .2s linear;\n        text-align: center;\n        text-decoration: none;\n\n        border-radius: 10px;\n        background: #950fff;\n    }\n\n    .manage_btn:hover\n    {\n        background: #7700e1;\n    }\n\n</style>\n","import script from \"./ValidatorModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidatorModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ValidatorModal.vue?vue&type=style&index=0&id=8b9a669e&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-8b9a669e\"]])\n\nexport default __exports__","<template>\n    <section class=\"validators\">\n        <div class=\"title\">\n            {{ $t('message.account_validators_title') }}\n        </div>\n\n        <div class=\"titles\">\n            <div class=\"col_account_name\">\n                {{ $t('message.account_validators_col_account_name') }}\n            </div>\n\n            <div class=\"col_network\">\n                {{ $t('message.account_validators_col_network') }}\n            </div>\n\n            <div class=\"col_validator\">\n                {{ $t('message.account_validators_col_validator') }}\n            </div>\n\n            <div class=\"col_percent\">\n                {{ $t('message.account_validators_col_account_percent') }}\n            </div>\n\n            <div class=\"col_percent\">\n                {{ $t('message.account_validators_col_passport_percent') }}\n            </div>\n        </div>\n\n        <div class=\"loader_wrap\" v-if=\"loading\">\n            <div class=\"loader\"><span></span></div>\n        </div>\n\n        <div class=\"items\" v-else>\n            <!-- <pre>{{ wallets }}</pre> -->\n\n            <template v-for=\"(wallet, index) in wallets\" :key=\"index\" v-if=\"wallets.length\">\n            <div class=\"item\" :class=\"{ 'hide': index >= 3 && !showAll }\" :style=\"{ order: wallet.totalTokens * -1 }\">\n                <div class=\"col_account_name\">\n                    <span v-if=\"wallet.nickname\">{{ wallet.nickname }}</span>\n                    <span v-else>{{ wallet.address.slice(0, 8) + '...' + wallet.address.slice(-5) }}</span>\n                </div>\n\n                <div class=\"col_network\">\n                    <div class=\"logo\">\n                        <img :src=\"`/${store.currentNetwork}_logo.png`\" alt=\"\">\n                    </div>\n\n                    <div>{{ store.networks[store.currentNetwork].name }}</div>\n                </div>\n\n                <div class=\"col_validator\" @click.prevent=\"toggleActiveClass\" v-if=\"wallet.validators.length\">\n                    <div class=\"logo\" v-for=\"(validator, validators_index) in wallet.validators\" :key=\"validators_index\">\n                        <img :src=\"validator.mintscan_avatar\" :alt=\"validator.moniker\" @error=\"imageLoadError\">\n                        <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_user\"></use></svg>\n                    </div>\n\n                    <svg class=\"arr\"><use xlink:href=\"/sprite.svg#ic_arr_down\"></use></svg>\n                </div>\n\n                <div class=\"col_validator empty\" v-else>\n                    {{ $t('message.account_validators_empty_text') }}\n                </div>\n\n                <div class=\"col_percent\"></div>\n\n                <div class=\"col_percent\">\n                    {{ $filters.toFixed(wallet.totalTokens / totalPassportTokens * 100, 2) }} %\n                </div>\n\n                <div class=\"list\">\n                    <div class=\"item sub_item\" v-for=\"(validator, validators_index) in wallet.validators\" :key=\"validators_index\" :style=\"{ order: validator.coin.amount * -1 }\">\n                        <div class=\"col_account_name\"></div>\n                        <div class=\"col_network\"></div>\n\n                        <div class=\"col_validator\">\n                            <div class=\"logo\">\n                                <img :src=\"validator.mintscan_avatar\" :alt=\"validator.moniker\" @error=\"imageLoadError\">\n                                <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_user\"></use></svg>\n                            </div>\n\n                            <div class=\"name\" @click.prevent=\"openValidatorModal(validator)\">\n                                <span>{{ validator.moniker }}</span>\n\n                                <div class=\"tooltip\">\n                                    {{ validator.moniker }}\n                                </div>\n                            </div>\n\n                            <div class=\"amount\">\n                                <span>{{ $filters.toFixed(validator.coin.amount / store.networks[store.currentNetwork].exponent, 3) }}</span> {{ store.networks[store.currentNetwork].token_name }}\n                            </div>\n                        </div>\n\n                        <div class=\"col_percent\">\n                            {{ $filters.toFixed(validator.coin.amount / wallet.totalTokens * 100, 2) }} %\n                        </div>\n\n                        <div class=\"col_percent\">\n                            {{ $filters.toFixed(validator.coin.amount / totalPassportTokens * 100, 2) }} %\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </template>\n\n            <div class=\"empty_text\" v-else>\n                {{ $t('message.account_validators_empty_text') }}\n            </div>\n        </div>\n\n        <button class=\"spoler_btn\" :class=\"{ 'active': showAll }\" @click.prevent=\"showAll = !showAll\" v-if=\"wallets.length > 3\">\n            <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_arr_down\"></use></svg>\n        </button>\n\n\n        <!-- Validator modal -->\n        <Suspense>\n        <ValidatorModal v-if=\"showValidatorModal\" :validator=\"validatorInfo\" />\n        </Suspense>\n    </section>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, reactive, ref, inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { generateAddress } from '@/utils'\n\n    // Components\n    import ValidatorModal from '@/components/modal/ValidatorModal.vue'\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter'),\n        loading = ref(true),\n        showValidatorModal = ref(false),\n        validatorInfo = ref({})\n\n    var wallets = reactive([]),\n        totalPassportTokens = 0,\n        showAll = ref(false)\n\n\n    onBeforeMount(async () => {\n        // Clear data\n        wallets = reactive([])\n\n        // Get data\n        store.account.currentWallet == 'all'\n            ? await getAllData()\n            : await getAddressData()\n    })\n\n\n    // Replacement of the logo if it is not present\n    function imageLoadError(event) {\n        event.target.classList.add('hide')\n    }\n\n\n    // Get address data\n    async function getAddressData() {\n        // Set loader\n        loading.value = true\n\n        // Get validators for current wallet\n        try {\n            let currentAddress = generateAddress(store.networks[store.currentNetwork].address_prefix, store.account.currentWallet)\n\n            await fetch(`https://rpc.bronbro.io/account/validators/${currentAddress}`)\n                .then(res => res.json())\n                .then(response => {\n                    if(response.validators.length) {\n                        let totalTokens = 0,\n                            tempArray = response.validators,\n                            nickname = store.account.wallets.find(wallet => wallet.address == generateAddress('bostrom', currentAddress)).nickname\n\n                        // Calc total totalTokens\n                        response.validators.forEach(validator => totalTokens += validator.coin.amount)\n\n                        // Calc total passport tokens\n                        response.validators.forEach(validator => totalPassportTokens += validator.coin.amount)\n\n                        // Sort and set\n                        wallets.push({\n                            nickname,\n                            address: currentAddress,\n                            totalTokens,\n                            validators: response.validators.sort((a, b) => {\n                                if (a.coin.amount > b.coin.amount) { return 1 }\n                                if (a.coin.amount < b.coin.amount) { return -1 }\n                                return 0\n                            }),\n                            validatorsReverse: tempArray.sort((a, b) => {\n                                if (a.coin.amount > b.coin.amount) { return 1 }\n                                if (a.coin.amount < b.coin.amount) { return -1 }\n                                return 0\n                            })\n                        })\n                    }\n\n                    // Hide loader\n                    loading.value = false\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    // Get all data\n    async function getAllData() {\n        // Set loader\n        loading.value = true\n\n        // Get validators other wallets\n        store.account.wallets.forEach(async address => {\n            let generatedAddress = generateAddress(store.networks[store.currentNetwork].address_prefix, address.address)\n\n            if(generatedAddress != store.account.moonPassportOwnerAddress && !wallets[generatedAddress]) {\n                try {\n                    await fetch(`https://rpc.bronbro.io/account/validators/${generatedAddress}`)\n                        .then(res => res.json())\n                        .then(response => {\n                            let totalTokens = 0,\n                                tempArray = response.validators,\n                                nickname = store.account.wallets.find(wallet => wallet.address == generateAddress('bostrom', generatedAddress)).nickname\n\n                            // Calc total total tokens\n                            response.validators.forEach(validator => totalTokens += validator.coin.amount)\n\n                            // Calc total passport tokens\n                            response.validators.forEach(validator => totalPassportTokens += validator.coin.amount)\n\n                            // Sort\n                            wallets.push({\n                                nickname,\n                                address: generatedAddress,\n                                totalTokens,\n                                validators: response.validators.sort((a, b) => {\n                                    if (a.coin.amount > b.coin.amount) { return -1 }\n                                    if (a.coin.amount < b.coin.amount) { return 1 }\n                                    return 0\n                                }),\n                                validatorsReverse: tempArray.sort((a, b) => {\n                                    if (a.coin.amount > b.coin.amount) { return 1 }\n                                    if (a.coin.amount < b.coin.amount) { return -1 }\n                                    return 0\n                                })\n                            })\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n            }\n        })\n\n        // Hide loader\n        loading.value = false\n    }\n\n\n    // Toggle active class\n    function toggleActiveClass(e) {\n        e.target.closest('.item').classList.toggle('active')\n    }\n\n\n    // Open validator modal\n    function openValidatorModal(validator) {\n        validatorInfo.value = validator\n        showValidatorModal.value = true\n\n        document.body.classList.add('lock')\n    }\n\n\n    // Event \"close validator modal\"\n    emitter.on('closeValidatorModal', () => {\n        showValidatorModal.value = false\n\n        document.body.classList.remove('lock')\n    })\n</script>\n\n\n<style scoped>\n    .validators\n    {\n        position: relative;\n\n        padding: 14px 14px 24px;\n\n        border-radius: 20px;\n        background: #0d0d0d;\n    }\n\n\n    .validators .title\n    {\n        font-size: 30px;\n        font-weight: 600;\n        line-height: 36px;\n\n        margin-bottom: 16px;\n    }\n\n\n    .validators .col_account_name,\n    .validators .col_network\n    {\n        width: 140px;\n        min-width: 140px;\n    }\n\n    .validators .col_validator\n    {\n        width: calc(100% - 464px);\n    }\n\n    .validators .col_percent\n    {\n        width: 92px;\n        min-width: 92px;\n\n        text-align: right;\n    }\n\n\n    .validators .titles\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 17px;\n\n        display: flex;\n\n        margin-bottom: 8px;\n        padding-bottom: 7px;\n\n        border-bottom: 1px solid rgba(255, 255, 255, .05);\n\n        justify-content: space-between;\n        align-items: flex-start;\n        align-content: flex-start;\n        flex-wrap: wrap;\n    }\n\n    .validators .titles > *\n    {\n        padding: 8px;\n    }\n\n\n    .validators .loader_wrap\n    {\n        position: relative;\n\n        height: auto;\n        padding: 20px 0 0;\n\n        background: none;\n    }\n\n\n    .validators .empty_text\n    {\n        color: #555;\n        line-height: 110%;\n\n        margin-top: 20px;\n\n        text-align: center;\n    }\n\n\n    .validators .items\n    {\n        display: flex;\n        flex-direction: column;\n\n        margin: -2px 0 -3px;\n    }\n\n\n    .validators .items .hide\n    {\n        display: none;\n    }\n\n\n    .validators .item\n    {\n        font-size: 14px;\n        font-weight: 500;\n        line-height: 17px;\n\n        position: relative;\n\n        display: flex;\n\n        width: 100%;\n        margin: 2px 0 3px;\n\n        transition: background .2s linear;\n\n        border-radius: 8px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .validators .item:before\n    {\n        position: absolute;\n        bottom: -3px;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 1px;\n\n        content: '';\n        pointer-events: none;\n\n        background: rgba(255, 255, 255, .05);\n    }\n\n    .validators .item > *\n    {\n        display: flex;\n\n        padding: 8px;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: nowrap;\n    }\n\n\n    .validators .item .list\n    {\n        display: flex;\n        flex-direction: column;\n\n        width: 100%;\n        margin-bottom: -3px;\n        padding: 0;\n\n        transition: border-color .2s linear;\n\n        border-top: 1px solid transparent;\n\n        flex-wrap: wrap;\n    }\n\n    .validators .item.active .list\n    {\n        border-color: rgba(255, 255, 255, .05);\n    }\n\n\n    .validators .sub_item\n    {\n        display: none;\n\n        width: 100%;\n        padding: 0;\n\n        border-radius: 0;\n    }\n\n    .validators .sub_item:last-child\n    {\n        border-radius: 0 0 8px 8px;\n    }\n\n\n    .validators .item > *.col_account_name\n    {\n        overflow: hidden;\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .validators .item > *.col_validator\n    {\n        flex-direction: row-reverse;\n\n        cursor: pointer;\n\n        justify-content: flex-end;\n    }\n\n    .validators .item > *.col_validator.empty\n    {\n        color: #555;\n        font-size: 13px;\n        line-height: 17px;\n\n        cursor: default;\n    }\n\n    .validators .sub_item > *.col_validator\n    {\n        flex-direction: row;\n\n        justify-content: flex-start;\n    }\n\n    .validators .sub_item > *.col_validator > *\n    {\n        cursor: default;\n\n        order: 0 !important;\n    }\n\n\n    .validators .item > *.col_percent\n    {\n        justify-content: flex-end;\n    }\n\n\n    .validators .item .logo\n    {\n        position: relative;\n        z-index: 1;\n\n        display: flex;\n        overflow: hidden;\n\n        width: 24px;\n        min-width: 24px;\n        height: 24px;\n\n        border: 1px solid #0d0d0d;\n        border-radius: 50%;\n        background: #282828;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n        order: 2;\n    }\n\n    .validators .item .logo + .logo\n    {\n        z-index: 2;\n\n        margin-right: -6px;\n    }\n\n    .validators .item .col_network .logo + *\n    {\n        width: calc(100% - 32px);\n        margin-left: auto;\n\n        transition: opacity .2s linear;\n        pointer-events: none;\n\n        opacity: 0;\n\n        order: 5;\n    }\n\n    .validators .item .logo img\n    {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: inherit;\n\n        object-fit: cover;\n    }\n\n    .validators .item .logo img.hide\n    {\n        display: none;\n    }\n\n    .validators .item .logo .icon\n    {\n        display: block;\n\n        width: 18px;\n        height: 18px;\n    }\n\n\n    .validators .item .arr\n    {\n        color: #555;\n\n        display: block;\n\n        width: 16px;\n        height: 16px;\n        margin-left: auto;\n\n        transition: transform .2s linear;\n    }\n\n\n    .validators .item .name\n    {\n        position: relative;\n\n        width: calc(100% - 127px);\n        margin-left: auto;\n\n        cursor: pointer;\n        transition: color .2s linear;\n    }\n\n    .validators .item .name span\n    {\n        display: block;\n        overflow: hidden;\n\n        width: 100%;\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n    .validators .item .name:hover\n    {\n        color: #950fff;\n    }\n\n\n    .validators .item .tooltip\n    {\n        color: #fff;\n        font-size: 12px;\n        line-height: 100%;\n\n        position: absolute;\n        z-index: 9;\n        bottom: 100%;\n        left: -8px;\n\n        display: none;\n\n        margin-bottom: 8px;\n        padding: 8px;\n\n        white-space: nowrap;\n\n        border-radius: 8px;\n        background: #282828;\n        box-shadow: 0 6px 12px rgba(0, 0, 0, .2);\n    }\n\n    .validators .item .tooltip:before\n    {\n        position: absolute;\n        top: 100%;\n        right: 0;\n        left: 0;\n\n        display: block;\n\n        width: 29px;\n        height: 7px;\n        margin: 0 auto;\n\n        content: '';\n\n        background: url(@/assets/images/tooltip_tail.svg) 50% 0/100% 100% no-repeat;\n    }\n\n    .validators .item .name:hover .tooltip\n    {\n        display: block;\n    }\n\n\n    .validators .item .amount\n    {\n        color: #555;\n        font-size: 10px;\n        line-height: 12px;\n\n        width: 87px;\n        margin-left: auto;\n\n        text-align: right;\n        white-space: nowrap;\n    }\n\n    .validators .item .amount span\n    {\n        color: #fff;\n    }\n\n\n    .validators .item:hover\n    {\n        background: #191919;\n    }\n\n\n    .validators .item.active .col_network .logo + *\n    {\n        opacity: 1;\n    }\n\n    .validators .item.active .arr\n    {\n        transform: rotate(180deg);\n    }\n\n    .validators .item.active .sub_item\n    {\n        display: flex;\n    }\n\n\n    .validators .spoler_btn\n    {\n        position: absolute;\n        right: 0;\n        bottom: -18px;\n        left: 0;\n\n        display: flex;\n\n        width: 36px;\n        height: 36px;\n        margin: auto;\n\n        transition: background .2s linear;\n\n        border-radius: 50%;\n        background: #141414;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .validators .spoler_btn .icon\n    {\n        display: block;\n\n        width: 20px;\n        height: 20px;\n\n        transition: transform .2s linear;\n    }\n\n\n    .validators .spoler_btn:hover\n    {\n        background: #950fff;\n    }\n\n    .validators .spoler_btn.active .icon\n    {\n        transform: rotate(180deg);\n    }\n\n</style>","import script from \"./Validators.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Validators.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Validators.vue?vue&type=style&index=0&id=43138aa4&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-43138aa4\"]])\n\nexport default __exports__","<template>\n    <section class=\"proposals\">\n        <div class=\"head\">\n            <div class=\"title\">{{ $t('message.account_proposals_title') }}</div>\n\n            <div class=\"all_link\">\n                <router-link :to=\"`/proposals/${store.currentNetwork}`\" class=\"link\">\n                    {{ $t('message.see_more_btn') }} &rarr;\n                </router-link>\n            </div>\n        </div>\n\n        <div class=\"titles\">\n            <div class=\"col_network\">\n                {{ $t('message.account_proposals_col_network') }}\n            </div>\n\n            <div class=\"col_name\">\n                {{ $t('message.account_proposals_col_name') }}\n            </div>\n\n            <div class=\"col_number\"></div>\n\n            <div class=\"col_type\">\n                {{ $t('message.account_proposals_col_type') }}\n            </div>\n\n            <div class=\"col_status\">\n                {{ $t('message.account_proposals_col_status') }}\n            </div>\n        </div>\n\n        <div class=\"loader_wrap\" v-if=\"!loading\">\n            <div class=\"loader\"><span></span></div>\n        </div>\n\n        <div class=\"items\" v-else>\n            <!-- <pre>{{ data.proposals }}</pre> -->\n\n            <template v-for=\"(proposal, index) in data.proposals\" :key=\"index\">\n            <!-- <router-link :to=\"`/proposal/${proposal.id}`\" class=\"item\" :class=\"{'hide': index >= 5 && !data.showAll}\" v-if=\"proposal.id != '796' || proposal.status != 'PROPOSAL_STATUS_VOTING_PERIOD'\"> -->\n            <router-link :to=\"`/${store.currentNetwork}/proposal/${proposal.id}`\" class=\"item\" :class=\"{ 'hide': index >= 5 && !data.showAll }\">\n                <div class=\"col_network\">\n                    <template v-if=\"index < 1\">\n                    <div class=\"logo\">\n                        <img :src=\"`/${store.currentNetwork}_logo.png`\" alt=\"\">\n                    </div>\n\n                    <div>{{ store.networks[store.currentNetwork].name }}</div>\n                    </template>\n                </div>\n\n                <div class=\"col_name\">\n                    <div class=\"name\">{{ proposal.title }}</div>\n                </div>\n\n                <div class=\"col_number\">№{{ proposal.id }}</div>\n\n                <div class=\"col_type\">\n                    <svg class=\"icon\"><use :xlink:href=\"`/sprite.svg#ic_proposal_${proposal.proposal_type}`\"></use></svg>\n                </div>\n\n                <div class=\"col_status\">\n                    <span v-if=\"proposal.status == 'PROPOSAL_STATUS_DEPOSIT_PERIOD'\">{{ $t('message.account_proposals_status_deposite') }}</span>\n                    <span v-if=\"proposal.status == 'PROPOSAL_STATUS_VOTING_PERIOD'\" class=\"blue\">{{ $t('message.account_proposals_status_voting') }}</span>\n                    <span v-if=\"proposal.status == 'PROPOSAL_STATUS_PASSED'\" class=\"green\">{{ $t('message.account_proposals_status_passed') }}</span>\n                    <span v-if=\"proposal.status == 'PROPOSAL_STATUS_REJECTED'\" class=\"red\">{{ $t('message.account_proposals_status_rejected') }}</span>\n                </div>\n            </router-link>\n            </template>\n        </div>\n\n        <button class=\"spoler_btn\" :class=\"{ 'active': data.showAll }\" @click.prevent=\"data.showAll = !data.showAll\" v-if=\"data.proposals.length > 5\">\n            <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_arr_down\"></use></svg>\n        </button>\n    </section>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, reactive, ref } from 'vue'\n    import { useGlobalStore } from '@/stores'\n\n    const store = useGlobalStore(),\n        loading = ref(false),\n        data = reactive({\n            proposals: [],\n            showAll: false\n        })\n\n\n    onBeforeMount(() => {\n        // Get proposals\n        try {\n            fetch('https://rpc.bronbro.io/gov/proposals')\n                .then(res => res.json())\n                .then(response => {\n                    data.proposals = response.proposals\n\n                    // Hide loader\n                    loading.value = true\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    })\n</script>\n\n\n<style scoped>\n    .proposals\n    {\n        position: relative;\n\n        padding: 14px 14px 24px;\n\n        border-radius: 20px;\n        background: #0d0d0d;\n    }\n\n\n    .proposals .col_network\n    {\n        width: 148px;\n        min-width: 148px;\n    }\n\n    .proposals .col_name\n    {\n        width: 100%;\n    }\n\n    .proposals .col_number\n    {\n        width: 56px;\n        min-width: 56px;\n    }\n\n    .proposals .col_type\n    {\n        width: 52px;\n        min-width: 52px;\n    }\n\n    .proposals .col_status\n    {\n        width: 124px;\n        min-width: 124px;\n    }\n\n\n    .proposals .head\n    {\n        display: flex;\n\n        margin-bottom: 16px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .proposals .title\n    {\n        font-size: 30px;\n        font-weight: 600;\n        line-height: 36px;\n    }\n\n\n    .proposals .all_link\n    {\n        color: #950fff;\n        font-size: 14px;\n        line-height: 100%;\n\n        margin-left: auto;\n    }\n\n\n    .proposals .all_link .link\n    {\n        color: currentColor;\n\n        white-space: nowrap;\n        text-decoration: none;\n    }\n\n\n    .proposals .titles\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 17px;\n\n        display: flex;\n\n        margin-bottom: 8px;\n        padding-bottom: 7px;\n\n        border-bottom: 1px solid rgba(255, 255, 255, .05);\n\n        justify-content: space-between;\n        align-items: flex-start;\n        align-content: flex-start;\n        flex-wrap: nowrap;\n    }\n\n    .proposals .titles > *\n    {\n        padding: 8px 10px;\n    }\n\n\n    .proposals .loader_wrap\n    {\n        position: relative;\n\n        height: auto;\n        padding: 20px 0 0;\n\n        background: none;\n    }\n\n\n    .proposals .items > * + *\n    {\n        margin-top: 5px;\n    }\n\n    .proposals .items > * + *:before\n    {\n        position: absolute;\n        top: -3px;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 1px;\n\n        content: '';\n        pointer-events: none;\n\n        background: rgba(255, 255, 255, .05);\n    }\n\n\n    .proposals .item\n    {\n        color: currentColor;\n        font-size: 14px;\n        font-weight: 500;\n        line-height: 20px;\n\n        position: relative;\n\n        display: flex;\n\n        transition: background .2s linear;\n        text-decoration: none;\n\n        border-radius: 8px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: nowrap;\n    }\n\n    .proposals .item.hide\n    {\n        display: none;\n    }\n\n    .proposals .item > *\n    {\n        display: flex;\n\n        padding: 8px 10px;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: nowrap;\n    }\n\n\n    .proposals .item .logo\n    {\n        position: relative;\n\n        overflow: hidden;\n\n        width: 24px;\n        height: 24px;\n        margin-right: 8px;\n\n        border-radius: 50%;\n    }\n\n    .proposals .item .logo img\n    {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: inherit;\n\n        object-fit: cover;\n    }\n\n    .proposals .item .logo + *\n    {\n        width: calc(100% - 32px);\n    }\n\n\n    .proposals .item .name\n    {\n        overflow: hidden;\n\n        width: 100%;\n\n        text-overflow: ellipsis;\n    }\n\n\n    .proposals .item .col_number\n    {\n        color: #484747;\n        font-size: 12px;\n        font-weight: 500;\n        line-height: 15px;\n\n        transition: color .2s linear;\n        white-space: nowrap;\n    }\n\n\n    .proposals .item .col_type .icon\n    {\n        color: #950fff;\n\n        display: block;\n\n        width: 20px;\n        height: 20px;\n\n        transition: color .2s linear;\n    }\n\n\n    .proposals .item .col_status > *\n    {\n        color: #950fff;\n\n        transition: color .2s linear;\n    }\n\n    .proposals .item .col_status .blue\n    {\n        color: #0343e8;\n    }\n\n    .proposals .item .col_status .green\n    {\n        color: #1bc562;\n    }\n\n    .proposals .item .col_status .red\n    {\n        color: #eb5757;\n    }\n\n\n    .proposals .item:hover\n    {\n        background: #191919;\n    }\n\n    .proposals .item:hover .col_number,\n    .proposals .item:hover .col_type .icon,\n    .proposals .item:hover .col_status > *\n    {\n        color: #fff !important;\n    }\n\n\n    .proposals .spoler_btn\n    {\n        position: absolute;\n        right: 0;\n        bottom: -18px;\n        left: 0;\n\n        display: flex;\n\n        width: 36px;\n        height: 36px;\n        margin: auto;\n\n        transition: background .2s linear;\n\n        border-radius: 50%;\n        background: #141414;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .proposals .spoler_btn .icon\n    {\n        display: block;\n\n        width: 20px;\n        height: 20px;\n\n        transition: transform .2s linear;\n    }\n\n    .proposals .spoler_btn:hover\n    {\n        background: #950fff;\n    }\n\n    .proposals .spoler_btn.active .icon\n    {\n        transform: rotate(180deg);\n    }\n\n</style>","import script from \"./Proposals.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Proposals.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Proposals.vue?vue&type=style&index=0&id=953065b2&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-953065b2\"]])\n\nexport default __exports__","<template>\n    <section class=\"modal\" id=\"add_address_modal\">\n        <div class=\"modal_content\">\n            <div class=\"data\">\n                <button class=\"close_btn\" @click.prevent=\"emitter.emit('closeAddAddressModal')\">\n                    <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_close\"></use></svg>\n                </button>\n\n                <template v-if=\"duplicateError || store.account.moonPassport && activeStep == 1\">\n                <div class=\"error\">\n                    <div class=\"title\">\n                        {{ $t('message.add_address_modal_title') }}\n                    </div>\n\n                    <img src=\"@/assets/images/add_address_different_account.svg\" alt=\"\">\n\n                    <div class=\"desc\">\n                        <span v-if=\"!duplicateError && !hasPassportError\">{{ $t('message.add_address_modal_error_desc') }}</span>\n\n                        <span v-if=\"duplicateError && !hasPassportError\">{{ $t('message.add_address_modal_error_desc2') }}</span>\n\n                        <span v-if=\"hasPassportError\">{{ $t('message.add_address_modal_error_desc3') }}</span>\n                    </div>\n\n                    <button class=\"btn\" v-if=\"hasPassportError\" @click.prevent=\"reloadPage()\">\n                        {{ $t('message.use_new_passport_btn') }}\n                    </button>\n\n                    <div class=\"loader_wrap\" v-if=\"loading\">\n                        <div class=\"loader\"><span></span></div>\n                    </div>\n                </div>\n                </template>\n\n\n                <template v-else>\n                <div class=\"steps\">\n                    <div class=\"title\">\n                        {{ $t('message.add_address_modal_title') }}\n                    </div>\n\n                    <div class=\"names\">\n                        <div :class=\"{'active': activeStep == 1, 'completed': activeStep > 1, 'disabled': activeStep == 5}\" @click.prevent=\"activeStep = 1\">\n                            <span>{{ $t('message.add_address_modal_step1_name') }}</span>\n                            <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_check\"></use></svg>\n                        </div>\n\n                        <div :class=\"{'active': activeStep == 2, 'completed': activeStep > 2, 'disabled': activeStep == 5}\">\n                            <span>{{ $t('message.add_address_modal_step2_name') }}</span>\n                            <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_check\"></use></svg>\n                        </div>\n\n                        <div :class=\"{'active': activeStep == 3, 'completed': activeStep > 3, 'disabled': activeStep == 5}\" @click.prevent=\"activeStep = 3\">\n                            <span>{{ $t('message.add_address_modal_step3_name') }}</span>\n                            <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_check\"></use></svg>\n                        </div>\n\n                        <div :class=\"{'active': activeStep == 4, 'completed': activeStep > 4, 'disabled': activeStep == 5}\" @click.prevent=\"activeStep = 4\">\n                            <span>{{ $t('message.add_address_modal_step4_name') }}</span>\n                            <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_check\"></use></svg>\n                        </div>\n                    </div>\n\n\n                    <div class=\"step step1\" v-if=\"activeStep == 1\">\n                        <div class=\"title\">\n                            {{ $t('message.add_address_modal_step1_title') }}\n                        </div>\n\n                        <div class=\"current_account\" :class=\"{'editing': editForm, 'error': !tempAddressName.length}\">\n                            <div class=\"logo\">\n                                <img :src=\"`/${addedNetwork}_logo.png`\" alt=\"\" v-if=\"!duplicate\">\n                                <svg class=\"icon\" v-else><use xlink:href=\"/sprite.svg#ic_duplicate\"></use></svg>\n                            </div>\n\n                            <div>\n                                <div class=\"name\" :class=\"{'error': duplicate}\">\n                                    <template v-if=\"tempAddressName.length\">{{ tempAddressName }}</template>\n                                    <template v-else>{{ store.account.userName }}</template>\n\n                                    <span v-if=\"duplicate\">{{ $t('message.add_address_duplicated_label') }}</span>\n                                </div>\n\n                                <form class=\"edit_name_form\" @submit.prevent=\"hideEditForm\">\n                                    <input type=\"text\" v-model=\"tempAddressName\" class=\"input\" id=\"temp_name\" maxlength=\"16\">\n\n                                    <button type=\"submit\" class=\"submit_btn\">\n                                        <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_check\"></use></svg>\n                                    </button>\n\n                                    <button type=\"button\" class=\"cancel_btn\" @click.prevent=\"cancelEditForm\">\n                                        <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_close\"></use></svg>\n                                    </button>\n                                </form>\n\n                                <div class=\"address\">\n                                    <template v-if=\"addedNetwork == 'evmos'\">\n                                    {{ store.wallets.evmos.slice(0, 13) + '...' + store.wallets.evmos.slice(-6) }}\n                                    </template>\n\n                                    <template v-else-if=\"addedNetwork == 'desmos'\">\n                                    {{ store.wallets.desmos.slice(0, 13) + '...' + store.wallets.desmos.slice(-6) }}\n                                    </template>\n\n                                    <template v-else>\n                                    {{ generateAddress(store.networks[addedNetwork].address_prefix, store.wallets.cosmoshub).slice(0, 13) + '...' + generateAddress(store.networks[addedNetwork].address_prefix, store.wallets.cosmoshub).slice(-6) }}\n                                    </template>\n                                </div>\n\n                                <button class=\"edit_btn\" @click.prevent=\"showEditForm\">\n                                    <svg><use xlink:href=\"/sprite.svg#ic_edit\"></use></svg>\n                                </button>\n                            </div>\n                        </div>\n\n                        <div class=\"networks\">\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'cosmoshub', 'added': checkAddress('cosmos')}\" @click.prevent=\"selectNetwork('cosmoshub')\">\n                                <div class=\"logo\">\n                                    <img src=\"/cosmoshub_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.cosmoshub.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">{{ $t('message.add_address_added_label') }}</div>\n                            </button></div>\n\n                            <!-- <div><button class=\"network\" :class=\"{'active': addedNetwork == 'desmos'}\" @click.prevent=\"selectNetwork('desmos')\">\n                                <div class=\"logo\">\n                                    <img src=\"/desmos_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.desmos.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">{{ $t('message.add_address_added_label') }}</div>\n                            </button></div> -->\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'juno', 'added': checkAddress('juno')}\" @click.prevent=\"selectNetwork('juno')\">\n                                <div class=\"logo\">\n                                    <img src=\"/juno_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.juno.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">{{ $t('message.add_address_added_label') }}</div>\n                            </button></div>\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'stargaze', 'added': checkAddress('stars')}\" @click.prevent=\"selectNetwork('stargaze')\">\n                                <div class=\"logo\">\n                                    <img src=\"/stargaze_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.stargaze.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">{{ $t('message.add_address_added_label') }}</div>\n                            </button></div>\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'gravity', 'added': checkAddress('gravity')}\" @click.prevent=\"selectNetwork('gravity')\">\n                                <div class=\"logo\">\n                                    <img src=\"/gravity_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.gravity.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">{{ $t('message.add_address_added_label') }}</div>\n                            </button></div>\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'stride', 'added': checkAddress('stride')}\" @click.prevent=\"selectNetwork('stride')\">\n                                <div class=\"logo\">\n                                    <img src=\"/stride_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.stride.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">{{ $t('message.add_address_added_label') }}</div>\n                            </button></div>\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'omniflix', 'added': checkAddress('omniflix')}\" @click.prevent=\"selectNetwork('omniflix')\">\n                                <div class=\"logo\">\n                                    <img src=\"/omniflix_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.omniflix.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">{{ $t('message.add_address_added_label') }}</div>\n                            </button></div>\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'osmosis', 'added': checkAddress('osmo')}\" @click.prevent=\"selectNetwork('osmosis')\">\n                                <div class=\"logo\">\n                                    <img src=\"/osmosis_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.osmosis.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">{{ $t('message.add_address_added_label') }}</div>\n                            </button></div>\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'bostrom', 'added': checkAddress('bostrom')}\" @click.prevent=\"selectNetwork('bostrom')\">\n                                <div class=\"logo\">\n                                    <img src=\"/bostrom_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.bostrom.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">{{ $t('message.add_address_added_label') }}</div>\n                            </button></div>\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'crescent', 'added': checkAddress('cre')}\" @click.prevent=\"selectNetwork('crescent')\">\n                                <div class=\"logo\">\n                                    <img src=\"/crescent_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.crescent.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">{{ $t('message.add_address_added_label') }}</div>\n                            </button></div>\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'emoney', 'added': checkAddress('emoney')}\" @click.prevent=\"selectNetwork('emoney')\">\n                                <div class=\"logo\">\n                                    <img src=\"/emoney_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.emoney.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">{{ $t('message.add_address_added_label') }}</div>\n                            </button></div>\n                        </div>\n\n                        <button class=\"btn\" :class=\"{'disabled': duplicate}\" @click.prevent=\"setActiveKeplrAddress\">\n                            {{ $t('message.next_btn') }}\n                        </button>\n                    </div>\n\n\n                    <div class=\"step step2\" v-if=\"activeStep == 2\">\n                        <div class=\"title\">\n                            {{ $t('message.add_address_modal_step2_title') }}\n                        </div>\n\n                        <img src=\"@/assets/images/add_address_step2.svg\" alt=\"\" class=\"img\">\n\n                        <button class=\"btn\" @click.prevent=\"createSignature\">\n                            {{ $t('message.sign_btn') }}\n                        </button>\n                    </div>\n\n\n                    <div class=\"step step3\" v-if=\"activeStep == 3\">\n                        <div class=\"title\">\n                            {{ $t('message.add_address_modal_step3_title') }}\n                        </div>\n\n                        <img src=\"@/assets/images/add_address_step3.svg\" alt=\"\" class=\"img\">\n\n                        <button class=\"btn\" :class=\"{'disabled': !ownerAccount}\" @click.prevent=\"activeStep += 1\">\n                            {{ $t('message.next_btn') }}\n                        </button>\n\n                        <div class=\"loader_wrap\" v-if=\"loading\">\n                            <div class=\"loader\"><span></span></div>\n                        </div>\n                    </div>\n\n\n                    <div class=\"step step4\" v-if=\"activeStep == 4\">\n                        <div class=\"title\">\n                            {{ $t('message.add_address_modal_step4_title') }}\n                        </div>\n\n                        <img src=\"@/assets/images/add_address_step4.svg\" alt=\"\" class=\"img\">\n\n                        <button class=\"btn\" @click.prevent=\"addAddress\">\n                            {{ $t('message.sing_broadcast_btn') }}\n                        </button>\n\n                        <div class=\"loader_wrap\" v-if=\"loading\">\n                            <div class=\"loader\"><span></span></div>\n                        </div>\n                    </div>\n\n\n                    <div class=\"step step5\" v-if=\"activeStep == 5\">\n                        <div class=\"title\">\n                            {{ $t('message.add_address_modal_step5_title') }}\n                        </div>\n\n                        <img src=\"@/assets/images/add_address_step5.svg\" alt=\"\" class=\"img\">\n\n                        <button class=\"btn\" @click.prevent=\"emitter.emit('closeAddAddressModal')\">\n                            {{ $t('message.done_btn') }}\n                        </button>\n                    </div>\n                </div>\n                </template>\n            </div>\n        </div>\n\n        <div class=\"overlay\"></div>\n    </section>\n</template>\n\n\n<script setup>\n    import { ref, inject, onBeforeMount, watchEffect, computed } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { useNotification } from '@kyvg/vue3-notification'\n    import { preparePassportTx, sendTx, generateAddress } from '@/utils'\n    import { toAscii, toBase64 } from '@cosmjs/encoding'\n\n    const store = useGlobalStore(),\n        i18n = inject('i18n'),\n        notification = useNotification(),\n        emitter = inject('emitter'),\n        activeStep = ref(1),\n        activeKeplrAddress = ref(store.activeKeplrAddress),\n        addedNetwork = ref(),\n        addedAddress = ref(''),\n        ownerAccount = ref(false),\n        loading = ref(false),\n        signature = ref(''),\n        duplicate = ref(false),\n        editForm = ref(false),\n        duplicateError = ref(false),\n        hasPassportError = ref(false),\n        tempAddressName = ref('')\n\n\n    onBeforeMount(() => {\n        // Select network\n        selectNetwork('cosmoshub')\n    })\n\n\n    watchEffect(() => {\n        // Set tooltip\n        if(activeStep.value == 0) {\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_step1')\n        }\n\n        if(activeStep.value == 1) {\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_step2')\n        }\n\n        if(activeStep.value == 2) {\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_step3')\n        }\n\n        if(activeStep.value == 3) {\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_step4')\n        }\n\n        if(activeStep.value == 4) {\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_step5')\n        }\n\n        if(activeStep.value == 5) {\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_success')\n        }\n    })\n\n\n    // Checking if the address was previously added\n    function checkAddress(prefix) {\n        if(store.account.moonPassportOwner.extension.addresses) {\n            let addresses = []\n\n            store.account.moonPassportOwner.extension.addresses.forEach(el => {\n                addresses.push(el.address)\n            })\n\n            return addresses.includes(generateAddress(prefix, store.wallets.cosmoshub))\n        }\n    }\n\n    // Checking if the wallet was previously added\n    function checkAllAddress() {\n        if(store.account.moonPassportOwner.extension.addresses) {\n            let addresses = []\n\n            store.account.moonPassportOwner.extension.addresses.forEach(el => {\n                addresses.push(generateAddress('cosmos', el.address))\n            })\n\n            return addresses.includes(store.wallets.cosmoshub)\n        }\n    }\n\n\n    // Select network\n    async function selectNetwork(network) {\n        addedNetwork.value = network\n\n        // Checking if the address was previously added\n        let result = checkAddress(store.networks[network].address_prefix)\n\n        if(result) {\n            duplicate.value = true\n\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_step2_error')\n        } else {\n            duplicate.value = false\n\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_step2')\n        }\n\n        // Set new singer\n        await setNewSinger()\n    }\n\n\n    // Show edit form\n    function showEditForm() {\n        editForm.value = true\n\n        // Focus on input\n        setTimeout(() => document.getElementById('temp_name').focus())\n    }\n\n\n    // Hide edit form\n    function hideEditForm() {\n        editForm.value = false\n    }\n\n\n    // Cancel edit form\n    function cancelEditForm() {\n        hideEditForm()\n\n        // Set default name\n        tempAddressName.value = ''\n    }\n\n\n    // Set active Keplr address\n    async function setActiveKeplrAddress() {\n        activeKeplrAddress.value = store.activeKeplrAddress\n\n        // Confirm address label\n        if(!tempAddressName.value.length) {\n            tempAddressName.value = store.account.userName\n        }\n\n        // Set new singer\n        await setNewSinger()\n\n        // Go to next step\n        activeStep.value += 1\n    }\n\n\n    // Set new singer\n    async function setNewSinger() {\n        await window.keplr.enable(store.networks[addedNetwork.value].chainId)\n\n        let offlineSigner = await window.getOfflineSignerAuto(store.networks[addedNetwork.value].chainId),\n            accounts = await offlineSigner.getAccounts()\n\n        addedAddress.value = accounts[0].address\n    }\n\n\n    // Create signature\n    async function createSignature() {\n        try {\n            let res = await window.keplr.signArbitrary(\n                store.networks[addedNetwork.value].chainId,\n                addedAddress.value,\n                `${store.account.moonPassportOwnerAddress}:${store.CONSTITUTION_HASH}`\n            )\n\n            signature.value = toBase64(toAscii(JSON.stringify({\n                pub_key: res.pub_key.value,\n                signature: res.signature\n            })))\n\n            // Show notification\n            notification.notify({\n                group: 'default',\n                title: i18n.global.t('message.notification_passport_signature'),\n                type: 'success'\n            })\n\n            // Hide loader\n            loading.value = false\n\n            // Go to next step\n            activeStep.value += 1\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    // Reload page\n    function reloadPage() {\n        store.needReload = true\n\n        emitter.emit('closeAddAddressModal')\n    }\n\n\n    // Sign a nd broadcast\n    async function addAddress() {\n        // Show loader\n        loading.value = true\n\n        // Show notification\n        notification.notify({\n            group: 'default',\n            duration: -100,\n            title: i18n.global.t('message.notification_address_adding_process')\n        })\n\n        try{\n            // Prepare Tx\n            let prepareResult = await preparePassportTx([\n                {\n                    proof_address: {\n                        address: addedAddress.value,\n                        nickname: store.account.moonPassportOwner.extension.nickname,\n                        signature: signature.value\n                    }\n                },\n                {\n                    set_address_label: {\n                        address: addedAddress.value,\n                        label: tempAddressName.value,\n                        nickname: store.account.moonPassportOwner.extension.nickname\n                    }\n                }\n            ])\n\n            // Send Tx\n            let result = await sendTx(prepareResult)\n\n            if (result.code === 0) {\n                // Set TXS\n                store.lastTXS = result.transactionHash\n\n                // Show notification\n                notification.notify({\n                    group: 'default',\n                    clean: true\n                })\n\n                notification.notify({\n                    group: store.networks.bostrom.denom,\n                    title: i18n.global.t('message.notification_success_address_added_title'),\n                    type: 'success',\n                    data: {\n                        chain: 'bostrom',\n                        tx_type: i18n.global.t('message.notification_action_address_add')\n                    }\n                })\n\n                // Hide loader\n                loading.value = false\n\n                // Go to next step\n                activeStep.value += 1\n\n                store.needReload = true\n            }\n\n            if (result.code) {\n                // Show notification\n                notification.notify({\n                    group: 'default',\n                    clean: true\n                })\n\n                notification.notify({\n                    group: store.networks.bostrom.denom,\n                    title: i18n.global.t('message.notification_failed_title'),\n                    text: i18n.global.t('message.manage_modal_error_rejected'),\n                    type: 'error',\n                    data: {\n                        chain: 'passport',\n                        tx_type: i18n.global.t('message.notification_action_address_add')\n                    }\n                })\n\n                // Hide loader\n                loading.value = false\n            }\n        } catch (error) {\n            console.log(error)\n\n            // Show notification\n            notification.notify({\n                group: 'default',\n                clean: true\n            })\n\n            notification.notify({\n                group: store.networks.bostrom.denom,\n                title: i18n.global.t('message.notification_failed_title'),\n                text: i18n.global.t('message.manage_modal_error_rejected'),\n                type: 'error',\n                data: {\n                    chain: 'passport',\n                    tx_type: i18n.global.t('message.notification_action_address_add')\n                }\n            })\n\n            // Hide loader\n            loading.value = false\n        }\n    }\n\n\n    // Change Keplr account\n    window.addEventListener('keplr_keystorechange', async () => {\n        // Check account\n        if(store.showAddAddressModal) {\n            // Show loader\n            loading.value = true\n\n            // Set condition\n            ownerAccount.value = false\n\n            // New keplr connect\n            await store.connectWallet(false, false)\n\n            // Step 0 and Step 2\n            if (activeStep.value == 1 || activeStep.value == 2) {\n                if(store.account.moonPassport) {\n                    // Hide loader\n                    loading.value = false\n\n                    // Go to zero step\n                    activeStep.value = 1\n\n                    // Has passport error\n                    hasPassportError.value = true\n                }\n\n                // Check duplicate\n                if(checkAllAddress()) {\n                    // Hide loader\n                    loading.value = false\n\n                    // Go to zero step\n                    activeStep.value = 1\n\n                    // Duplicate error\n                    duplicateError.value = true\n                }\n            }\n\n            // Step 3\n            if (activeStep.value == 3) {\n                if(store.wallets.bostrom == store.account.moonPassportOwnerAddress) {\n                    // Set condition\n                    ownerAccount.value = true\n\n                    // Go to next step\n                    activeStep.value += 1\n                }\n\n                // Hide loader\n                loading.value = false\n            }\n\n            // Step 4\n            if (activeStep.value == 4) {\n                if(store.wallets.bostrom != store.account.moonPassportOwnerAddress) {\n                    // Go to next step\n                    activeStep.value -= 1\n                }\n\n                // Hide loader\n                loading.value = false\n            }\n        }\n    })\n</script>\n\n\n<style scoped>\n    .loader_wrap\n    {\n        border-radius: 36px;\n    }\n\n\n\n    .title\n    {\n        line-height: 36px;\n\n        margin-bottom: 8px;\n        padding: 4px 60px 4px 0;\n    }\n\n\n\n    .error img\n    {\n        display: block;\n\n        width: 180px;\n        max-width: 100%;\n        margin: 0 auto 24px;\n    }\n\n\n    .error .desc\n    {\n        font-size: 24px;\n        font-weight: 500;\n        line-height: 110%;\n\n        text-align: center;\n    }\n\n\n    .error .btn\n    {\n        color: #fff;\n        font-weight: 500;\n        line-height: 19px;\n\n        width: 200px;\n        max-width: 100%;\n        margin: 16px auto 0;\n\n        border-radius: 14px;\n        background: #950fff;\n    }\n\n\n\n    .names\n    {\n        display: flex;\n\n        margin-bottom: 24px;\n\n        justify-content: flex-start;\n        align-items: stretch;\n        align-content: stretch;\n        flex-wrap: nowrap;\n    }\n\n\n    .names > *\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 100%;\n\n        display: flex;\n\n        width: 100%;\n        padding: 10px 0;\n\n        transition: .2s linear;\n        pointer-events: none;\n\n        border-bottom: 1px solid rgba(255, 255, 255, .1);\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .names > * + *\n    {\n        margin-left: 4px;\n    }\n\n\n    .names span\n    {\n        width: calc(100% - 24px);\n    }\n\n\n    .names .icon\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n        margin-left: auto;\n\n        transition: opacity .2s linear;\n\n        opacity: 0;\n    }\n\n\n    .names > *.active,\n    .names > *.completed\n    {\n        color: #950fff;\n\n        cursor: pointer;\n        pointer-events: auto;\n\n        border-color: #950fff;\n    }\n\n    .names > *.disabled\n    {\n        pointer-events: none;\n    }\n\n    .names > *.completed .icon\n    {\n        opacity: 1;\n    }\n\n\n\n    .step .title\n    {\n        font-size: 24px;\n        line-height: 110%;\n\n        margin-bottom: 8px;\n        padding: 0;\n    }\n\n\n    .step .desc\n    {\n        color: #555;\n        line-height: 110%;\n    }\n\n\n    .step .img\n    {\n        display: block;\n\n        height: 150px;\n        margin: 24px auto 0;\n    }\n\n\n    .step1 .current_account\n    {\n        position: relative;\n\n        display: flex;\n\n        margin-top: 16px;\n        padding: 11px 9px;\n\n        transition: border-color .2s linear;\n\n        border: 1px solid transparent;\n        border-radius: 12px;\n        background: #191919;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .step1 .current_account .logo\n    {\n        width: 24px;\n        height: 24px;\n\n        border-radius: 50%;\n    }\n\n    .step1 .current_account .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n    .step1 .current_account .logo + *\n    {\n        width: calc(100% - 32px);\n        margin-left: auto;\n    }\n\n\n    .step1 .current_account .logo .icon\n    {\n        color: #eb5757;\n\n        display: block;\n\n        width: 24px;\n        height: 24px;\n    }\n\n\n    .step1 .current_account .name\n    {\n        font-weight: 500;\n        line-height: 100%;\n\n        display: flex;\n\n        padding-right: 40px;\n\n        transition: color .2s linear;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: nowrap;\n    }\n\n    .step1 .current_account .name.error\n    {\n        color: #eb5757;\n    }\n\n    .step1 .current_account .name span\n    {\n        color: #555;\n        font-size: 14px;\n        font-weight: 400;\n\n        margin-left: 8px;\n    }\n\n\n    .step1 .current_account .edit_name_form\n    {\n        position: relative;\n\n        display: none;\n\n        width: 100%;\n    }\n\n\n    .step1 .current_account .edit_name_form .input\n    {\n        color: var(--text_color);\n        font-family: var(--font-family);\n        font-size: var(--font_size);\n        font-weight: 500;\n\n        display: block;\n\n        width: 100%;\n        height: 16px;\n        padding-right: 60px;\n\n        border: none;\n        background: none;\n    }\n\n\n    .step1 .current_account .edit_name_form .submit_btn\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 30px;\n        bottom: 0;\n\n        display: flex;\n\n        width: 16px;\n        height: 16px;\n        margin: auto;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .step1 .current_account .edit_name_form .submit_btn .icon\n    {\n        display: block;\n\n        width: 16px;\n        height: 16px;\n    }\n\n\n    .step1 .current_account .edit_name_form .cancel_btn\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 10px;\n        bottom: 0;\n\n        display: flex;\n\n        width: 16px;\n        height: 16px;\n        margin: auto;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .step1 .current_account .edit_name_form .cancel_btn .icon\n    {\n        display: block;\n\n        width: 16px;\n        height: 16px;\n    }\n\n\n    .step1 .current_account .address\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 16px;\n\n        overflow: hidden;\n\n        margin-top: 6px;\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .step1 .current_account .edit_btn\n    {\n        color: #555;\n\n        position: absolute;\n        top: 12px;\n        right: 10px;\n\n        display: flex;\n\n        width: 16px;\n        height: 16px;\n\n        transition: color .2s linear;\n        pointer-events: auto;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .step1 .current_account .edit_btn svg\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n    }\n\n    .step1 .current_account .edit_btn:hover\n    {\n        color: #fff;\n    }\n\n\n\n    .step1 .current_account.editing\n    {\n        border-color: #950fff;\n    }\n\n    .step1 .current_account.editing.error\n    {\n        border: 1px solid #eb5757;\n        background: rgba(235, 87, 87, .1);\n    }\n\n    .step1 .current_account.editing .name,\n    .step1 .current_account.editing .edit_btn\n    {\n        display: none;\n    }\n\n    .step1 .current_account.editing .edit_name_form\n    {\n        display: block;\n    }\n\n\n    .step1 .networks\n    {\n        display: flex;\n\n        margin-top: 24px;\n        margin-bottom: -8px;\n        margin-left: -8px;\n\n        justify-content: flex-start;\n        align-items: stretch;\n        align-content: stretch;\n        flex-wrap: wrap;\n    }\n\n    .step1 .networks > *\n    {\n        width: calc(50% - 8px);\n        margin-bottom: 8px;\n        margin-left: 8px;\n    }\n\n\n    .step1 .networks .network\n    {\n        font-size: 14px;\n        line-height: 100%;\n\n        display: flex;\n\n        width: 100%;\n        padding: 7px;\n\n        transition: .2s linear;\n        text-align: left;\n\n        border: 1px solid transparent;\n        border-radius: 8px;\n        background: #191919;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: nowrap;\n    }\n\n\n    .step1 .networks .logo\n    {\n        width: 24px;\n        min-width: 24px;\n        height: 24px;\n\n        border-radius: 50%;\n    }\n\n    .step1 .networks .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n    .step1 .networks .logo + *\n    {\n        width: 100%;\n        margin-left: 8px;\n    }\n\n\n    .step1 .networks .icon\n    {\n        color: #950fff;\n\n        display: block;\n\n        width: 16px;\n        min-width: 16px;\n        height: 16px;\n        margin-left: 8px;\n\n        transition: opacity .2s linear;\n\n        opacity: 0;\n    }\n\n\n    .step1 .networks .added_label\n    {\n        font-size: 12px;\n        line-height: 100%;\n\n        display: none;\n\n        margin-left: 8px;\n\n        white-space: nowrap;\n\n        opacity: .5;\n    }\n\n    .step1 .networks .network.added:not(.active) .added_label\n    {\n        display: block;\n    }\n\n\n    .step1 .networks .network:hover,\n    .step1 .networks .network.active\n    {\n        background: #212121;\n    }\n\n    .step1 .networks .network.active .icon\n    {\n        opacity: 1;\n    }\n\n\n    .step1 .networks .network.added\n    {\n        border-color: #950fff;\n        background: rgba(149, 15, 255, .1);\n    }\n\n    .step1 .networks .network.added .icon\n    {\n        display: none;\n    }\n\n\n    .step1 .networks .network.added.active\n    {\n        border: 1px solid #eb5757;\n        background: rgba(235, 87, 87, .1);\n    }\n\n    .step1 .networks .network.added.active .icon\n    {\n        color: #fff;\n\n        display: block;\n    }\n\n\n\n    .btn\n    {\n        font-weight: 500;\n        line-height: 100%;\n\n        display: block;\n\n        width: 100%;\n        height: 46px;\n        margin-top: 24px;\n        padding: 15px;\n\n        transition: background .2s linear;\n\n        border-radius: 12px;\n        background: #950fff;\n    }\n\n    .btn.disabled\n    {\n        pointer-events: none;\n\n        background: #353535;\n    }\n\n    .btn:hover\n    {\n        background: #7700e1;\n    }\n\n</style>","import script from \"./AddAddressModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddAddressModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AddAddressModal.vue?vue&type=style&index=0&id=b8506f28&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b8506f28\"]])\n\nexport default __exports__","<template>\n    <section class=\"modal\" id=\"add_address_modal\">\n        <div class=\"modal_content\">\n            <div class=\"data\">\n                <button class=\"close_btn\" @click.prevent=\"emitter.emit('closeDeleteAddressModal')\">\n                    <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_close\"></use></svg>\n                </button>\n\n                <div class=\"image\">\n                    <img src=\"@/assets/images/confirm_delete.svg\" alt=\"\">\n                </div>\n\n                <div class=\"title\">Do you want to delete your adress?</div>\n\n                <div class=\"btns\">\n                    <button class=\"btn no_btn\" @click.prevent=\"emitter.emit('closeDeleteAddressModal')\">\n                        {{ $t('message.no_btn') }}\n                    </button>\n\n                    <button class=\"btn yes_btn\" @click.prevent=\"deleteAddress()\">\n                        {{ $t('message.yes_btn') }}\n                    </button>\n                </div>\n\n                <div class=\"loader_wrap\" v-if=\"loading\">\n                    <div class=\"loader\"><span></span></div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"overlay\" @click.prevent=\"emitter.emit('closeDeleteAddressModal')\"></div>\n    </section>\n</template>\n\n\n<script setup>\n    import { inject, ref } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { useNotification } from '@kyvg/vue3-notification'\n    import { preparePassportTx, sendTx } from '@/utils'\n\n\n    const emitter = inject('emitter'),\n        i18n = inject('i18n'),\n        store = useGlobalStore(),\n        notification = useNotification(),\n        loading = ref(false)\n\n\n    // Delete address\n    async function deleteAddress() {\n        // Show loader\n        loading.value = true\n\n        // Show notification\n        notification.notify({\n            group: 'default',\n            duration: -100,\n            title: i18n.global.t('message.notification_address_deleting_process')\n        })\n\n        try{\n            // Prepare Tx\n            let prepareResult = await preparePassportTx({\n                remove_address: {\n                    address: store.currentDeleteAddress,\n                    nickname: store.account.moonPassportOwner.extension.nickname\n                }\n            })\n\n            // Send Tx\n            let result = await sendTx(prepareResult)\n\n            if (result.code === 0) {\n                // Set TXS\n                store.lastTXS = result.transactionHash\n\n                // Show notification\n                notification.notify({\n                    group: 'default',\n                    clean: true\n                })\n\n                notification.notify({\n                    group: store.networks.bostrom.denom,\n                    title: i18n.global.t('message.notification_success_address_delete_title'),\n                    type: 'success',\n                    data: {\n                        chain: 'bostrom',\n                        tx_type: i18n.global.t('message.notification_action_address_delete')\n                    }\n                })\n\n                // Reload page\n                setTimeout(() => window.location.reload(), 100)\n            }\n\n            if (result.code) {\n                // Show notification\n                notification.notify({\n                    group: 'default',\n                    clean: true\n                })\n\n                notification.notify({\n                    duration: -100,\n                    group: store.networks.bostrom.denom,\n                    title: i18n.global.t('message.notification_failed_title'),\n                    text: result?.rawLog.toString(),\n                    type: 'error',\n                    data: {\n                        chain: 'bostrom',\n                        tx_type: i18n.global.t('message.notification_action_address_delete')\n                    }\n                })\n\n                // Hide loader\n                loading.value = false\n            }\n        } catch (error) {\n            console.log(error)\n\n            // Show notification\n            notification.notify({\n                group: 'default',\n                clean: true\n            })\n\n            notification.notify({\n                group: store.networks.bostrom.denom,\n                title: i18n.global.t('message.notification_failed_title'),\n                text: i18n.global.t('message.manage_modal_error_rejected'),\n                type: 'error',\n                data: {\n                    chain: 'bostrom',\n                    tx_type: i18n.global.t('message.notification_action_address_delete')\n                }\n            })\n\n            // Hide loader\n            loading.value = false\n        }\n    }\n</script>\n\n\n<style scoped>\n    .modal_content .data\n    {\n        padding-top: 96px;\n    }\n\n\n    .image\n    {\n        display: flex;\n\n        height: 240px;\n        margin-bottom: 40px;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .image img\n    {\n        display: block;\n\n        max-width: 100%;\n        max-height: 100%;\n    }\n\n\n    .title\n    {\n        font-size: 30px;\n        font-weight: 600;\n        line-height: 130%;\n\n        text-align: center;\n    }\n\n\n    .btns\n    {\n        display: flex;\n\n        margin-top: 40px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .btns .btn\n    {\n        font-size: 16px;\n        font-weight: 500;\n        line-height: 19px;\n\n        display: block;\n\n        width: calc(50% - 5px);\n        padding: 14px;\n\n        transition: background .2s linear;\n\n        border-radius: 14px;\n        background: #353535;\n    }\n\n    .btns .btn:hover\n    {\n        background: #282828;\n    }\n\n\n    .btns .btn.yes_btn\n    {\n        background: #950fff;\n    }\n\n    .btns .btn.yes_btn:hover\n    {\n        background: #7700e1;\n    }\n\n</style>","import script from \"./DeleteAddressModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DeleteAddressModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DeleteAddressModal.vue?vue&type=style&index=0&id=588927cd&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-588927cd\"]])\n\nexport default __exports__","<template>\n    <form @submit.prevent=\"onSubmit\">\n        <input type=\"text\" v-model=\"name\" class=\"input\" maxlength=\"16\">\n\n        <button type=\"submit\" class=\"submit_btn\">\n            <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_check\"></use></svg>\n        </button>\n\n        <button type=\"button\" class=\"cancel_btn\" @click.prevent=\"e => e.target.closest('.item').classList.remove('editing')\">\n            <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_close\"></use></svg>\n        </button>\n\n        <div class=\"loader_wrap\" v-if=\"loading\">\n            <div class=\"loader\"><span></span></div>\n        </div>\n    </form>\n</template>\n\n\n<script setup>\n    import { inject, onBeforeMount, ref } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { useNotification } from '@kyvg/vue3-notification'\n    import { preparePassportTx, sendTx } from '@/utils'\n\n\n    const props = defineProps(['address', 'name']),\n        store = useGlobalStore(),\n        notification = useNotification(),\n        i18n = inject('i18n'),\n        name = ref(''),\n        loading = ref(false)\n\n\n    onBeforeMount(() => {\n        name.value = props.name\n    })\n\n\n    // Submit form\n    async function onSubmit() {\n        // Show loader\n        loading.value = true\n\n        // Show notification\n        notification.notify({\n            group: 'default',\n            duration: -100,\n            title: i18n.global.t('message.notification_address_renaming_process')\n        })\n\n        try{\n            // Prepare Tx\n            let prepareResult = await preparePassportTx({\n                set_address_label: {\n                    address: props.address,\n                    label: name.value,\n                    nickname: store.account.moonPassportOwner.extension.nickname\n                }\n            })\n\n            // Send Tx\n            let result = await sendTx(prepareResult)\n\n            if (result.code === 0) {\n                // Set TXS\n                store.lastTXS = result.transactionHash\n\n                // Show notification\n                notification.notify({\n                    group: 'default',\n                    clean: true\n                })\n\n                notification.notify({\n                    group: store.networks.bostrom.denom,\n                    title: i18n.global.t('message.notification_success_address_rename_title'),\n                    type: 'success',\n                    data: {\n                        chain: 'bostrom',\n                        tx_type: i18n.global.t('message.notification_action_address_rename')\n                    }\n                })\n\n                // Get moon passport\n                await store.getMoonPassport()\n                await store.getOwnerMoonPassport()\n\n                // Hide loader\n                loading.value = false\n\n                // Hide form\n                document.querySelectorAll('.connected_addresses .item').forEach(el => el.classList.remove('editing'))\n            }\n        } catch (error) {\n            console.log(error)\n\n            // Show notification\n            notification.notify({\n                group: 'default',\n                clean: true\n            })\n\n            notification.notify({\n                group: store.networks.bostrom.denom,\n                title: i18n.global.t('message.notification_failed_title'),\n                text: i18n.global.t('message.manage_modal_error_rejected'),\n                type: 'error',\n                data: {\n                    chain: 'bostrom',\n                    tx_type: i18n.global.t('message.notification_action_address_rename')\n                }\n            })\n\n            // Hide loader\n            loading.value = false\n        }\n    }\n</script>\n\n\n<style scoped>\n    form\n    {\n        position: absolute;\n        z-index: 5;\n        top: 0;\n        left: 0;\n\n        width: 100%;\n        height: 100%;\n\n        pointer-events: auto;\n    }\n\n\n    form .input\n    {\n        color: var(--text_color);\n        font-family: var(--font-family);\n        font-size: 14px;\n\n        display: block;\n\n        width: 100%;\n        height: 42px;\n        padding-right: 55px;\n        padding-bottom: 1px;\n        padding-left: 9px;\n\n        border: 1px solid #950fff;\n        border-radius: 14px;\n        background: #141414;\n    }\n\n\n    form .submit_btn\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 30px;\n        bottom: 0;\n\n        display: flex;\n\n        width: 16px;\n        height: 16px;\n        margin: auto;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    form .submit_btn .icon\n    {\n        display: block;\n\n        width: 16px;\n        height: 16px;\n    }\n\n\n    form .cancel_btn\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 10px;\n        bottom: 0;\n\n        display: flex;\n\n        width: 16px;\n        height: 16px;\n        margin: auto;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    form .cancel_btn .icon\n    {\n        display: block;\n\n        width: 16px;\n        height: 16px;\n    }\n\n\n    form .loader_wrap\n    {\n        border-radius: 13px;\n    }\n\n    form .loader\n    {\n        width: 24px;\n        height: 24px;\n    }\n\n</style>","import script from \"./EditAddressName.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditAddressName.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./EditAddressName.vue?vue&type=style&index=0&id=670c8772&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-670c8772\"]])\n\nexport default __exports__","<template>\n    <section class=\"connected_addresses\">\n        <div class=\"title\">\n            <span>{{ $t('message.account_connected_addresses_title') }}</span>\n\n            <button class=\"all_btn\" v-if=\"store.account.moonPassportOwner.extension.addresses\" :class=\"{ active: store.account.currentWallet == 'all' }\" @click.prevent=\"selectWallet('all')\">\n                <div class=\"check\">\n                    <svg><use xlink:href=\"/sprite.svg#ic_check\"></use></svg>\n                </div>\n                <span>{{ $t('message.account_connected_addresses_all') }}</span>\n            </button>\n        </div>\n\n        <div class=\"list\">\n            <!-- <pre>{{ store.account.moonPassport }}</pre> -->\n            <!-- <pre>{{ store.account.moonPassportOwner }}</pre> -->\n\n            <div><div class=\"item\"\n                :class=\"{'active': store.account.currentWallet == 'all' || store.account.moonPassportOwnerAddress == generateAddress('bostrom', store.account.currentWallet)}\"\n                @click.prevent=\"selectWallet(store.account.moonPassportOwnerAddress)\"\n            >\n                <div class=\"name\">\n                    {{ store.account.moonPassportOwner.extension.nickname }}\n                </div>\n            </div></div>\n\n            <template v-for=\"(item, index) in store.account.moonPassportOwner.extension.addresses\" :key=\"index\" v-if=\"store.account.moonPassportOwner.extension.addresses\">\n            <!-- <div><div class=\"item\" v-if=\"item.address.substring(0, 2) != '0x' && item.address.substring(0, 5) != 'terra'\" @click.self=\"selectWallet(item.address)\"\n                :class=\"{\n                    'duplicate': isDuplicate(item.address),\n                    'active': store.account.currentWallet == 'all' || store.account.currentWallet == generateAddress('bostrom', item.address)\n                }\"\n            > -->\n            <div v-if=\"item.address.substring(0, 2) != '0x' && item.address.substring(0, 5) != 'terra'\">\n                <div class=\"item\" @click.self=\"selectWallet(item.address)\" :class=\"{\n                    'duplicate': isDuplicate(item.address),\n                    'active': store.account.currentWallet == 'all' || store.account.currentWallet == generateAddress('bostrom', item.address)\n                }\">\n                    <div class=\"tooltip\">\n                        {{ $t('message.account_duplicate_ext') }}\n                    </div>\n\n                    <div class=\"name\">\n                        <span v-if=\"item.label\">{{ item.label }}</span>\n                        <span v-else>{{ item.address.slice(0, 13) + '...' + item.address.slice(-6) }}</span>\n                    </div>\n\n                    <button class=\"edit_btn\" @click.prevent=\"showEditForm\" v-if=\"store.account.moonPassportOwnerAddress == store.wallets.bostrom\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_edit_address'))\">\n                        <svg><use xlink:href=\"/sprite.svg#ic_edit\"></use></svg>\n                    </button>\n\n                    <button class=\"remove_btn\" @click.prevent=\"openDeleteAddressModal(item.address)\" v-if=\"store.account.moonPassportOwnerAddress == store.wallets.bostrom\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_delete_address'))\">\n                        <svg><use xlink:href=\"/sprite.svg#ic_remove\"></use></svg>\n                    </button>\n\n                    <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_duplicate\"></use></svg>\n\n                    <EditAddressName :address=\"item.address\" :name=\"item.label ? item.label : `${item.address.slice(0, 13)}...${item.address.slice(-6)}`\"/>\n                </div>\n            </div>\n\n            <div v-else>\n                <div class=\"item not_supported\">\n                    <div class=\"tooltip\">\n                        {{ $t('message.account_not_supported_ext') }}\n                    </div>\n\n                    <div class=\"name\">\n                        <span>{{ item.address.slice(0, 13) + '...' + item.address.slice(-6) }}</span>\n                    </div>\n\n                    <button class=\"remove_btn\" @click.prevent=\"openDeleteAddressModal(item.address)\" v-if=\"store.account.moonPassportOwnerAddress == store.wallets.bostrom\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_delete_address'))\">\n                        <svg><use xlink:href=\"/sprite.svg#ic_remove\"></use></svg>\n                    </button>\n\n                    <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_duplicate\"></use></svg>\n                </div>\n            </div>\n            </template>\n        </div>\n\n        <button class=\"add_btn\" @click.prevent=\"openAddAddressModal\" :class=\"{'disabled': store.account.moonPassportOwner.extension.addresses && store.account.moonPassportOwner.extension.addresses.length >= 8}\">\n            <span>{{ $t('message.add_address_btn') }}</span>\n            <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_plus\"></use></svg>\n        </button>\n\n\n        <!-- Add address modal -->\n        <AddAddressModal v-if=\"store.showAddAddressModal\" />\n\n\n        <!-- Delete address modal -->\n        <DeleteAddressModal v-if=\"store.showDeleteAddressModal\" />\n    </section>\n</template>\n\n\n<script setup>\n    import { inject, onBeforeMount, onBeforeUpdate } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { generateAddress } from '@/utils'\n\n    // Components\n    import AddAddressModal from '@/components/modal/AddAddressModal.vue'\n    import DeleteAddressModal from '@/components/modal/DeleteAddressModal.vue'\n    import EditAddressName from '@/components/account/EditAddressName.vue'\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter')\n\n    var uniqWallets = []\n\n\n    onBeforeMount(() => {\n        // Create uniq wallets array\n        createUniwWalletsArray()\n    })\n\n\n    onBeforeUpdate(() => {\n        // Clear array\n        uniqWallets = []\n\n        // Create uniq wallets array\n        createUniwWalletsArray()\n    })\n\n\n    // Create uniq wallets array\n    function createUniwWalletsArray() {\n        uniqWallets[store.account.moonPassportOwnerAddress] = true\n\n        if(store.account.moonPassportOwner.extension.addresses) {\n            store.account.moonPassportOwner.extension.addresses.forEach(address => {\n                // Drop eth and terra addresses\n                if(address.address.substring(0, 2) != '0x' && address.address.substring(0, 5) != 'terra') {\n                    let tempBostromAddress = generateAddress('bostrom', address.address)\n\n                    if (!uniqWallets[tempBostromAddress]) {\n                        uniqWallets[tempBostromAddress] = false\n                    }\n                }\n            })\n        }\n    }\n\n\n    // Check address\n    function isDuplicate(address) {\n        if(address.substring(0, 2) != '0x' && address.substring(0, 5) != 'terra') {\n            let result = false\n\n            !uniqWallets[generateAddress('bostrom', address)]\n                ? uniqWallets[generateAddress('bostrom', address)] = true\n                : result = true\n\n            return result\n        }\n    }\n\n\n    // Select wallet\n    function selectWallet(address) {\n        if(address == 'all') {\n            store.account.currentWallet == 'all'\n                ? store.account.currentWallet = store.account.moonPassportOwnerAddress\n                : store.account.currentWallet = address\n        } else {\n            store.account.currentWallet = generateAddress('bostrom', address)\n        }\n    }\n\n\n    // Show edit form\n    function showEditForm() {\n        let _self = event.target\n\n        _self.closest('.item').classList.add('editing')\n\n        // Focus on input\n        setTimeout(() => _self.closest('.item').querySelector('.input').focus())\n    }\n\n\n    // Open add address modal\n    function openAddAddressModal() {\n        store.showAddAddressModal = true\n\n        document.body.classList.add('lock')\n    }\n\n\n    // Open delete address modal\n    function openDeleteAddressModal(address) {\n        store.currentDeleteAddress = address\n        store.showDeleteAddressModal = true\n\n        document.body.classList.add('lock')\n    }\n\n\n    // Event \"close add address modal\"\n    emitter.on('closeAddAddressModal', () => {\n        if(store.needReload) {\n            // Reload page\n            window.location.reload()\n        } else {\n            store.showAddAddressModal = false\n\n            document.body.classList.remove('lock')\n        }\n    })\n\n\n    // Event \"close delete address modal\"\n    emitter.on('closeDeleteAddressModal', () => {\n        store.showDeleteAddressModal = false\n\n        document.body.classList.remove('lock')\n    })\n</script>\n\n\n<style scoped>\n    .connected_addresses\n    {\n        position: relative;\n\n        padding: 14px 14px 24px;\n\n        border-radius: 20px;\n        background: #0d0d0d;\n    }\n\n\n    .connected_addresses .title\n    {\n        font-size: 30px;\n        font-weight: 600;\n        line-height: 36px;\n\n        display: flex;\n\n        margin-bottom: 20px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .connected_addresses .all_btn\n    {\n        font-size: 14px;\n        line-height: 17px;\n\n        display: flex;\n\n        margin-left: auto;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .connected_addresses .all_btn .check\n    {\n        display: flex;\n\n        width: 20px;\n        height: 20px;\n        margin-right: 8px;\n\n        transition: background .2s linear;\n\n        border-radius: 7px;\n        background: #464646;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .connected_addresses .all_btn .check svg\n    {\n        display: block;\n\n        width: 16px;\n        height: 16px;\n\n        transition: opacity .2s linear;\n\n        opacity: 0;\n    }\n\n\n    .connected_addresses .all_btn.active .check\n    {\n        background: #950fff;\n    }\n    .connected_addresses .all_btn.active .check svg\n    {\n        opacity: 1;\n    }\n\n\n    .connected_addresses .list\n    {\n        display: flex;\n        flex-direction: column;\n    }\n\n\n    .connected_addresses .list > *\n    {\n        position: relative;\n    }\n\n    .connected_addresses .list > * + *\n    {\n        margin-top: 8px;\n    }\n\n\n    .connected_addresses .item\n    {\n        color: rgba(255,255,255,.7);\n\n        position: relative;\n\n        display: flex;\n\n        min-height: 42px;\n        padding: 10px;\n\n        cursor: pointer;\n        transition: .2s linear;\n\n        border-radius: 14px;\n        background: #141414;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: nowrap;\n    }\n\n    .connected_addresses .item.hide\n    {\n        display: none;\n    }\n\n    .connected_addresses .item > *\n    {\n        pointer-events: none;\n    }\n\n\n    .connected_addresses .tooltip\n    {\n        font-size: 12px;\n        line-height: 100%;\n\n        position: absolute;\n        z-index: 9;\n        right: -41px;\n        bottom: 100%;\n\n        display: none;\n\n        margin-bottom: 8px;\n        padding: 8px;\n\n        border-radius: 8px;\n        background: #282828;\n        box-shadow: 0 6px 12px rgba(0, 0, 0, .2);\n    }\n\n    .connected_addresses .tooltip:before\n    {\n        position: absolute;\n        top: 100%;\n        right: 0;\n        left: 0;\n\n        display: block;\n\n        width: 29px;\n        height: 7px;\n        margin: 0 auto;\n\n        content: '';\n\n        background: url(@/assets/images/tooltip_tail.svg) 50% 0/100% 100% no-repeat;\n    }\n\n\n    .connected_addresses .name\n    {\n        font-size: 14px;\n        line-height: 20px;\n\n        overflow: hidden;\n\n        width: 100%;\n        margin-right: auto;\n        padding-right: 8px;\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .connected_addresses .item > .icon\n    {\n        color: #eb5757;\n\n        display: none;\n\n        width: 16px;\n        min-width: 16px;\n        height: 16px;\n        margin-left: 8px;\n    }\n\n\n    .connected_addresses .edit_btn\n    {\n        color: #555;\n\n        display: none;\n\n        width: 16px;\n        min-width: 16px;\n        height: 16px;\n        margin-left: 8px;\n\n        transition: color .2s linear;\n        pointer-events: auto;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .connected_addresses .edit_btn svg\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n    }\n\n    .connected_addresses .edit_btn:hover\n    {\n        color: #fff;\n    }\n\n\n    .connected_addresses .remove_btn\n    {\n        color: #555;\n\n        display: none;\n\n        width: 18px;\n        min-width: 18px;\n        height: 18px;\n        margin-left: 8px;\n\n        transition: color .2s linear;\n        pointer-events: auto;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .connected_addresses .remove_btn svg\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n    }\n\n    .connected_addresses .remove_btn:hover\n    {\n        color: #fff;\n    }\n\n\n    .connected_addresses .item form\n    {\n        display: none;\n\n        pointer-events: auto;\n    }\n\n    .connected_addresses .item.editing form\n    {\n        display: block;\n    }\n\n\n    .connected_addresses .list > *:hover .item\n    {\n        color: #fff;\n\n        background: #212121;\n    }\n\n    .connected_addresses .list > *:hover .item .remove_btn,\n    .connected_addresses .list > *:hover .item .edit_btn\n    {\n        display: flex;\n    }\n\n\n    .connected_addresses .item.active\n    {\n        color: #fff;\n\n        background: #141414;\n        box-shadow: inset 0 0 0 1px #950fff;\n    }\n\n\n    .connected_addresses .item.duplicate\n    {\n        color: #fff;\n\n        cursor: default;\n        pointer-events: none;\n\n        box-shadow: none;\n    }\n\n\n    .connected_addresses .item.not_supported\n    {\n        box-shadow: inset 0 0 0 1px #eb5757;\n    }\n\n    .connected_addresses .item.not_supported .tooltip\n    {\n        right: -31px;\n    }\n\n\n    .connected_addresses .item.duplicate > .icon,\n    .connected_addresses .list > *:hover .item.duplicate .tooltip,\n    .connected_addresses .item.not_supported > .icon,\n    .connected_addresses .list > *:hover .item.not_supported .tooltip\n    {\n        display: block;\n    }\n\n\n    .connected_addresses .add_btn\n    {\n        font-size: 14px;\n        line-height: 110%;\n\n        display: flex;\n\n        width: 100%;\n        margin-top: 16px;\n        padding: 8px;\n\n        transition: background .2s linear;\n\n        border-radius: 10px;\n        background: #950fff;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .connected_addresses .add_btn .icon\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n        margin-left: 8px;\n    }\n\n    .connected_addresses .add_btn.disabled\n    {\n        pointer-events: none;\n\n        opacity: .3;\n    }\n\n    .connected_addresses .add_btn:hover\n    {\n        background: #7700e1;\n    }\n\n\n\n    @media print, (max-width: 1899px)\n    {\n        .connected_addresses .title\n        {\n            font-size: 27px;\n            line-height: 33px;\n        }\n    }\n\n</style>","import script from \"./ConnectedAddresses.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ConnectedAddresses.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ConnectedAddresses.vue?vue&type=style&index=0&id=782af379&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-782af379\"]])\n\nexport default __exports__","<template>\n    <section class=\"account_info\">\n        <div class=\"cont middle\">\n            <div class=\"grid row\">\n                <section class=\"col\">\n                    <!-- Networks -->\n                    <Networks />\n                </section>\n\n\n                <section class=\"col_main\">\n                    <section class=\"main_data\">\n                        <!-- Contract address -->\n                        <!-- <ContractAddress /> -->\n\n                        <!-- Charts -->\n                        <Charts :key=\"chartsKey\" />\n                    </section>\n\n\n                    <!-- Stats -->\n                    <Stats :key=\"statsKey\" />\n\n                    <!-- Validators -->\n                    <Validators :key=\"validatorsKey\" />\n\n                    <!-- Proposals -->\n                    <Proposals />\n                </section>\n\n\n                <section class=\"col\">\n                    <!-- Connected addresses -->\n                    <ConnectedAddresses />\n                </section>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, inject, ref, watch } from 'vue'\n    import { useGlobalStore } from '@/stores'\n\n    // Components\n    import Networks from '../components/account/Networks.vue'\n    import Charts from '../components/account/Charts.vue'\n    import Stats from '../components/account/Stats.vue'\n    import Validators from '../components/account/Validators.vue'\n    import Proposals from '../components/account/Proposals.vue'\n    import ConnectedAddresses from '../components/account/ConnectedAddresses.vue'\n\n\n    const store = useGlobalStore(),\n        i18n = inject('i18n'),\n        chartsKey = ref(0),\n        statsKey = ref(0),\n        validatorsKey = ref(0)\n\n\n    onBeforeMount(() => {\n        // Set default notification\n        store.tooltip = i18n.global.t('message.notice_default_account_page')\n    })\n\n\n    watch(() => store.account.currentWallet, () => {\n        chartsKey.value += 1\n        statsKey.value += 1\n        validatorsKey.value += 1\n    })\n</script>\n\n\n<style scoped>\n    .grid\n    {\n        justify-content: space-between;\n    }\n\n\n    .col\n    {\n        width: 353px;\n        max-width: 100%;\n    }\n\n\n    .col_main\n    {\n        width: calc(100% - 746px);\n    }\n\n    .col_main > * + *\n    {\n        margin-top: 24px;\n    }\n\n\n\n    .main_data\n    {\n        padding: 20px;\n\n        border-radius: 20px;\n        background: #0d0d0d;\n    }\n\n</style>","import script from \"./Account.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Account.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Account.vue?vue&type=style&index=0&id=df712cf2&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-df712cf2\"]])\n\nexport default __exports__"],"names":["store","useGlobalStore","__exports__","ChartJS","ArcElement","i18n","inject","emitter","loading","ref","chartActive","chartFirst","chartSecond","chartThird","chartFourth","chartFifth","chartFirstActiveLegend","chartSecondActiveLegend","chartThirdActiveLegend","chartFourthActiveLegend","chartFifthActiveLegend","chartOptionsFirst","reactive","responsive","plugins","legend","tooltip","animation","duration","transitions","active","onHover","e","item","length","value","index","chartOptionsSecond","chartOptionsThird","chartOptionsFourth","chartOptionsFifth","chartDatasetsFirst","chartDatasetsSecond","chartDatasetsThird","chartDatasetsFourth","chartDatasetsFifth","chartColorsThird","chartColorsFourth","chartDataFirst","computed","labels","global","t","datasets","data","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","borderAlign","cutout","chartDataSecond","chartDataThird","chartDataFourth","chartDataFifth","totalChartFirst","totalChartThird","currentData","networks","totalPrice_usdt","totalPrice_eth","totalPrice_btc","totalPrice_atom","currentNetwork","async","getData","wallet","account","wallets","fetch","generateAddress","cosmoshub","address_prefix","address","then","res","json","response","liquid","native","i","symbol","exponent","price","splice","ibc","staked","unbonding","rewards","totals","outside","liquid_rewards","groupByDenom","forEach","el","amount","duplicate","find","Math","pow","price_usdt","push","logo","amountCurrentDenom","parseFloat","price_atom","ATOM_price","price_eth","ETH_price","price_btc","BTC_price","currentNetworkInWallet","network","name","total","balance","sort","a","b","totalRewards_usdt","totalRewards_eth","totalRewards_atom","totalRewards_btc","error","console","log","setActualData","currentWallet","color","networkColors","substring","STRD","XPRT","QCK","allGroupByDenom","cosmosHubWalletTotalPrice_usdt","cosmosHubWalletTotalPrice_atom","cosmosHubWalletTotalPrice_btc","cosmosHubWalletTotalPrice_eth","totalPrice_ubttc","setWidth","percents","toggleActiveClass","target","closest","classList","toggle","mouseenterLegend","chart","dataIndex","chartInstance","setActiveElements","datasetIndex","update","mouseleaveLegend","calcPercentsChart1","type","result","calcPercentsChart3","token","calcPercentsChart4","calcPercentsChart5","onBeforeMount","RPDE_USDT","RPDE_BTC","RPDE_ETH","RPDE_ATOM","cosmosHubAddress","info","apr","rpde","imageLoadError","event","add","style","colors","floor","random","getValidatorInfo","columnName","validatorInfo","schema","indexOf","props","validator","operator_address","showValidatorModal","totalPassportTokens","showAll","getAddressData","currentAddress","validators","totalTokens","tempArray","nickname","coin","validatorsReverse","getAllData","generatedAddress","moonPassportOwnerAddress","openValidatorModal","document","body","on","remove","proposals","notification","useNotification","activeStep","activeKeplrAddress","addedNetwork","addedAddress","ownerAccount","signature","editForm","duplicateError","hasPassportError","tempAddressName","checkAddress","prefix","moonPassportOwner","extension","addresses","includes","checkAllAddress","selectNetwork","setNewSinger","showEditForm","setTimeout","getElementById","focus","hideEditForm","cancelEditForm","setActiveKeplrAddress","userName","window","keplr","enable","chainId","offlineSigner","getOfflineSignerAuto","accounts","getAccounts","createSignature","signArbitrary","CONSTITUTION_HASH","toBase64","toAscii","JSON","stringify","pub_key","notify","group","title","reloadPage","needReload","emit","addAddress","prepareResult","preparePassportTx","proof_address","set_address_label","label","sendTx","code","lastTXS","transactionHash","clean","bostrom","denom","chain","tx_type","text","watchEffect","addEventListener","showAddAddressModal","connectWallet","moonPassport","deleteAddress","remove_address","currentDeleteAddress","location","reload","rawLog","toString","onSubmit","getMoonPassport","getOwnerMoonPassport","querySelectorAll","uniqWallets","createUniwWalletsArray","tempBostromAddress","isDuplicate","selectWallet","_self","querySelector","openAddAddressModal","openDeleteAddressModal","showDeleteAddressModal","onBeforeUpdate","chartsKey","statsKey","validatorsKey","watch"],"sourceRoot":""}