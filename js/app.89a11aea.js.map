{"version":3,"file":"js/app.89a11aea.js","mappings":"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","sources":["webpack://bro_app/./src/App.vue","webpack://bro_app/./src/App.vue?7ccd","webpack://bro_app/./src/components/header/IPFS.vue","webpack://bro_app/./src/components/header/IPFS.vue?b5b7","webpack://bro_app/./src/components/header/Currency.vue","webpack://bro_app/./src/components/header/Currency.vue?b6f3","webpack://bro_app/./src/components/header/User.vue","webpack://bro_app/./src/components/header/User.vue?d5e2","webpack://bro_app/./src/components/header/ConnectBtn.vue","webpack://bro_app/./src/components/header/ConnectBtn.vue?8a43","webpack://bro_app/./src/components/Header.vue","webpack://bro_app/./src/components/Header.vue?801b","webpack://bro_app/./src/layouts/Error.vue","webpack://bro_app/./src/layouts/Error.vue?3eb7","webpack://bro_app/./src/components/ManageModal.vue","webpack://bro_app/./src/components/ManageModal.vue?4823","webpack://bro_app/./src/components/ManageSuccessModal.vue","webpack://bro_app/./src/components/ManageSuccessModal.vue?0d9a","webpack://bro_app/./src/components/ManageErrorModal.vue","webpack://bro_app/./src/components/ManageErrorModal.vue?1b0b","webpack://bro_app/./src/config/chain/desmos.js","webpack://bro_app/./src/config/chain/crescent.js","webpack://bro_app/./src/config/chain/omniflix.js","webpack://bro_app/./src/layouts/Default.vue","webpack://bro_app/./src/layouts/Default.vue?3951","webpack://bro_app/./src/router/index.js","webpack://bro_app/./src/locale/messages.js","webpack://bro_app/./src/locale/index.js","webpack://bro_app/./src/main.js","webpack://bro_app/./src/stores/account.js","webpack://bro_app/./src/stores/networks/evmos.js","webpack://bro_app/./src/stores/networks/cosmoshub.js","webpack://bro_app/./src/stores/networks/bostrom.js","webpack://bro_app/./src/stores/networks/osmosis.js","webpack://bro_app/./src/stores/networks/juno.js","webpack://bro_app/./src/stores/networks/emoney.js","webpack://bro_app/./src/stores/networks/stargaze.js","webpack://bro_app/./src/stores/networks/gravity.js","webpack://bro_app/./src/stores/networks/crescent.js","webpack://bro_app/./src/stores/networks/omniflix.js","webpack://bro_app/./src/stores/networks/desmos.js","webpack://bro_app/./src/stores/networks/stride.js","webpack://bro_app/./src/stores/index.js","webpack://bro_app/webpack/bootstrap","webpack://bro_app/webpack/runtime/chunk loaded","webpack://bro_app/webpack/runtime/compat get default export","webpack://bro_app/webpack/runtime/define property getters","webpack://bro_app/webpack/runtime/ensure chunk","webpack://bro_app/webpack/runtime/get javascript chunk filename","webpack://bro_app/webpack/runtime/get mini-css chunk filename","webpack://bro_app/webpack/runtime/global","webpack://bro_app/webpack/runtime/hasOwnProperty shorthand","webpack://bro_app/webpack/runtime/load script","webpack://bro_app/webpack/runtime/make namespace object","webpack://bro_app/webpack/runtime/node module decorator","webpack://bro_app/webpack/runtime/publicPath","webpack://bro_app/webpack/runtime/css loading","webpack://bro_app/webpack/runtime/jsonp chunk loading","webpack://bro_app/webpack/startup"],"sourcesContent":["<template>\n    <component :is=\"layout\" />\n</template>\n\n\n<script setup>\n    import { computed } from 'vue'\n    import { useRoute } from 'vue-router'\n\n    const route = useRoute(),\n        layout = computed(() => route.meta.layout || 'default-layout')\n</script>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"ipfs_status\" :class=\"{ green: store.IPFSStatus }\" @mouseover=\"setNotice\">\n        <div>{{ $t('message.ipfs') }}</div>\n    </div>\n</template>\n\n\n<script setup>\n    import { inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter'),\n        i18n = inject('i18n')\n\n\n    // Set notice\n    function setNotice() {\n        store.IPFSStatus\n            ? emitter.emit('setNotification', i18n.global.t('message.ipfs_active_notice'))\n            : emitter.emit('setNotification', i18n.global.t('message.ipfs_not_active_notice'))\n    }\n</script>\n\n\n<style scoped>\n    .ipfs_status\n    {\n        color: #eb5757;\n        font-size: 15px;\n        font-weight: 500;\n        line-height: 18px;\n\n        position: relative;\n\n        padding-left: 21px;\n    }\n\n    .ipfs_status.green\n    {\n        color: #1bc562;\n    }\n\n\n    .ipfs_status:before\n    {\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 11px;\n        height: 11px;\n        margin: auto;\n\n        content: '';\n\n        border-radius: 50%;\n        background: currentColor;\n    }\n\n</style>","import script from \"./IPFS.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./IPFS.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./IPFS.vue?vue&type=style&index=0&id=0fc9a7a5&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0fc9a7a5\"]])\n\nexport default __exports__","<template>\n    <div class=\"currency\" @mouseover=\"emitter.emit('setNotification', $t('message.currency_notice'))\" v-click-out=\"clickOut\">\n        <button class=\"btn\" :class=\"{ active: store.showCurrencyDropdown }\" @click.prevent=\"store.showCurrencyDropdown = !store.showCurrencyDropdown\">\n            <span>{{ store.currency }}</span>\n            <svg><use xlink:href=\"/sprite.svg#ic_arr_down\"></use></svg>\n        </button>\n\n        <transition name=\"fadeUp\" mode=\"out-in\">\n        <div class=\"dropdown\" v-show=\"store.showCurrencyDropdown\">\n            <div><button class=\"btn\" :class=\"{ active: store.currency == 'BTC' }\" @click.prevent=\"selectCurrency('BTC')\">BTC</button></div>\n\n            <div><button class=\"btn\" :class=\"{ active: store.currency == 'ETH' }\" @click.prevent=\"selectCurrency('ETH')\">ETH</button></div>\n\n            <div><button class=\"btn\" :class=\"{ active: store.currency == 'ATOM' }\" @click.prevent=\"selectCurrency('ATOM')\">ATOM</button></div>\n\n            <div><button class=\"btn\" :class=\"{ active: store.currency == 'USDT' }\" @click.prevent=\"selectCurrency('USDT')\">USDT</button></div>\n        </div>\n        </transition>\n    </div>\n</template>\n\n\n<script setup>\n    import { inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter')\n\n\n    // Select currency\n    function selectCurrency(newCurrency) {\n        store.$patch({ currency: newCurrency })\n\n        store.showCurrencyDropdown = false\n    }\n\n    // Сlick element outside\n    function clickOut() {\n        store.showCurrencyDropdown = false\n    }\n</script>\n\n\n<style scoped>\n    .currency\n    {\n        position: relative;\n\n        margin-left: 60px;\n    }\n\n\n    .currency .btn\n    {\n        font-size: 15px;\n        font-weight: 500;\n        line-height: 18px;\n\n        display: flex;\n\n        min-width: 70px;\n\n        pointer-events: auto;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n    }\n\n    .currency .btn svg\n    {\n        display: block;\n\n        width: 15px;\n        height: 15px;\n        margin-left: 10px;\n    }\n\n\n    .currency .dropdown\n    {\n        position: absolute;\n        z-index: 5;\n        top: 100%;\n        left: -9px;\n\n        width: 90px;\n        margin-top: 7px;\n        padding: 6px 4px;\n\n        border-radius: 10px;\n        background: #101010;\n    }\n\n    .currency .dropdown > * + *\n    {\n        margin-top: 5px;\n    }\n\n\n    .currency .dropdown .btn\n    {\n        font-size: 12px;\n        line-height: 15px;\n\n        display: block;\n\n        width: 100%;\n        padding: 4px;\n\n        transition: background .2s linear;\n        text-align: left;\n        pointer-events: auto;\n\n        border-radius: 7px;\n    }\n\n    .currency .dropdown .btn:hover,\n    .currency .dropdown .btn.active\n    {\n        background: #191919;\n    }\n\n</style>","import script from \"./Currency.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Currency.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Currency.vue?vue&type=style&index=0&id=7e031ca0&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7e031ca0\"]])\n\nexport default __exports__","<template>\n    <div class=\"user\">\n        <div class=\"icon\">\n            <svg><use xlink:href=\"/sprite.svg#ic_wallet\"></use></svg>\n        </div>\n\n        <div class=\"name\" @mouseover=\"emitter.emit('setNotification', $t('message.username_notice'))\">\n            {{ store.account.userName }}\n            </div>\n\n        <a href=\"https://cyb.ai/citizenship\" target=\"_blank\" rel=\"noopener nofollow\" class=\"photo\" @mouseover=\"emitter.emit('setNotification', $t('message.avatar_notice'))\">\n            <img :src=\"store.account.avatar\" alt=\"\" v-show=\"store.account.avatar\">\n        </a>\n    </div>\n</template>\n\n\n<script setup>\n    import { inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter')\n</script>\n\n\n<style scoped>\n    .user\n    {\n        color: #fff;\n        font-size: 14px;\n        line-height: 17px;\n\n        display: flex;\n\n        margin-left: 40px;\n        padding: 15px 10px;\n\n        text-align: left;\n\n        border-radius: 20px;\n        background: #141414;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n    }\n\n\n    .user .icon\n    {\n        display: flex;\n\n        width: 40px;\n        height: 40px;\n        margin-right: 10px;\n\n        border-radius: 50%;\n        background: #950fff;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n\n    .user .icon svg\n    {\n        display: block;\n\n        width: 20px;\n        height: 20px;\n    }\n\n\n    .user .photo\n    {\n        color: currentColor;\n\n        position: relative;\n\n        display: block;\n        overflow: hidden;\n\n        width: 40px;\n        height: 40px;\n        margin-left: 26px;\n\n        text-decoration: none;\n\n        border-radius: 50%;\n        background: #353535;\n    }\n\n    .user .photo img\n    {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: inherit;\n\n        object-fit: cover;\n    }\n\n</style>","import script from \"./User.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./User.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./User.vue?vue&type=style&index=0&id=9ea7951e&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-9ea7951e\"]])\n\nexport default __exports__","<template>\n    <button class=\"connect_btn\" @click.prevent=\"emitter.emit('connectWallet')\">\n        <div class=\"icon\">\n            <svg><use xlink:href=\"/sprite.svg#ic_wallet\"></use></svg>\n        </div>\n\n        <span>{{ $t('message.connect_wallet_btn') }}</span>\n    </button>\n</template>\n\n\n<script setup>\n    import { inject } from 'vue'\n\n    const emitter = inject('emitter')\n</script>\n\n\n<style scoped>\n    .connect_btn\n    {\n        color: #fff;\n        font-size: 18px;\n        font-weight: 600;\n        line-height: 22px;\n\n        display: flex;\n\n        width: 243px;\n        max-width: 100%;\n        margin-left: 40px;\n        padding: 15px 10px;\n\n        text-align: left;\n\n        border-radius: 20px;\n        background: #141414;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n    }\n\n\n    .connect_btn .icon\n    {\n        display: flex;\n\n        width: 40px;\n        height: 40px;\n\n        border-radius: 50%;\n        background: #950fff;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n\n    .connect_btn .icon svg\n    {\n        display: block;\n\n        width: 18px;\n        height: 18px;\n    }\n\n\n    .connect_btn span\n    {\n        width: calc(100% - 50px);\n    }\n\n</style>","import script from \"./ConnectBtn.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ConnectBtn.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ConnectBtn.vue?vue&type=style&index=0&id=0d879b62&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0d879b62\"]])\n\nexport default __exports__","<template>\n    <header>\n        <div class=\"cont\">\n            <div class=\"info row\">\n                <div class=\"logo\">\n                    <img src=\"/logo.svg\" alt=\"\">\n                </div>\n\n                <transition name=\"fade\" mode=\"out-in\" appear type=\"animation\">\n                <IPFS />\n                </transition>\n\n                <transition name=\"fade\" mode=\"out-in\" appear type=\"animation\">\n                <Currency v-if=\"store.auth\" />\n                </transition>\n\n                <transition name=\"fade\" mode=\"out-in\" appear type=\"animation\">\n                <User v-if=\"store.auth\" />\n                </transition>\n\n                <ConnectBtn v-if=\"!store.auth\" />\n            </div>\n        </div>\n    </header>\n</template>\n\n\n<script setup>\n    import { useGlobalStore } from '@/stores'\n\n    import IPFS from '../components/header/IPFS.vue'\n    import Currency from '../components/header/Currency.vue'\n    import User from '../components/header/User.vue'\n    import ConnectBtn from '../components/header/ConnectBtn.vue'\n\n    const store = useGlobalStore()\n</script>\n\n\n<style>\n    header\n    {\n        position: fixed;\n        z-index: 90;\n        top: 0;\n        left: 0;\n\n        width: 100%;\n        padding: 20px 0;\n\n        transition: .2s linear;\n\n        background: var(--bg);\n    }\n\n\n    header .cont\n    {\n        max-width: 100%;\n        padding: 0 20px;\n    }\n\n\n    header .info\n    {\n        padding: 11px 20px;\n\n        border-radius: 42px;\n\n        align-content: center;\n        align-items: center;\n        justify-content: space-between;\n    }\n\n\n\n    header .logo\n    {\n        margin-right: auto;\n    }\n\n    header .logo img\n    {\n        display: block;\n\n        max-width: 100%;\n        height: 70px;\n    }\n\n\n\n    header.vue-sticky-element--stuck\n    {\n        padding: 0;\n\n        transform: translateY(0%) !important;\n    }\n\n</style>","import script from \"./Header.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Header.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Header.vue?vue&type=style&index=0&id=78e73859&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <!-- Header -->\n    <Header />\n\n    <!-- Router view -->\n    <RouterView />\n</template>\n\n\n<script setup>\n    import { useGlobalStore } from '@/stores'\n    import { RouterView } from 'vue-router'\n\n\n    // Components\n    import Header  from '../components/Header.vue'\n\n\n    const store = useGlobalStore()\n\n\n    // Pre connect\n    store.preConnect()\n</script>\n\n\n<style>\n.error_info\n{\n    display: flex;\n\n    padding-bottom: 100px;\n\n    text-align: center;\n\n    justify-content: center;\n    align-items: center;\n    align-content: center;\n    flex-wrap: wrap;\n    flex: 1 0 auto;\n}\n\n\n.error_info .img\n{\n    display: block;\n\n    max-width: 50%;\n    margin: 0 auto 40px;\n}\n\n\n.error_info .title\n{\n    color: #fff;\n    font-size: 52px;\n    font-weight: 600;\n    line-height: 63px;\n\n    width: 937px;\n    max-width: 100%;\n    margin-right: auto;\n    margin-left: auto;\n}\n\n\n.error_info .back_btn\n{\n    color: #fff;\n    font-size: 16px;\n    font-weight: 600;\n    line-height: 19px;\n\n    display: inline-block;\n\n    margin-top: 40px;\n    padding: 17px 30px;\n\n    transition: box-shadow .2s linear;\n    vertical-align: top;\n    text-decoration: none;\n\n    border-radius: 20px;\n    background: #950fff;\n}\n\n.error_info .back_btn:hover\n{\n    box-shadow: 2px 5px 15px rgba(149, 15, 255, .45);\n}\n\n</style>","import script from \"./Error.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Error.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Error.vue?vue&type=style&index=0&id=4f7d1860&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <section class=\"modal\" id=\"manage_modal\">\n        <transition name=\"fadeUp\" mode=\"out-in\" appear type=\"animation\">\n        <div class=\"modal_content\">\n            <div class=\"data\">\n                <div class=\"loader_wrap\" v-if=\"store.loaderManageModal\">\n                    <div class=\"loader\"><span></span></div>\n                </div>\n\n                <button class=\"close_btn\" @click.prevent=\"emitter.emit('close_manage_modal')\">\n                    <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_close\"></use></svg>\n                </button>\n\n                <form class=\"form\" @submit.prevent=\"onSubmit\">\n                    <div class=\"type\">\n                        <label @click=\"clearValidator; form.validator.name = $t('message.manage_modal_validator_name')\">\n                            <input type=\"radio\" value=\"delegate\" v-model=\"form.type\">\n                            <div>{{ $t('message.manage_modal_action_delegate') }}</div>\n                        </label>\n\n                        <label v-show=\"form.validators.length\" @click=\"clearValidator\">\n                            <input type=\"radio\" value=\"redelegate\" v-model=\"form.type\">\n                            <div>{{ $t('message.manage_modal_action_redelegate') }}</div>\n                        </label>\n                    </div>\n\n                    <div class=\"validator\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/logo_mini.svg\" alt=\"\">\n                        </div>\n\n                        <div>\n                            <div class=\"name\">\n                                {{ $t('message.manage_modal_validator_name') }}\n                            </div>\n\n                            <div class=\"commission\">\n                                {{ $t('message.manage_modal_commission') }}\n                                <span class=\"sep\">—</span>\n                                <span class=\"val\">{{ commision }}%</span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"notice\">\n                        <div class=\"title\">\n                            {{ $t('message.manage_modal_notice_title', {\n                                unbonding_time: store.networks[store.networkManageModal].unbonding_time/60/60/24\n                            }) }}\n                        </div>\n\n                        <div class=\"desc\">\n                            {{ $t('message.manage_modal_notice_desc', {\n                                currency: store.networks[store.networkManageModal].token_name,\n                                unbonding_time: store.networks[store.networkManageModal].unbonding_time/60/60/24\n                            }) }}\n                        </div>\n                    </div>\n\n                    <div class=\"tokens\">\n                        <div>\n                            <div class=\"label\">\n                                {{ $t('message.manage_modal_my_delegation') }}\n                            </div>\n\n                            <div class=\"val\">\n                                <template v-if=\"form.validator.availabel_tokens\">\n                                {{ $filters.toFixed(form.validator.availabel_tokens, 2) }}\n                                </template>\n\n                                <template v-else>\n                                {{ $filters.toFixed(store.networks[store.networkManageModal].delegations_tokens, 2) }}\n                                </template>\n\n                                {{ store.networks[store.networkManageModal].token_name }}\n                            </div>\n                        </div>\n\n                        <div>\n                            <div class=\"label\">\n                                {{ $t('message.manage_modal_available_balance') }}\n                            </div>\n\n                            <div class=\"val\">\n                                <template v-if=\"form.validator.availabel_tokens\">\n                                {{ $filters.toFixed(form.validator.availabel_tokens, 2) }}\n                                </template>\n\n                                <template v-else>\n                                {{ $filters.toFixed(store.networks[store.networkManageModal].availabel_tokens, 2) }}\n                                </template>\n\n                                {{ store.networks[store.networkManageModal].token_name }}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"validate_from\">\n                        <div class=\"label\" v-if=\"form.type == 'delegate'\">\n                            {{ $t('message.manage_modal_validator_label') }}\n                        </div>\n\n                        <div class=\"label\" v-else>\n                            {{ $t('message.manage_modal_validator_label2') }}\n                        </div>\n\n                        <div class=\"field\" v-click-out=\"hideDropdown\">\n                            <input type=\"text\" class=\"input\"\n                                :readonly=\"form.type == 'delegate'\"\n                                v-model=\"form.validator.name\"\n                                @focus.self=\"$event.target.classList.add('active')\">\n\n                            <div class=\"arr\">\n                                <svg><use xlink:href=\"/sprite.svg#ic_arr_down\"></use></svg>\n                            </div>\n\n                            <button type=\"button\" class=\"clear_btn\" @click.prevent=\"clearValidator\">\n                                <svg><use xlink:href=\"/sprite.svg#ic_close\"></use></svg>\n                            </button>\n\n                            <div class=\"dropdown\">\n                                <div class=\"scroll\">\n                                    <div v-for=\"validator in form.validators\">\n                                        <button type=\"button\" class=\"btn\" @click.stop.prevent=\"setValidator(validator)\">\n                                            {{ validator.description.moniker }}\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"amount\">\n                        <div class=\"label\">\n                            <template v-if=\"form.type == 'delegate'\">\n                            {{ $t('message.manage_modal_amount') }}\n                            </template>\n\n                            <template v-else>\n                            {{ $t('message.manage_modal_amount2') }}\n                            </template>\n                        </div>\n\n                        <div class=\"field\">\n                            <input type=\"text\" class=\"input\" v-model=\"form.amount\" @input=\"setAmount\" placeholder=\"0\">\n\n                            <div class=\"unit\">\n                                {{ store.networks[store.networkManageModal].token_name }}\n                            </div>\n\n                            <button type=\"button\" class=\"max_btn\" @click.prevent=\"setMAX\">\n                                {{ $t('message.manage_modal_max_btn') }}\n                            </button>\n                        </div>\n\n                        <div class=\"fees\">\n                            {{ $t('message.manage_modal_fees', { value: 0.01, currency: store.networks[store.networkManageModal].token_name }) }}\n                        </div>\n                    </div>\n\n                    <div class=\"btns\">\n                        <button type=\"button\" class=\"btn close_btn\" @click.prevent=\"emitter.emit('close_manage_modal')\">\n                            {{ $t('message.manage_modal_back_btn') }}\n                        </button>\n\n                        <button type=\"submit\" class=\"btn submit_btn\">\n                            <template v-if=\"form.type == 'delegate'\">\n                            {{ $t('message.manage_modal_delegate_btn') }}\n                            </template>\n\n                            <template v-if=\"form.type == 'redelegate'\">\n                            {{ $t('message.manage_modal_redelegate_btn') }}\n                            </template>\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n        </transition>\n\n\n        <transition name=\"fade\" mode=\"out-in\" appear type=\"animation\">\n        <div class=\"overlay\" @click.prevent=\"emitter.emit('close_manage_modal')\"></div>\n        </transition>\n    </section>\n</template>\n\n\n<script setup>\n    import { inject, reactive, onMounted } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { SigningStargateClient } from '@cosmjs/stargate'\n    import { createTxRaw } from '@evmos/proto'\n    import { generateEndpointBroadcast, generatePostBodyBroadcast } from '@evmos/provider'\n    import { createTxMsgDelegate, createTxMsgBeginRedelegate } from '@evmos/transactions'\n\n    const emitter = inject('emitter'),\n        store = useGlobalStore(),\n        i18n = inject('i18n'),\n        commision = 5,\n        form = reactive({\n            type: 'delegate',\n            amount: '',\n            validators: [],\n            validator: {\n                operator_address: '',\n                availabel_tokens: 0,\n                name: i18n.global.t('message.manage_modal_validator_name')\n            }\n        })\n\n\n    onMounted(async () => {\n        // Get validators for redelegate\n        if(store.showManageModal){\n            await fetch(`${store.networks[store.networkManageModal].lcd_api}/cosmos/staking/v1beta1/delegators/${store.wallets[store.networkManageModal]}/validators`)\n                .then(response => response.json())\n                .then(data => {\n\n                    let result = data.validators.filter(el => {\n                        if(el.operator_address != store.networks[store.networkManageModal].validator) {\n                            return el\n                        }\n                    })\n\n                    if(result.length){\n                        form.validators = result\n                    }\n                })\n        }\n    })\n\n\n    // Clear validator info\n    function clearValidator() {\n        form.validator.operator_address = ''\n        form.validator.name = ''\n        form.validator.availabel_tokens = 0\n    }\n\n\n    // Hide dropdown\n    function hideDropdown() {\n        setTimeout(() => document.querySelector('#manage_modal .validate_from .input').classList.remove('active'), 150)\n    }\n\n\n    // Set validator info\n    function setValidator(validator) {\n        form.validator.operator_address = validator.operator_address\n        form.validator.name = validator.description.moniker\n        form.validator.availabel_tokens = store.networks[store.networkManageModal].delegations[validator.operator_address]\n\n        form.amount = form.validator.availabel_tokens - 0.01\n\n        hideDropdown()\n    }\n\n\n    // Set Amount\n    function setAmount(event) {\n        if(form.validator.availabel_tokens) {\n            if(event.target.value > form.validator.availabel_tokens){\n                form.amount = form.validator.availabel_tokens - 0.01\n            }\n        } else {\n            if(event.target.value > store.networks[store.networkManageModal].availabel_tokens){\n                form.amount = store.networks[store.networkManageModal].availabel_tokens - 0.01\n            }\n        }\n    }\n\n\n    // Set MAX\n    function setMAX() {\n        form.validator.operator_address\n            ? form.amount = form.validator.availabel_tokens - 0.01\n            : form.amount = store.networks[store.networkManageModal].availabel_tokens - 0.01\n    }\n\n\n    // Submit form\n    async function onSubmit() {\n            // Stargate\n            if(form.amount > 0) {\n                // Enable loader\n                store.loaderManageModal = !store.loaderManageModal\n\n                // Delegate\n                if(form.type == 'delegate') {\n                    if(store.networkManageModal == 'evmos'){\n                        try {\n                            // Create request\n                            await fetch(`${store.networks.evmos.lcd_api}/cosmos/auth/v1beta1/accounts/${store.wallets.evmos}`)\n                                .then(response => response.json())\n                                .then(async data => {\n                                    const chain = {\n                                        chainId: 9001,\n                                        cosmosChainId: store.networks.evmos.chainId,\n                                    },\n                                    sender = {\n                                        accountAddress: store.wallets.evmos,\n                                        sequence: data.account.base_account.sequence,\n                                        accountNumber: data.account.base_account.account_number,\n                                        pubkey: data.account.base_account.pub_key.key,\n                                    },\n                                    fee = {\n                                        amount: '0',\n                                        denom: store.networks.evmos.denom,\n                                        gas: store.networks.evmos.gas,\n                                    },\n                                    params = {\n                                        validatorAddress: store.networks.evmos.validator,\n                                        amount: `${form.amount * store.networks.evmos.exponent}`,\n                                        denom: store.networks.evmos.denom,\n                                    }\n\n                                    const msg = createTxMsgDelegate(chain, sender, fee, '', params)\n\n                                    let sign = await window?.keplr?.signDirect(\n                                        store.networks.evmos.chainId,\n                                        sender.accountAddress,\n                                        {\n                                            bodyBytes: msg.signDirect.body.serializeBinary(),\n                                            authInfoBytes: msg.signDirect.authInfo.serializeBinary(),\n                                            chainId: store.networks.evmos.chainId,\n                                            accountNumber: sender.accountNumber,\n                                        },\n                                        { isEthereum: true }\n                                    )\n\n                                    let rawTx = createTxRaw(sign.signed.bodyBytes, sign.signed.authInfoBytes, [\n                                        new Uint8Array(Buffer.from(sign.signature.signature, 'base64'))\n                                    ])\n\n                                    // Broadcast it\n                                    const postOptions = {\n                                        method: 'POST',\n                                        headers: { 'Content-Type': 'application/json' },\n                                        body: generatePostBodyBroadcast(rawTx),\n                                    }\n\n                                    let broadcastPost = await fetch(`https://lcd.evmos-9001-2.bronbro.io${generateEndpointBroadcast()}`, postOptions)\n\n                                    let response = await broadcastPost.json()\n\n                                    if(response.tx_response.code != 0){\n                                        // Get error title\n                                        store.manageError = i18n.global.t(`message.manage_modal_error_${response.tx_response.code}`)\n\n                                        // Disable loader\n                                        store.loaderManageModal = !store.loaderManageModal\n\n                                        // Open error modal\n                                        emitter.emit('close_manage_modal')\n                                        emitter.emit('open_manage_error_modal')\n\n                                        return false\n                                    }\n\n                                    // Disable loader\n                                    store.loaderManageModal = !store.loaderManageModal\n\n                                    // Set TXS\n                                    store.lastTXS = response.tx_response.txhash\n\n                                    // Open success modal\n                                    emitter.emit('close_manage_modal')\n                                    emitter.emit('open_manage_success_modal')\n\n                                    // Update network\n                                    setTimeout(() => store.updateNetwork(store.networkManageModal), 4000)\n                                })\n                        } catch (error) {\n                            // Get error title\n                            store.manageError = i18n.global.t('message.manage_modal_error_rejected')\n\n                            // Disable loader\n                            store.loaderManageModal = !store.loaderManageModal\n\n                            // Open error modal\n                            emitter.emit('close_manage_modal')\n                            emitter.emit('open_manage_error_modal')\n                        }\n                    } else {\n                        try {\n                            // Create request\n                            const offlineSigner = window.getOfflineSigner(store.networks[store.networkManageModal].chainId),\n                                rpcEndpoint = store.networks[store.networkManageModal].rpc_api,\n                                gasPrice = [{\n                                    denom: store.networks[store.networkManageModal].denom,\n                                    amount: '0'\n                                }],\n                                client = await SigningStargateClient.connectWithSigner(rpcEndpoint, offlineSigner, { gasPrice }),\n                                msgAny = {\n                                    typeUrl: '/cosmos.staking.v1beta1.MsgDelegate',\n                                    value: {\n                                        delegatorAddress: store.wallets[store.networkManageModal],\n                                        validatorAddress: store.networks[store.networkManageModal].validator,\n                                        amount: {\n                                            denom: store.networks[store.networkManageModal].denom,\n                                            amount: `${form.amount * store.networks[store.networkManageModal].exponent}`\n                                        }\n                                    }\n                                }\n\n                            if(store.networkManageModal != 'emoney'){\n                                const gasUsed = await client.simulate(store.wallets[store.networkManageModal], [msgAny])\n                            }\n\n                            const fee = {\n                                amount: gasPrice,\n                                gas: store.networkManageModal != 'emoney' ? `${gasUsed}` : store.networks.emoney.gas\n                            }\n\n                            const result = await client.signAndBroadcast(store.wallets[store.networkManageModal], [msgAny], fee)\n\n                            // Disable loader\n                            store.loaderManageModal = !store.loaderManageModal\n\n                            // Set TXS\n                            store.lastTXS = result.transactionHash\n\n                            // Open success modal\n                            emitter.emit('close_manage_modal')\n                            emitter.emit('open_manage_success_modal')\n\n                            // Update network\n                            setTimeout(() => store.updateNetwork(store.networkManageModal), 4000)\n                        } catch (error) {\n                            // Get error code\n                            let errorCode = error.message.match(/code (\\d+(\\.\\d)*)/i)\n\n                            // Get error title\n                            errorCode\n                                ? store.manageError = i18n.global.t(`message.manage_modal_error_${errorCode[1]}`)\n                                : store.manageError = i18n.global.t('message.manage_modal_error_rejected')\n\n                            // Disable loader\n                            store.loaderManageModal = !store.loaderManageModal\n\n                            // Open error modal\n                            emitter.emit('close_manage_modal')\n                            emitter.emit('open_manage_error_modal')\n                        }\n                    }\n                }\n\n\n                // Redelegate\n                if(form.type == 'redelegate') {\n                    if(store.networkManageModal == 'evmos'){\n                        try {\n                            // Create request\n                            fetch(`${store.networks.evmos.lcd_api}/cosmos/auth/v1beta1/accounts/${store.wallets.evmos}`)\n                                .then(response => response.json())\n                                .then(async data => {\n                                    const chain = {\n                                        chainId: 9001,\n                                        cosmosChainId: store.networks.evmos.chainId,\n                                    },\n                                    sender = {\n                                        accountAddress: store.wallets.evmos,\n                                        sequence: data.account.base_account.sequence,\n                                        accountNumber: data.account.base_account.account_number,\n                                        pubkey: data.account.base_account.pub_key.key,\n                                    },\n                                    fee = {\n                                        amount: '0',\n                                        denom: store.networks.evmos.denom,\n                                        gas: store.networks.evmos.gas,\n                                    },\n                                    params = {\n                                        validatorSrcAddress: form.validator.operator_address,\n                                        validatorDstAddress: store.networks.evmos.validator,\n                                        amount: `${form.amount * store.networks.evmos.exponent}`,\n                                        denom: store.networks.evmos.denom,\n                                    }\n\n                                    const msg = createTxMsgBeginRedelegate(chain, sender, fee, '', params)\n\n                                    let sign = await window?.keplr?.signDirect(\n                                        store.networks.evmos.chainId,\n                                        sender.accountAddress,\n                                        {\n                                            bodyBytes: msg.signDirect.body.serializeBinary(),\n                                            authInfoBytes: msg.signDirect.authInfo.serializeBinary(),\n                                            chainId: store.networks.evmos.chainId,\n                                            accountNumber: sender.accountNumber,\n                                        },\n                                        { isEthereum: true }\n                                    )\n\n                                    let rawTx = createTxRaw(sign.signed.bodyBytes, sign.signed.authInfoBytes, [\n                                        new Uint8Array(Buffer.from(sign.signature.signature, 'base64'))\n                                    ])\n\n                                    // Broadcast it\n                                    const postOptions = {\n                                        method: 'POST',\n                                        headers: { 'Content-Type': 'application/json' },\n                                        body: generatePostBodyBroadcast(rawTx),\n                                    }\n\n                                    let broadcastPost = await fetch(`https://lcd.evmos-9001-2.bronbro.io${generateEndpointBroadcast()}`, postOptions)\n\n                                    let response = await broadcastPost.json()\n\n                                    if(response.tx_response.code != 0){\n                                        // Get error title\n                                        store.manageError = i18n.global.t(`message.manage_modal_error_${response.tx_response.code}`)\n\n                                        // Disable loader\n                                        store.loaderManageModal = !store.loaderManageModal\n\n                                        // Open error modal\n                                        emitter.emit('close_manage_modal')\n                                        emitter.emit('open_manage_error_modal')\n\n                                        return false\n                                    }\n\n                                    // Disable loader\n                                    store.loaderManageModal = !store.loaderManageModal\n\n                                    // Set TXS\n                                    store.lastTXS = response.tx_response.txhash\n\n                                    // Open success modal\n                                    emitter.emit('close_manage_modal')\n                                    emitter.emit('open_manage_success_modal')\n\n                                    // Update network\n                                    setTimeout(() => store.updateNetwork(store.networkManageModal), 4000)\n                                })\n                        } catch (error) {\n                            console.log(error)\n                        }\n                    } else {\n                        try {\n                            // Create request\n                            const offlineSigner = window.getOfflineSigner(store.networks[store.networkManageModal].chainId),\n                                rpcEndpoint = store.networks[store.networkManageModal].rpc_api,\n                                gasPrice = [{\n                                    denom: store.networks[store.networkManageModal].denom,\n                                    amount: '0'\n                                }],\n                                client = await SigningStargateClient.connectWithSigner(rpcEndpoint, offlineSigner, { gasPrice }),\n                                msgAny = {\n                                    typeUrl: '/cosmos.staking.v1beta1.MsgBeginRedelegate',\n                                    value: {\n                                        delegatorAddress: store.wallets[store.networkManageModal],\n                                        validatorSrcAddress: form.validator.operator_address,\n                                        validatorDstAddress: store.networks[store.networkManageModal].validator,\n                                        amount: {\n                                            denom: store.networks[store.networkManageModal].denom,\n                                            amount: `${form.amount * store.networks[store.networkManageModal].exponent}`\n                                        }\n                                    }\n                                }\n\n                            if(store.networkManageModal != 'emoney'){\n                                const gasUsed = await client.simulate(store.wallets[store.networkManageModal], [msgAny])\n                            }\n\n                            const fee = {\n                                amount: gasPrice,\n                                gas: store.networkManageModal != 'emoney' ? `${gasUsed}` : store.networks.emoney.gas\n                            }\n\n                            const result = await client.signAndBroadcast(store.wallets[store.networkManageModal], [msgAny], fee)\n\n                            if(result.code != 0){\n                                // Get error title\n                                store.manageError = i18n.global.t(`message.manage_modal_error_${result.code}`)\n\n                                // Disable loader\n                                store.loaderManageModal = !store.loaderManageModal\n\n                                // Open error modal\n                                emitter.emit('close_manage_modal')\n                                emitter.emit('open_manage_error_modal')\n\n                                return false\n                            }\n\n                            // Disable loader\n                            store.loaderManageModal = !store.loaderManageModal\n\n                            // Set TXS\n                            store.lastTXS = result.transactionHash\n\n                            // Open success modal\n                            emitter.emit('close_manage_modal')\n                            emitter.emit('open_manage_success_modal')\n\n                            // Update network\n                            setTimeout(() => store.updateNetwork(store.networkManageModal), 4000)\n                        } catch (error) {\n                            // Get error code\n                            let errorCode = error.message.match(/code (\\d+(\\.\\d)*)/i)\n\n                            // Get error title\n                            errorCode\n                                ? store.manageError = i18n.global.t(`message.manage_modal_error_${errorCode[1]}`)\n                                : store.manageError = i18n.global.t('message.manage_modal_error_rejected')\n\n                            // Disable loader\n                            store.loaderManageModal = !store.loaderManageModal\n\n                            // Open error modal\n                            emitter.emit('close_manage_modal')\n                            emitter.emit('open_manage_error_modal')\n                        }\n                    }\n                }\n            }\n    }\n</script>\n\n\n<style>\n    #manage_modal .type\n    {\n        display: flex;\n\n        margin-bottom: 22px;\n        margin-left: -8px;\n        padding-right: 60px;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-start;\n    }\n\n    #manage_modal .type > *\n    {\n        margin-bottom: 8px;\n        margin-left: 8px;\n    }\n\n\n    #manage_modal .type label\n    {\n        color: #fff;\n        font-size: 14px;\n        font-weight: 500;\n        line-height: 17px;\n\n        display: block;\n\n        cursor: pointer;\n    }\n\n\n    #manage_modal .type input\n    {\n        display: none;\n    }\n\n\n    #manage_modal .type label div\n    {\n        padding: 13px;\n\n        transition: .2s linear;\n\n        border: 1px solid;\n        border-radius: 14px;\n        background: #191919;\n    }\n\n\n    #manage_modal .type label input:checked + div\n    {\n        color: #000;\n\n        background: #fff;\n    }\n\n\n    #manage_modal .validator\n    {\n        display: flex;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n    }\n\n\n    #manage_modal .validator .logo\n    {\n        display: flex;\n\n        width: 65px;\n        height: 58px;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n\n    #manage_modal .validator .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n    }\n\n    #manage_modal .validator .logo + *\n    {\n        width: calc(100% - 73px);\n    }\n\n\n    #manage_modal .validator .name\n    {\n        font-size: 30px;\n        font-weight: 700;\n        line-height: 36px;\n    }\n\n\n    #manage_modal .validator .commission\n    {\n        color: #8e8e8e;\n        font-size: 12px;\n        line-height: 15px;\n\n        margin-top: 4px;\n    }\n\n    #manage_modal .validator .commission .sep,\n    #manage_modal .validator .commission .val\n    {\n        color: #fff;\n        font-weight: 600;\n\n        margin-left: 6px;\n    }\n\n\n    #manage_modal .notice\n    {\n        margin-top: 20px;\n        padding: 14px;\n\n        text-align: center;\n\n        border-radius: 17px;\n        background: #191919;\n    }\n\n\n    #manage_modal .notice .title\n    {\n        font-weight: 600;\n        line-height: 19px;\n\n        margin-bottom: 6px;\n    }\n\n\n    #manage_modal .notice .desc\n    {\n        color: #8e8e8e;\n        font-size: 12px;\n        line-height: 130%;\n\n        width: 324px;\n        max-width: 100%;\n        margin: 0 auto;\n    }\n\n\n    #manage_modal .tokens\n    {\n        margin-top: 26px;\n    }\n\n\n    #manage_modal .tokens > *\n    {\n        display: flex;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: space-between;\n    }\n\n    #manage_modal .tokens > * + *\n    {\n        margin-top: 16px;\n    }\n\n\n    #manage_modal .tokens .label\n    {\n        color: #8e8e8e;\n        font-size: 14px;\n        line-height: 17px;\n    }\n\n\n    #manage_modal .tokens .val\n    {\n        font-weight: 600;\n\n        white-space: nowrap;\n\n        font-feature-settings: 'pnum' on, 'lnum' on;\n    }\n\n\n    #manage_modal .amount\n    {\n        margin-top: 30px;\n    }\n\n\n    #manage_modal .amount .label\n    {\n        color: #8e8e8e;\n        font-size: 14px;\n        line-height: 17px;\n\n        margin-bottom: 16px;\n    }\n\n\n    #manage_modal .amount .field\n    {\n        position: relative;\n    }\n\n\n    #manage_modal .amount .input\n    {\n        color: currentColor;\n        font-family: var(--font_family);\n        font-size: var(--font_size);\n        font-weight: 500;\n\n        display: block;\n\n        width: 100%;\n        height: 55px;\n        padding: 0 154px 2px 9px;\n\n        transition: border-color .2s linear;\n\n        border: 1px solid rgba(255, 255, 255, .05);\n        border-radius: 17px;\n        background: none;\n\n        font-feature-settings: 'pnum' on, 'lnum' on;\n    }\n\n    #manage_modal .amount .input:focus\n    {\n        border-color: #950fff;\n    }\n\n\n    #manage_modal .amount .unit\n    {\n        color: #8e8e8e;\n        line-height: 19px;\n\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 80px;\n        bottom: 0;\n\n        height: 19px;\n        margin: auto;\n\n        white-space: nowrap;\n        text-transform: uppercase;\n    }\n\n\n    #manage_modal .amount .max_btn\n    {\n        line-height: 19px;\n\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 10px;\n        bottom: 0;\n\n        display: block;\n\n        width: 60px;\n        height: 39px;\n        margin: auto;\n\n        transition: .2s linear;\n        text-transform: uppercase;\n\n        border: 1px solid #fff;\n        border-radius: 14px;\n    }\n\n    #manage_modal .amount .max_btn:hover\n    {\n        color: #000;\n\n        border-color: #fff;\n        background: #fff;\n    }\n\n\n    #manage_modal .validate_from\n    {\n        margin-top: 30px;\n    }\n\n\n    #manage_modal .validate_from .label\n    {\n        color: #8e8e8e;\n        font-size: 14px;\n        line-height: 17px;\n\n        margin-bottom: 16px;\n    }\n\n\n    #manage_modal .validate_from .field\n    {\n        position: relative;\n    }\n\n\n    #manage_modal .validate_from .input\n    {\n        color: currentColor;\n        font-family: var(--font_family);\n        font-size: var(--font_size);\n        font-weight: 500;\n\n        display: block;\n\n        width: 100%;\n        height: 55px;\n        padding: 0 77px 3px 9px;\n\n        transition: border-color .2s linear;\n\n        border: 1px solid rgba(255, 255, 255, .05);\n        border-radius: 17px;\n        background: none;\n    }\n\n    #manage_modal .validate_from .input:read-only\n    {\n        pointer-events: none;\n    }\n\n    #manage_modal .validate_from .input:focus\n    {\n        border-color: #950fff;\n    }\n\n\n    #manage_modal .validate_from .arr\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 44px;\n        bottom: 0;\n\n        display: flex;\n\n        width: 24px;\n        height: 24px;\n        margin: auto;\n\n        pointer-events: none;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n\n    #manage_modal .validate_from .arr svg\n    {\n        display: block;\n\n        width: 20px;\n        height: 20px;\n    }\n\n    #manage_modal .validate_from .input:read-only ~ .arr\n    {\n        display: none;\n    }\n\n\n    #manage_modal .validate_from .clear_btn\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 10px;\n        bottom: 0;\n\n        display: flex;\n\n        width: 24px;\n        height: 24px;\n        margin: auto;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n\n    #manage_modal .validate_from .clear_btn svg\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n    }\n\n    #manage_modal .validate_from .input:read-only ~ .clear_btn\n    {\n        display: none;\n    }\n\n\n    #manage_modal .validate_from .dropdown\n    {\n        position: absolute;\n        z-index: 5;\n        top: 100%;\n        left: 0;\n\n        display: none;\n\n        width: 100%;\n        margin-top: 10px;\n        padding: 6px 4px;\n\n        border-radius: 10px;\n        background: #101010;\n    }\n\n    #manage_modal .validate_from .input.active ~ .dropdown\n    {\n        display: block;\n    }\n\n\n    #manage_modal .validate_from .dropdown .scroll\n    {\n        overflow: auto;\n\n        max-height: 128px;\n        padding-right: 4px;\n    }\n\n    #manage_modal .validate_from .dropdown .scroll::-webkit-scrollbar\n    {\n        width: 4px;\n        height: 4px;\n\n        border-radius: 5px;\n    }\n\n    #manage_modal .validate_from .dropdown .scroll > * + *\n    {\n        margin-top: 4px;\n    }\n\n\n    #manage_modal .validate_from .dropdown .btn\n    {\n        font-size: 14px;\n        line-height: 17px;\n\n        display: block;\n\n        width: 100%;\n        padding: 6px;\n\n        transition: background .2s linear;\n        text-align: left;\n        pointer-events: auto;\n\n        border-radius: 8px;\n    }\n\n    #manage_modal .validate_from .dropdown .btn:hover,\n    #manage_modal .validate_from .dropdown .btn.active\n    {\n        background: #191919;\n    }\n\n\n    #manage_modal .fees\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 17px;\n\n        margin-top: 10px;\n\n        font-feature-settings: 'pnum' on, 'lnum' on;\n    }\n\n\n    #manage_modal .btns\n    {\n        display: flex;\n\n        margin-top: 30px;\n        margin-bottom: -10px;\n        margin-left: -10px;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: flex-end;\n    }\n\n    #manage_modal .btns > *\n    {\n        margin-bottom: 10px;\n        margin-left: 10px;\n    }\n\n\n    #manage_modal .btns .btn\n    {\n        color: #fff;\n        font-weight: 500;\n        line-height: 19px;\n\n        display: block;\n\n        padding: 13px;\n\n        transition: .2s linear;\n\n        border: 1px solid #353535;\n        border-radius: 16px;\n    }\n\n\n    #manage_modal .btns .btn:hover\n    {\n        color: #000;\n\n        border-color: #fff;\n        background: #fff;\n    }\n\n\n    #manage_modal .btns .btn.submit_btn\n    {\n        color: #fff;\n\n        border-color: #950fff;\n        background: #950fff;\n    }\n\n</style>","import script from \"./ManageModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ManageModal.vue?vue&type=style&index=0&id=123268ea&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <section class=\"modal success\" id=\"success_modal\">\n        <transition name=\"fadeUp\" mode=\"out-in\" appear type=\"animation\">\n        <div class=\"modal_content\">\n            <div class=\"data\">\n                <button class=\"close_btn\" @click.prevent=\"emitter.emit('close_manage_success_modal')\">\n                    <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_close\"></use></svg>\n                </button>\n\n                <div class=\"icon\">\n                    <img src=\"../assets/images/success_modal.svg\" alt=\"\">\n                </div>\n\n                <div class=\"title\" v-html=\"$t('message.manage_modal_success_title', { network: store.networkManageModal, hash: store.lastTXS })\"></div>\n\n                <div class=\"btns\">\n                    <div><button class=\"btn close_btn\" @click.prevent=\"emitter.emit('close_manage_success_modal')\">\n                        {{ $t('message.manage_modal_success_back_btn') }}\n                    </button></div>\n                </div>\n            </div>\n        </div>\n        </transition>\n\n        <transition name=\"fade\" mode=\"out-in\" appear type=\"animation\">\n        <div class=\"overlay\" @click.prevent=\"emitter.emit('close_manage_success_modal')\"></div>\n        </transition>\n    </section>\n</template>\n\n\n<script setup>\n    import { inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n\n    const emitter = inject('emitter'),\n        store = useGlobalStore()\n</script>","import script from \"./ManageSuccessModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageSuccessModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <section class=\"modal success\" id=\"success_modal\">\n        <transition name=\"fadeUp\" mode=\"out-in\" appear type=\"animation\">\n        <div class=\"modal_content\">\n            <div class=\"data\">\n                <button class=\"close_btn\" @click.prevent=\"emitter.emit('close_manage_error_modal')\">\n                    <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_close\"></use></svg>\n                </button>\n\n                <div class=\"icon\">\n                    <img src=\"../assets/images/error_modal.svg\" alt=\"\">\n                </div>\n\n                <div class=\"title\">\n                    {{ store.manageError }}\n                </div>\n\n                <div class=\"btns\">\n                    <div><button class=\"btn close_btn\" @click.prevent=\"tryAgain\">\n                        {{ $t('message.manage_modal_again_btn') }}\n                    </button></div>\n                </div>\n            </div>\n        </div>\n        </transition>\n\n        <transition name=\"fade\" mode=\"out-in\" appear type=\"animation\">\n        <div class=\"overlay\" @click.prevent=\"emitter.emit('close_manage_error_modal')\"></div>\n        </transition>\n    </section>\n</template>\n\n\n<script setup>\n    import { inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n\n    const emitter = inject('emitter'),\n        store = useGlobalStore()\n\n\n    // Back to manage modal\n    function tryAgain() {\n        emitter.emit('close_manage_error_modal')\n        emitter.emit('open_manage_modal')\n    }\n</script>","import script from \"./ManageErrorModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ManageErrorModal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","const config = {\n    chainId: 'desmos-mainnet',\n    chainName: 'desmos',\n    rpc: 'https://rpc.mainnet.desmos.network',\n    rest: 'https://api.mainnet.desmos.network',\n    bip44: {\n        coinType: 852,\n    },\n    bech32Config: {\n        bech32PrefixAccAddr: 'desmos',\n        bech32PrefixAccPub: 'desmos' + 'pub',\n        bech32PrefixValAddr: 'desmos' + 'valoper',\n        bech32PrefixValPub: 'desmos' + 'valoperpub',\n        bech32PrefixConsAddr: 'desmos' + 'valcons',\n        bech32PrefixConsPub: 'desmos' + 'valconspub',\n    },\n    currencies: [\n        {\n            coinDenom: 'DSM',\n            coinMinimalDenom: 'udsm',\n            coinDecimals: 6,\n            coinGeckoId: 'cosmos',\n        },\n    ],\n    feeCurrencies: [\n        {\n            coinDenom: 'DSM',\n            coinMinimalDenom: 'udsm',\n            coinDecimals: 6,\n            coinGeckoId: 'desmos',\n            gasPriceStep: {\n                low: 0.001,\n                average: 0.025,\n                high: 0.04,\n            },\n        },\n    ],\n    stakeCurrency: {\n        coinDenom: 'DSM',\n        coinMinimalDenom: 'udsm',\n        coinDecimals: 6,\n        coinGeckoId: 'desmos',\n    }\n}\n\nexport default config","const config = {\n    chainId: 'crescent-1',\n    chainName: 'crescent',\n    rpc: 'https://mainnet.crescent.network:26657',\n    rest: 'https://mainnet.crescent.network:1317',\n    bip44: {\n        coinType: 118,\n    },\n    bech32Config: {\n        bech32PrefixAccAddr: 'cre',\n        bech32PrefixAccPub: 'cre' + 'pub',\n        bech32PrefixValAddr: 'cre' + 'valoper',\n        bech32PrefixValPub: 'cre' + 'valoperpub',\n        bech32PrefixConsAddr: 'cre' + 'valcons',\n        bech32PrefixConsPub: 'cre' + 'valconspub',\n    },\n    currencies: [\n        {\n            coinDenom: 'CRE',\n            coinMinimalDenom: 'ucre',\n            coinDecimals: 6,\n            coinGeckoId: 'crescent-network',\n        },\n    ],\n    feeCurrencies: [\n        {\n            coinDenom: 'CRE',\n            coinMinimalDenom: 'ucre',\n            coinDecimals: 6,\n            coinGeckoId: 'crescent-network',\n            gasPriceStep: {\n                low: 0.001,\n                average: 0.025,\n                high: 0.04,\n            },\n        },\n    ],\n    stakeCurrency: {\n        coinDenom: 'CRE',\n        coinMinimalDenom: 'ucre',\n        coinDecimals: 6,\n        coinGeckoId: 'crescent-network',\n    }\n}\n\nexport default config","const config = {\n    chainId: 'omniflixhub-1',\n    chainName: 'omniflixhub',\n    rpc: 'https://omniflixhub-rpc.skynetvalidators.com',\n    rest: 'https://omniflixhub-api.skynetvalidators.com',\n    bip44: {\n        coinType: 118,\n    },\n    bech32Config: {\n        bech32PrefixAccAddr: 'omniflix',\n        bech32PrefixAccPub: 'omniflix' + 'pub',\n        bech32PrefixValAddr: 'omniflix' + 'valoper',\n        bech32PrefixValPub: 'omniflix' + 'valoperpub',\n        bech32PrefixConsAddr: 'omniflix' + 'valcons',\n        bech32PrefixConsPub: 'omniflix' + 'valconspub',\n    },\n    currencies: [\n        {\n            coinDenom: 'FLIX',\n            coinMinimalDenom: 'uflix',\n            coinDecimals: 6,\n            coinGeckoId: 'omniflix-network',\n        },\n    ],\n    feeCurrencies: [\n        {\n            coinDenom: 'FLIX',\n            coinMinimalDenom: 'uflix',\n            coinDecimals: 6,\n            coinGeckoId: 'omniflix-network',\n            gasPriceStep: {\n                low: 0.001,\n                average: 0.025,\n                high: 0.04,\n            },\n        },\n    ],\n    stakeCurrency: {\n        coinDenom: 'FLIX',\n        coinMinimalDenom: 'uflix',\n        coinDecimals: 6,\n        coinGeckoId: 'omniflix-network',\n    }\n}\n\nexport default config","<template>\n    <!-- Header -->\n    <Header />\n\n    <!-- Notifications -->\n    <transition name=\"fade\" mode=\"out-in\" appear type=\"animation\">\n    <section class=\"notifications\">\n        <div class=\"cont\">\n            <div class=\"data\">\n                <div class=\"icon\">\n                    <svg><use xlink:href=\"/sprite.svg#ic_notification\"></use></svg>\n                </div>\n\n                <span>{{ store.tooltip }}</span>\n            </div>\n        </div>\n    </section>\n    </transition>\n\n    <!-- Router view -->\n    <RouterView />\n\n    <!-- Manage modal -->\n    <ManageModal v-if=\"store.showManageModal\" />\n\n    <!-- Manage success modal -->\n    <ManageSuccessModal v-if=\"store.showManageSuccessModal\" />\n\n    <!-- Manage error modal -->\n    <ManageErrorModal v-if=\"store.showManageErrorModal\" />\n</template>\n\n\n<script setup>\n    import { inject, onMounted } from 'vue'\n    import { RouterView } from 'vue-router'\n    import { useGlobalStore } from '@/stores'\n    import { fromBech32, toBech32 } from '@cosmjs/encoding'\n\n    // Components\n    import Header  from '../components/Header.vue'\n    import ManageModal  from '../components/ManageModal.vue'\n    import ManageSuccessModal  from '../components/ManageSuccessModal.vue'\n    import ManageErrorModal  from '../components/ManageErrorModal.vue'\n\n    // Config\n    import desmosConfig from '@/config/chain/desmos'\n    import crescentConfig from '@/config/chain/crescent'\n    import omniflixConfig from '@/config/chain/omniflix'\n\n\n    const emitter = inject('emitter'),\n        i18n = inject('i18n'),\n        store = useGlobalStore()\n\n\n    onMounted(() => {\n        // Set default notification\n        store.tooltip = i18n.global.t('message.notice_default')\n\n\n        // Change Keplr account\n        window.addEventListener('keplr_keystorechange', () => {\n            store.reset()\n            emitter.emit('connectWallet')\n        })\n\n\n        // Refresh page\n        if(store.auth && store.recalc){\n            emitter.emit('connectWallet')\n        }\n\n\n        // Sticky notification\n        const notificatios = document.querySelector('.notifications')\n\n        notificatios.stickyEvent = () => {\n            setTimeout(() => {\n                window.scrollY > 32\n                    ? notificatios.classList.add('stuck')\n                    : notificatios.classList.remove('stuck')\n            })\n        }\n\n\n        // Scroll event\n        document.addEventListener('scroll', notificatios.stickyEvent)\n    })\n\n\n    // Event \"connect wallet\"\n    emitter.on('connectWallet', async () => {\n        // Pre connect\n        await store.preConnect()\n\n\n        // Get currencies price\n        let promiseCurrencies = store.getCurrenciesPrice()\n\n\n        // Get networks info\n        promiseCurrencies.then(store.getNetworksInfo())\n\n\n        //======== Evmos\n        try{\n            // Singer\n            const offlineSignerEvmos = window.getOfflineSigner(store.networks.evmos.chainId),\n                accountsEvmos = await offlineSignerEvmos.getAccounts()\n\n            // Set wallet address\n            store.setWallet('evmos', accountsEvmos[0].address)\n\n            // Get status\n            store.getNetworkStatus('evmos')\n\n            // Get network tokens\n            store.getNetworkTokens('evmos').then(() => {\n                // Calc network tokens sum\n                store.calcNetworkTokensSum('evmos')\n\n                if(store.networks.evmos.status){\n                    // Get network data\n                    let promiseData = store.getNetworkData('evmos')\n\n                    Promise.all([promiseData, promiseCurrencies]).then(() => {\n                        // Calc network RPDE\n                        store.calcNetworkRPDEInCurrency('evmos')\n\n                        // Calc network balance\n                        store.calcNetworkBalance('evmos')\n\n                        // Calc delegations price\n                        store.calcDelegationsPrice('evmos')\n\n                        // Calc rewards price\n                        store.calcRewardsPrice('evmos')\n\n                        // Update account balance\n                        store.updateAccountBalance()\n                    })\n                }\n            })\n        } catch(error) {\n            console.log(error)\n        }\n\n\n        //======== JUNO\n        // Set wallet address\n        store.setWallet('juno', toBech32('juno', fromBech32(store.wallets.cosmoshub).data))\n\n        // Get status\n        store.getNetworkStatus('juno')\n\n        // Get network tokens\n        store.getNetworkTokens('juno').then(() => {\n            // Calc network tokens sum\n            store.calcNetworkTokensSum('juno')\n\n            if(store.networks.juno.status){\n                // Get network data\n                let junoData = store.getNetworkData('juno')\n\n                Promise.all([junoData, promiseCurrencies]).then(() => {\n                    // Calc network RPDE\n                    store.calcNetworkRPDEInCurrency('juno')\n\n                    // Calc network balance\n                    store.calcNetworkBalance('juno')\n\n                    // Calc delegations price\n                    store.calcDelegationsPrice('juno')\n\n                    // Calc rewards price\n                    store.calcRewardsPrice('juno')\n\n                    // Update account balance\n                    store.updateAccountBalance()\n                })\n            }\n        })\n\n\n        //======== Cosmos hub\n        // Get status\n        store.getNetworkStatus('cosmoshub')\n\n        // Get network tokens\n        store.getNetworkTokens('cosmoshub').then(() => {\n            // Calc network tokens sum\n            store.calcNetworkTokensSum('cosmoshub')\n\n            if(store.networks.cosmoshub.status){\n                // Get network data\n                let cosmoshubData = store.getNetworkData('cosmoshub')\n\n                Promise.all([cosmoshubData, promiseCurrencies]).then(() => {\n                    // Calc network RPDE\n                    store.calcNetworkRPDEInCurrency('cosmoshub')\n\n                    // Calc network balance\n                    store.calcNetworkBalance('cosmoshub')\n\n                    // Calc delegations price\n                    store.calcDelegationsPrice('cosmoshub')\n\n                    // Calc rewards price\n                    store.calcRewardsPrice('cosmoshub')\n\n                    // Update account balance\n                    store.updateAccountBalance()\n                })\n            }\n        })\n\n\n        //======== Bostrom\n        // Get status\n        store.getNetworkStatus('bostrom')\n\n        // Get network tokens\n        store.getNetworkTokens('bostrom').then(() => {\n            // Calc network tokens sum\n            store.calcNetworkTokensSum('bostrom')\n\n            if(store.networks.bostrom.status){\n\n                // Get network data\n                let bostromData = store.getNetworkData('bostrom')\n\n                Promise.all([bostromData, promiseCurrencies]).then(() => {\n                    // Calc network RPDE\n                    store.calcNetworkRPDEInCurrency('bostrom')\n\n                    // Calc network balance\n                    store.calcNetworkBalance('bostrom')\n\n                    // Calc delegations price\n                    store.calcDelegationsPrice('bostrom')\n\n                    // Calc rewards price\n                    store.calcRewardsPrice('bostrom')\n\n                    // Update account balance\n                    store.updateAccountBalance()\n                })\n            }\n        })\n\n\n        //======== Osmosis\n        // Set wallet address\n        store.setWallet('osmosis', toBech32('osmo', fromBech32(store.wallets.cosmoshub).data))\n\n        // Get status\n        store.getNetworkStatus('osmosis')\n\n        // Get network tokens\n        store.getNetworkTokens('osmosis').then(() => {\n            // Calc network tokens sum\n            store.calcNetworkTokensSum('osmosis')\n\n            if(store.networks.emoney.status){\n                // Get network data\n                let osmosisData = store.getNetworkData('osmosis')\n\n                Promise.all([osmosisData, promiseCurrencies]).then(() => {\n                    // Calc network RPDE\n                    store.calcNetworkRPDEInCurrency('osmosis')\n\n                    // Calc network balance\n                    store.calcNetworkBalance('osmosis')\n\n                    // Calc delegations price\n                    store.calcDelegationsPrice('osmosis')\n\n                    // Calc rewards price\n                    store.calcRewardsPrice('osmosis')\n\n                    // Update account balance\n                    store.updateAccountBalance()\n                })\n            }\n        })\n\n\n        //======== E-money\n        // Set wallet address\n        store.setWallet('emoney', toBech32('emoney', fromBech32(store.wallets.cosmoshub).data))\n\n        // Get status\n        store.getNetworkStatus('emoney')\n\n        // Get network tokens\n        store.getNetworkTokens('emoney').then(() => {\n            // Calc network tokens sum\n            store.calcNetworkTokensSum('emoney')\n\n            if(store.networks.emoney.status){\n                // Get network data\n                let emoneyData = store.getNetworkData('emoney')\n\n                Promise.all([emoneyData, promiseCurrencies]).then(() => {\n                    // Calc network RPDE\n                    store.calcNetworkRPDEInCurrency('emoney')\n\n                    // Calc network balance\n                    store.calcNetworkBalance('emoney')\n\n                    // Calc delegations price\n                    store.calcDelegationsPrice('emoney')\n\n                    // Calc rewards price\n                    store.calcRewardsPrice('emoney')\n\n                    // Update account balance\n                    store.updateAccountBalance()\n                })\n            }\n        })\n\n\n        //======== Gravity bridge\n        // Set wallet address\n        store.setWallet('gravity', toBech32('gravity', fromBech32(store.wallets.cosmoshub).data))\n\n        // Get status\n        store.getNetworkStatus('gravity')\n\n        // Get network tokens\n        store.getNetworkTokens('gravity').then(() => {\n            // Calc network tokens sum\n            store.calcNetworkTokensSum('gravity')\n\n            if(store.networks.gravity.status){\n                // Get network data\n                let gravityData = store.getNetworkData('gravity')\n\n                Promise.all([gravityData, promiseCurrencies]).then(() => {\n                    // Calc network RPDE\n                    store.calcNetworkRPDEInCurrency('gravity')\n\n                    // Calc network balance\n                    store.calcNetworkBalance('gravity')\n\n                    // Calc delegations price\n                    store.calcDelegationsPrice('gravity')\n\n                    // Calc rewards price\n                    store.calcRewardsPrice('gravity')\n\n                    // Update account balance\n                    store.updateAccountBalance()\n                })\n            }\n        })\n\n\n        //======== Stargaze\n        // Set wallet address\n        store.setWallet('stargaze', toBech32('stars', fromBech32(store.wallets.cosmoshub).data))\n\n        // Get status\n        store.getNetworkStatus('stargaze')\n\n        // Get network tokens\n        store.getNetworkTokens('stargaze').then(() => {\n            // Calc network tokens sum\n            store.calcNetworkTokensSum('stargaze')\n\n            if(store.networks.stargaze.status){\n                // Get network data\n                let stargazeData = store.getNetworkData('stargaze')\n\n                Promise.all([stargazeData, promiseCurrencies]).then(() => {\n                    // Calc network RPDE\n                    store.calcNetworkRPDEInCurrency('stargaze')\n\n                    // Calc network balance\n                    store.calcNetworkBalance('stargaze')\n\n                    // Calc delegations price\n                    store.calcDelegationsPrice('stargaze')\n\n                    // Calc rewards price\n                    store.calcRewardsPrice('stargaze')\n\n                    // Update account balance\n                    store.updateAccountBalance()\n                })\n            }\n        })\n\n\n        //======== Stride\n        // Set wallet address\n        store.setWallet('stride', toBech32('stride', fromBech32(store.wallets.cosmoshub).data))\n\n        // Get status\n        store.getNetworkStatus('stride')\n\n        // Get network tokens\n        store.getNetworkTokens('stride').then(() => {\n            // Calc network tokens sum\n            store.calcNetworkTokensSum('stride')\n\n            if(store.networks.stride.status){\n                // Get network data\n                let strideData = store.getNetworkData('stride')\n\n                Promise.all([strideData, promiseCurrencies]).then(() => {\n                    // Calc network RPDE\n                    store.calcNetworkRPDEInCurrency('stride')\n\n                    // Calc network balance\n                    store.calcNetworkBalance('stride')\n\n                    // Calc delegations price\n                    store.calcDelegationsPrice('stride')\n\n                    // Calc rewards price\n                    store.calcRewardsPrice('stride')\n\n                    // Update account balance\n                    store.updateAccountBalance()\n                })\n            }\n        })\n\n\n        const checkChains = [\n            {\n                chainId: 'desmos-mainnet',\n                name: 'desmos',\n                config: desmosConfig\n            },\n            {\n                chainId: 'crescent-1',\n                name: 'crescent',\n                config: crescentConfig\n            },\n            {\n                chainId: 'omniflixhub-1',\n                name: 'omniflix',\n                config: omniflixConfig\n            }\n        ]\n\n        var accountsDesmos = {}\n\n\n        // Check chains in Keplr\n        for (let i in checkChains) {\n            try{\n                let offlineSigner = window.getOfflineSigner(checkChains[i].chainId),\n                    accounts = await offlineSigner.getAccounts()\n\n                if(checkChains[i].chainId == 'desmos-mainnet'){\n                    accountsDesmos = accounts\n                }\n            } catch (error) {\n                console.log(error)\n\n                // Add chain in Keplr\n                await window.keplr.experimentalSuggestChain(checkChains[i].config).then(() => store.updateNetwork(checkChains[i].name))\n            }\n        }\n\n\n        // ======== Desmos\n        // Set wallet address\n        store.setWallet('desmos', accountsDesmos[0].address)\n\n        // Get status\n        store.getNetworkStatus('desmos')\n\n        // Get network tokens\n        store.getNetworkTokens('desmos').then(() => {\n            // Calc network tokens sum\n            store.calcNetworkTokensSum('desmos')\n\n            if(store.networks.desmos.status){\n                // Get network data\n                let desmosData = store.getNetworkData('desmos')\n\n                Promise.all([desmosData, promiseCurrencies]).then(() => {\n                    // Calc network RPDE\n                    store.calcNetworkRPDEInCurrency('desmos')\n\n                    // Calc network balance\n                    store.calcNetworkBalance('desmos')\n\n                    // Calc delegations price\n                    store.calcDelegationsPrice('desmos')\n\n                    // Calc rewards price\n                    store.calcRewardsPrice('desmos')\n\n                    // Update account balance\n                    store.updateAccountBalance()\n                })\n            }\n        })\n\n\n        //======== Crescent hub\n        // Set wallet address\n        store.setWallet('crescent', toBech32('cre', fromBech32(store.wallets.cosmoshub).data))\n\n        // Get status\n        store.getNetworkStatus('crescent')\n\n        // Get network tokens\n        store.getNetworkTokens('crescent').then(() => {\n            // Calc network tokens sum\n            store.calcNetworkTokensSum('crescent')\n\n            if(store.networks.crescent.status){\n                // Get network data\n                let crescentData = store.getNetworkData('crescent')\n\n                Promise.all([crescentData, promiseCurrencies]).then(() => {\n                    // Calc network RPDE\n                    store.calcNetworkRPDEInCurrency('crescent')\n\n                    // Calc network balance\n                    store.calcNetworkBalance('crescent')\n\n                    // Calc delegations price\n                    store.calcDelegationsPrice('crescent')\n\n                    // Calc rewards price\n                    store.calcRewardsPrice('crescent')\n\n                    // Update account balance\n                    store.updateAccountBalance()\n                })\n            }\n        })\n\n\n        //======== Omniflix hub\n        // Set wallet address\n        store.setWallet('omniflix', toBech32('omniflix', fromBech32(store.wallets.cosmoshub).data))\n\n        // Get status\n        store.getNetworkStatus('omniflix')\n\n        // Get network tokens\n        store.getNetworkTokens('omniflix').then(() => {\n            // Calc network tokens sum\n            store.calcNetworkTokensSum('omniflix')\n\n            if(store.networks.omniflix.status){\n                // Get network data\n                let omniflixData = store.getNetworkData('omniflix')\n\n                Promise.all([omniflixData, promiseCurrencies]).then(() => {\n                    // Calc network RPDE\n                    store.calcNetworkRPDEInCurrency('omniflix')\n\n                    // Calc network balance\n                    store.calcNetworkBalance('omniflix')\n\n                    // Calc delegations price\n                    store.calcDelegationsPrice('omniflix')\n\n                    // Calc rewards price\n                    store.calcRewardsPrice('omniflix')\n\n                    // Update account balance\n                    store.updateAccountBalance()\n                })\n            }\n        })\n    })\n\n\n    // Event \"set notification\"\n    emitter.on('setNotification', function(notice) {\n        store.$patch({ tooltip: notice })\n    })\n\n\n    // Event \"open manage modal\"\n    emitter.on('open_manage_modal', async function(modal_data = { network: store.networkManageModal }) {\n        await fetch(`${store.networks[modal_data.network].lcd_api}/cosmos/staking/v1beta1/params`)\n            .then(response => response.json())\n            .then(data => {\n                store.$patch((state) => {\n                    state.showManageModal = true,\n                    state.networkManageModal = modal_data.network,\n                    state.networks[modal_data.network].unbonding_time = parseInt(data.params.unbonding_time)\n                })\n\n                document.body.classList.add('lock')\n            })\n    })\n\n\n    // Event \"close manage modal\"\n    emitter.on('close_manage_modal', function() {\n        store.$patch({ showManageModal: false })\n\n        document.body.classList.remove('lock')\n    })\n\n\n    // Event \"open manage success modal\"\n    emitter.on('open_manage_success_modal', async function() {\n        store.$patch({ showManageSuccessModal: true })\n\n        document.body.classList.add('lock')\n    })\n\n\n    // Event \"close manage success modal\"\n    emitter.on('close_manage_success_modal', function() {\n        store.$patch({ showManageSuccessModal: false })\n\n        document.body.classList.remove('lock')\n    })\n\n\n    // Event \"open manage error modal\"\n    emitter.on('open_manage_error_modal', async function() {\n        store.$patch({ showManageErrorModal: true })\n\n        document.body.classList.add('lock')\n    })\n\n\n    // Event \"close manage error modal\"\n    emitter.on('close_manage_error_modal', function() {\n        store.$patch({ showManageErrorModal: false })\n\n        document.body.classList.remove('lock')\n    })\n</script>\n\n\n<style>\n    .notifications\n    {\n        position: fixed;\n        z-index: 91;\n        top: 132px;\n        left: 0;\n\n        width: 100%;\n\n        transition: top .2s linear;\n        pointer-events: none;\n    }\n\n\n    .notifications .data\n    {\n        font-size: 14px;\n        line-height: 150%;\n\n        display: flex;\n\n        width: 953px;\n        max-width: 100%;\n        margin-right: auto;\n        margin-left: auto;\n        padding: 19px 20px;\n\n        transition: .2s linear;\n\n        border-radius: 20px;\n        background: #141414;\n\n        align-content: flex-start;\n        align-items: flex-start;\n        flex-wrap: wrap;\n        justify-content: space-between;\n        font-feature-settings: 'pnum' on, 'lnum' on;\n    }\n\n\n    .notifications .icon\n    {\n        display: flex;\n\n        width: 52px;\n        height: 52px;\n\n        border: 1px solid rgba(217, 217, 217, .1);\n        border-radius: 50%;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n\n    .notifications .icon svg\n    {\n        display: block;\n\n        width: 30px;\n        height: 30px;\n    }\n\n    .notifications .icon + *\n    {\n        width: calc(100% - 67px);\n        margin-left: auto;\n    }\n\n    .notifications span\n    {\n        display: -webkit-box;\n        overflow: hidden;\n\n        text-overflow: ellipsis;\n\n        align-self: center;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: 2;\n    }\n\n\n\n    .notifications.stuck\n    {\n        top: 31px;\n    }\n\n    .notifications.stuck .data\n    {\n        width: calc(100% - 747px);\n        padding-top: 10px;\n        padding-bottom: 10px;\n\n        transform: translateX(-152px);\n    }\n\n</style>","import script from \"./Default.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Default.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Default.vue?vue&type=style&index=0&id=6d55206e&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router'\n\nimport errorLayut from '../layouts/Error.vue'\nimport defaultLayut from '../layouts/Default.vue'\n\nconst routes = [\n\t{\n\t\tpath: '/:pathMatch(.*)',\n\t\tname: 'Error',\n\t\tcomponent: () => import('../views/Error404.vue'),\n\t\tmeta: {\n\t\t\tlayout: errorLayut\n\t\t}\n\t},\n\t{\n\t\tpath: '/keplr_error',\n\t\tname: 'KeplrError',\n\t\tcomponent: () => import('../views/KeplrError.vue'),\n\t\tmeta: {\n\t\t\tlayout: errorLayut\n\t\t}\n\t},\n\t{\n\t\tpath: '/under_construction',\n\t\tname: 'Under construction',\n\t\tcomponent: () => import('../views/UnderConstruction.vue'),\n\t\tmeta: {\n\t\t\tlayout: errorLayut\n\t\t}\n\t},\n\t{\n\t\tpath: '/',\n\t\tname: 'Dashboard',\n\t\tcomponent: () => import('../views/Dashboard.vue'),\n\t\tmeta: {\n\t\t\tlayout: defaultLayut\n\t\t}\n\t},\n]\n\nconst router = createRouter({\n\thistory: createWebHistory(),\n\troutes\n})\n\n\nrouter.beforeEach((to, from, next) => {\n\t// Keplr\n\t!window.keplr && to.name != 'KeplrError'\n\t\t? router.push({ name: 'KeplrError' })\n\t\t: next()\n\n\twindow.keplr && to.name == 'KeplrError'\n\t\t? router.push({ name: 'Dashboard' })\n\t\t: next()\n})\n\n\nexport default router\n","export default {\n    // English\n    en: {\n        message: {\n            // IPFS\n            'ipfs': \"Ipfs node\",\n\n            // Error page\n            'error_title_404': \"Page was lost in space....<br> Are you sure that it exist?\",\n\n            // Under construction page\n            'under_construction_title': \"This part of site is under construction\",\n\n            // Keplr Error page\n            'keplr_error_title': \"Oooops, seems you don't have<br> a Keplr extension\",\n            'keplr_install_btn': \"Install Keplr\",\n\n            // Buttons\n            'connect_wallet_btn': 'Connect wallet',\n            'details_btn': 'Details',\n            'manage_btn': 'Manage',\n            'delegate_btn': 'Delegate to your Bro',\n            'back_home_btn': 'Back to home',\n\n            // Dashboard\n            'personal_apr': 'Personal APR',\n            'RPDE': 'RPDE',\n\n            // Notofications\n            'notice_default': 'Bro_n_Bro foundation has come to light at early 2021 as a Validator for Cosmos Ecosystem. Some time after we started relaying and expanding other services to networks and projects.',\n\n            'ipfs_active_notice': \"Built-in IPFS node is active and resolving the content\",\n            'ipfs_not_active_notice': \"Built-in IPFS node isn't active and can't resolve the content\",\n\n            'currency_notice': \"The currency for the account valuation\",\n            'username_notice': \"Chosen keplr account\",\n            'avatar_notice': \"You Moon passport avatar\",\n\n            'network_notice': \"This network health is {health}. That's why it's {color}. The APR of this network is {APR}. The frequency of blinking depends on the network APR value.\",\n            'network_sum_notice': \"The sum of your tokens in {network} network\",\n            'network_staked_tokens_notice': \"The amount of staked tokens is {value} {denom}\",\n            'network_liquid_tokens_notice': \"The amount of liquid tokens is {value} {denom}\",\n            'network_rewards_tokens_notice': \"The amount of ready-to-claim reward tokens is {value} {denom}\",\n            'network_ibc_tokens_notice': \"The amount {denom} tokens outside the {network} is {value} {denom}\",\n            'network_personal_APR_notice': \"Your personal APR, given validators commissions\",\n            'network_RPDE_notice': \"Rewards Per Day Estimation. The amount of {denom} tokens you're earning per day.\",\n\n            'account_balance_notice': \"Your account valuation in the chosen currency\",\n            'account_personal_APR_notice': \"Your personal APR, given validators commissions in all displayed networks.\",\n            'account_RPDE_notice': \"Rewards Per Day Estimation. The number of tokens in the chosen currency you earn per day from all displayed networks.\",\n\n            // Manage modal\n            'manage_modal_action_delegate': 'Delegate',\n            'manage_modal_action_redelegate': 'Redelegate',\n            'manage_modal_validator_name': 'Bro_n_Bro',\n            'manage_modal_commission': 'Commission',\n            'manage_modal_notice_title': 'Staking will lock up your funds for {unbonding_time} days',\n            'manage_modal_notice_desc': 'Once you undelegate your staked {currency}, you will need to wait {unbonding_time} days for your tokens to be liquid',\n            'manage_modal_my_delegation': 'My delegation',\n            'manage_modal_available_balance': 'Available Balance',\n            'manage_modal_amount': 'Amount to Delegate',\n            'manage_modal_amount2': 'Amount to Redelegate',\n            'manage_modal_max_btn': 'MAX',\n            'manage_modal_validator_label': 'Validator to Delegate',\n            'manage_modal_validator_label2': 'Validator from Redelegate',\n            'manage_modal_fees': '{value} {currency} is reserved for transcation fees',\n            'manage_modal_back_btn': 'Back',\n            'manage_modal_delegate_btn': 'Delegate',\n            'manage_modal_redelegate_btn': 'Redelegate',\n            'manage_modal_success_back_btn': 'Got it!',\n            'manage_modal_again_btn': 'Try again!',\n\n            'manage_modal_success_title': \"<a href='https://www.mintscan.io/{network}/txs/{hash}' target='_blank' rel='noopener nofollow'>Transaction</a><br> is successfully broadcasted\",\n\n            'manage_modal_error_2': \"tx parse error\",\n            'manage_modal_error_3': \"invalid sequence\",\n            'manage_modal_error_4': \"unauthorized\",\n            'manage_modal_error_5': \"insufficient funds\",\n            'manage_modal_error_6': \"unknown request\",\n            'manage_modal_error_7': \"invalid address\",\n            'manage_modal_error_8': \"invalid pubkey\",\n            'manage_modal_error_9': \"unknown address\",\n            'manage_modal_error_10': \"invalid coins\",\n            'manage_modal_error_11': \"Broadcasting transaction failed: out of gas try again and increase gas amount\",\n            'manage_modal_error_12': \"memo too large\",\n            'manage_modal_error_13': \"insufficient fee\",\n            'manage_modal_error_14': \"maximum number of signatures exceeded\",\n            'manage_modal_error_15': \"no signatures supplied\",\n            'manage_modal_error_16': \"failed to marshal JSON bytes\",\n            'manage_modal_error_17': \"failed to unmarshal JSON bytes\",\n            'manage_modal_error_18': \"invalid request\",\n            'manage_modal_error_19': \"tx already in mempool\",\n            'manage_modal_error_20': \"mempool is full\",\n            'manage_modal_error_21': \"tx too large\",\n            'manage_modal_error_22': \"key not found\",\n            'manage_modal_error_23': \"invalid account password\",\n            'manage_modal_error_24': \"tx intended signer does not match the given signer\",\n            'manage_modal_error_25': \"invalid gas adjustment\",\n            'manage_modal_error_26': \"invalid height\",\n            'manage_modal_error_27': \"invalid version\",\n            'manage_modal_error_28': \"invalid chain-id\",\n            'manage_modal_error_29': \"invalid type\",\n            'manage_modal_error_30': \"tx timeout height\",\n            'manage_modal_error_31': \"unknown extension options\",\n            'manage_modal_error_32': \"incorrect account sequence\",\n            'manage_modal_error_33': \"failed packing protobuf message to Any\",\n            'manage_modal_error_34': \"failed unpacking protobuf message from Any\",\n            'manage_modal_error_35': \"internal logic error\",\n            'manage_modal_error_36': \"conflict\",\n            'manage_modal_error_37': \"feature not supported\",\n            'manage_modal_error_38': \"not found\",\n            'manage_modal_error_39': \"Internal IO error\",\n            'manage_modal_error_40': \"error in app.toml\",\n            'manage_modal_error_41': \"invalid gas limit\",\n\n            'manage_modal_error_rejected': \"The transaction has been rejected\",\n        }\n    }\n}","import { createI18n } from 'vue-i18n'\nimport VueI18nMessages from '../locale/messages'\n\n\nconst i18n = createI18n({\n    locale: 'en',\n    fallbackLocale: 'en',\n    messages: VueI18nMessages\n})\n\n\nexport default i18n","import { createApp } from 'vue'\nimport { createPinia } from 'pinia'\nimport App from './App.vue'\nimport router from './router'\nimport i18n from './locale'\n\n\n// Events\nimport mitt from 'mitt'\nconst emitter = mitt()\n\n\n// Create App\nconst app = createApp(App)\n\n\n// Vue use\napp.use(createPinia())\napp.use(router)\napp.use(i18n)\n\n\n// Vue provide\napp.provide('i18n', i18n)\napp.provide('emitter', emitter)\n\n\n// Add rounding\napp.config.globalProperties.$filters = {\n    toFixed(value, limit) {\n        return value.toFixed(limit)\n    }\n}\n\n\n// Сlick element outside\nconst clickOutside = {\n    beforeMount: (el, binding) => {\n        el.clickOutsideEvent = event => {\n            if (!(el == event.target || el.contains(event.target))) {\n                binding.value()\n            }\n        }\n\n        document.addEventListener('click', el.clickOutsideEvent)\n    },\n    unmounted: el => document.removeEventListener('click', el.clickOutsideEvent),\n}\n\n\n// Directives\napp.directive('clickOut', clickOutside).mount('#app')\n","import { useLocalStorage } from '@vueuse/core'\n\nconst account = {\n    userName: useLocalStorage('userName', ''),\n    avatar: '',\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    personal_APR: 0,\n    delegations_price: 0\n}\n\nexport default account","const network = {\n    name: 'Evmos',\n    status: false,\n    lcd_api: 'https://lcd.evmos-9001-2.bronbro.io',\n    rpc_api: 'https://rpc.evmos-9001-2.bronbro.io',\n    validator: 'evmosvaloper1ce4vh0e5kanlgc7z0rhcemvd8erjnfzcyfecl7',\n    denom: 'aevmos',\n    token_name: 'EVMOS',\n    chainId: 'evmos_9001-2',\n    coingecko_api: 'evmos',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000000000000000,\n    tokens_sum: 0,\n    unbonding_time: 0,\n    gas: '250000'\n}\n\nexport default network","const network = {\n    name: 'Cosmos hub',\n    status: false,\n    lcd_api: 'https://lcd.cosmoshub-4.bronbro.io',\n    rpc_api: 'https://rpc.cosmoshub-4.bronbro.io/',\n    validator: 'cosmosvaloper106yp7zw35wftheyyv9f9pe69t8rteumjrx52jg',\n    denom: 'uatom',\n    token_name: 'ATOM',\n    chainId: 'cosmoshub-4',\n    coingecko_api: 'cosmos',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000,\n    tokens_sum: 0,\n    unbonding_time: 0\n}\n\nexport default network","const network = {\n    name: 'Bostrom',\n    status: false,\n    lcd_api: 'https://lcd.bostrom.bronbro.io',\n    rpc_api: 'https://rpc.bostrom.bronbro.io',\n    validator: 'bostromvaloper1ydc5fy9fjdygvgw36u49yj39fr67pd9m5qexm8',\n    denom: 'boot',\n    token_name: 'MBOOT',\n    chainId: 'bostrom',\n    coingecko_api: 'bostrom',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000,\n    tokens_sum: 0,\n    unbonding_time: 0\n}\n\nexport default network","const network = {\n    name: 'Osmosis',\n    status: false,\n    lcd_api: 'https://lcd.osmosis-1.bronbro.io',\n    rpc_api: 'https://rpc.osmosis-1.bronbro.io',\n    validator: 'osmovaloper13tk45jkxgf7w0nxquup3suwaz2tx483xe832ge',\n    denom: 'uosmo',\n    token_name: 'OSMO',\n    chainId: 'osmosis-1',\n    coingecko_api: 'osmosis',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000,\n    tokens_sum: 0,\n    unbonding_time: 0\n}\n\nexport default network","const network = {\n    name: 'Juno',\n    status: false,\n    lcd_api: 'https://lcd.juno-1.bronbro.io',\n    rpc_api: 'https://rpc.juno-1.bronbro.io',\n    validator: 'junovaloper1quqxfrxkycr0uzt4yk0d57tcq3zk7srm7sm6r8',\n    denom: 'ujuno',\n    token_name: 'JUNO',\n    chainId: 'juno-1',\n    coingecko_api: 'juno-network',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000,\n    tokens_sum: 0,\n    unbonding_time: 0\n}\n\nexport default network","const network = {\n    name: 'E-money',\n    status: false,\n    lcd_api: 'https://lcd.emoney-3.bronbro.io',\n    rpc_api: 'https://rpc.emoney-3.bronbro.io',\n    validator: 'emoneyvaloper149vyxd36kxpg46rralaw6eejv4d9daqc3nv642',\n    denom: 'ungm',\n    token_name: 'NGM',\n    chainId: 'emoney-3',\n    coingecko_api: 'e-money',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000,\n    tokens_sum: 0,\n    unbonding_time: 0,\n    gas: '250000'\n}\n\nexport default network","const network = {\n    name: 'Stargaze',\n    status: false,\n    lcd_api: 'https://lcd.stargaze-1.bronbro.io',\n    rpc_api: 'https://rpc.stargaze-1.bronbro.io',\n    validator: 'starsvaloper1y58hfnm90r4efhlydx0gavz57lvm7k6uulkg3h',\n    denom: 'ustars',\n    token_name: 'STAR',\n    chainId: 'stargaze-1',\n    coingecko_api: 'stargaze',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000,\n    tokens_sum: 0,\n    unbonding_time: 0\n}\n\nexport default network","const network = {\n    name: 'G-Bridge',\n    status: false,\n    lcd_api: 'https://lcd.gravity-bridge-3.bronbro.io',\n    rpc_api: 'https://rpc.gravity-bridge-3.bronbro.io',\n    validator: 'gravityvaloper1vyd4k5j636erx5y5kdqghdu3rfjtwc48vdc7r6',\n    denom: 'ugraviton',\n    token_name: 'GRAV',\n    chainId: 'gravity-bridge-3',\n    coingecko_api: 'graviton',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000,\n    tokens_sum: 0,\n    unbonding_time: 0\n}\n\nexport default network","const network = {\n    name: 'Crescent hub',\n    status: false,\n    lcd_api: 'https://lcd.crescent-1.bronbro.io',\n    rpc_api: 'https://rpc.crescent-1.bronbro.io',\n    validator: 'crevaloper1c96vvme4k42zlvkc56fslmdpa2qj6u80xvqwau',\n    denom: 'ucre',\n    token_name: 'CRE',\n    chainId: 'crescent-1',\n    coingecko_api: 'crescent-network',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000,\n    tokens_sum: 0,\n    unbonding_time: 0\n}\n\nexport default network","const network = {\n    name: 'OmniFlix Network',\n    status: false,\n    lcd_api: 'https://lcd.omniflixhub-1.bronbro.io',\n    rpc_api: 'https://rpc.omniflixhub-1.bronbro.io',\n    validator: 'omniflixvaloper1e8grpphncncw9hrutyvnlv77n5dejwcne58zk4',\n    denom: 'uflix',\n    token_name: 'FLIX',\n    chainId: 'omniflixhub-1',\n    coingecko_api: 'omniflix-network',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000,\n    tokens_sum: 0,\n    unbonding_time: 0\n}\n\nexport default network","const network = {\n    name: 'Desmos',\n    status: false,\n    lcd_api: 'https://lcd.desmos-mainnet.bronbro.io',\n    rpc_api: 'https://rpc.desmos-mainnet.bronbro.io',\n    validator: 'desmosvaloper1sykf8q94l8q8mqstf64ptuvp74ueyehxpgcq76',\n    denom: 'udsm',\n    token_name: 'DSM',\n    chainId: 'desmos-mainnet',\n    coingecko_api: 'desmos',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000,\n    tokens_sum: 0,\n    unbonding_time: 0\n}\n\nexport default network","const network = {\n    name: 'Stride',\n    status: false,\n    lcd_api: 'https://lcd.stride-1.bronbro.io',\n    rpc_api: 'https://rpc.stride-1.bronbro.io',\n    validator: 'stridevaloper1hl95uhecs4rwe0g432mknz2tsl84f0ltexpzc3',\n    denom: 'ustrd',\n    token_name: 'STRD',\n    chainId: 'stride-1',\n    coingecko_api: 'stride',\n\n    health: 0,\n    health_color: 'grey',\n\n    ibc_tokens: 0,\n    ibc_percents: 0,\n\n    availabel_tokens: 0,\n    availabel_percents: 0,\n\n    delegations_tokens: 0,\n    delegations_percents: 0,\n\n    delegations_price: 0,\n    delegations_price_usdt: 0,\n    delegations_price_atom: 0,\n    delegations_price_eth: 0,\n    delegations_price_btc: 0,\n\n    rewards_tokens: 0,\n    rewards_percents: 0,\n\n    rewards_price: 0,\n    rewards_price_usdt: 0,\n    rewards_price_atom: 0,\n    rewards_price_eth: 0,\n    rewards_price_btc: 0,\n\n    validators: [],\n    delegations: [],\n\n    RPDE: 0,\n    RPDE_usdt: 0,\n    RPDE_atom: 0,\n    RPDE_eth: 0,\n    RPDE_btc: 0,\n\n    RPDE_year_usdt: 0,\n    RPDE_year_atom: 0,\n    RPDE_year_eth: 0,\n    RPDE_year_btc: 0,\n\n    price: 0,\n    price_usdt: 0,\n    price_atom: 0,\n    price_eth: 0,\n    price_btc: 0,\n\n    balance_usdt: 0,\n    balance_atom: 0,\n    balance_eth: 0,\n    balance_btc: 0,\n\n    apr: 0,\n    personal_APR: 0,\n\n    speed: 0,\n    total_annual_provision: 0,\n    exponent: 1000000,\n    tokens_sum: 0,\n    unbonding_time: 0\n}\n\nexport default network","import { defineStore } from 'pinia'\nimport { useLocalStorage } from '@vueuse/core'\nimport { CyberClient } from '@cybercongress/cyber-js'\nimport { Tendermint34Client } from '@cosmjs/tendermint-rpc'\nimport { fromBech32, toBech32 } from '@cosmjs/encoding'\n\n// Account\nimport account from '@/stores/account'\n\n// Networks\nimport evmos from '@/stores/networks/evmos'\nimport cosmoshub from '@/stores/networks/cosmoshub'\nimport bostrom from '@/stores/networks/bostrom'\nimport osmosis from '@/stores/networks/osmosis'\nimport juno from '@/stores/networks/juno'\nimport emoney from '@/stores/networks/emoney'\nimport stargaze from '@/stores/networks/stargaze'\nimport gravity from '@/stores/networks/gravity'\nimport crescent from '@/stores/networks/crescent'\nimport omniflix from '@/stores/networks/omniflix'\nimport desmos from '@/stores/networks/desmos'\nimport stride from '@/stores/networks/stride'\n\n\nconst networks = {\n    cosmoshub,\n    bostrom,\n    osmosis,\n    juno,\n    emoney,\n    stargaze,\n    gravity,\n    evmos,\n    crescent,\n    omniflix,\n    desmos,\n    stride\n}\n\nwindow.localStorage.setItem('account', JSON.stringify(account))\nwindow.localStorage.setItem('networks', JSON.stringify(networks))\n\n\nexport const useGlobalStore = defineStore('global', {\n    state: () => ({\n        CONTRACT_ADDRESS_PASSPORT: 'bostrom1xut80d09q0tgtch8p0z4k5f88d3uvt8cvtzm5h3tu3tsy4jk9xlsfzhxel',\n        node: null,\n        IPFSStatus: false,\n        recalc: true,\n        auth: useLocalStorage('auth', false),\n        currency: useLocalStorage('currency', 'BTC'),\n        wallets: {},\n        tooltip: '',\n        lastTXS: '',\n        manageError: '',\n        jsCyber: null,\n\n        BTC_price: 0,\n        ETH_price: 0,\n        ATOM_price: 0,\n\n        account,\n        networks,\n\n        showManageModal: false,\n        showManageSuccessModal: false,\n        showManageErrorModal: false,\n        showManageRejectModal: false,\n        loaderManageModal: false,\n        showCurrencyDropdown: false,\n\n        networkManageModal: 'cosmoshub'\n    }),\n\n    actions: {\n        // Pre connect\n        async preConnect() {\n            // Keplr connect\n            const chainId = 'cosmoshub-4'\n\n            window.keplr.enable(chainId)\n\n            // Cosmos singer\n            const offlineSigner = window.getOfflineSigner(chainId),\n                accounts = await offlineSigner.getAccounts(),\n                key = await window.keplr.getKey(chainId)\n\n\n            // Pre wallets\n            this.$patch({\n                wallets: {\n                    'cosmoshub': accounts[0].address,\n                    'bostrom': toBech32('bostrom', fromBech32(accounts[0].address).data)\n                }\n            })\n\n\n            // Set user info\n            this.setUserInfo({\n                userName: key.name,\n                auth: true\n            })\n        },\n\n\n        // Set user info\n        async setUserInfo(user) {\n            this.account.userName = user.userName\n            this.auth = user.auth\n\n            // Start IPFS\n            if (!this.node) {\n                await this.startIPFS()\n            }\n\n            // Get avatar\n            if (this.node) {\n                this.getAvatar()\n            }\n        },\n\n\n        // IPFS\n        async startIPFS() {\n            this.node = await Ipfs.create({\n                // repo: 'ipfs-repo-cyber',\n                init: true,\n                start: true,\n                relay: {\n                    enabled: true,\n                    hop: {\n                        enabled: true,\n                    },\n                },\n                EXPERIMENTAL: {\n                    pubsub: true,\n                },\n                config: {\n                    Addresses: {\n                        Swarm: [\n                            // '/dns4/star.thedisco.zone/tcp/9090/wss/p2p-webrtc-star',\n                            // '/dns6/star.thedisco.zone/tcp/9090/wss/p2p-webrtc-star',\n                            '/dns4/ws-star.discovery.cybernode.ai/tcp/443/wss/p2p-webrtc-star',\n                            // '/dns4/ws-star.discovery.cybernode.ai/tcp/4430/wss/p2p/QmUgmRxoLtGERot7Y6G7UyF6fwvnusQZfGR15PuE6pY3aB',\n                        ],\n                    },\n                    Bootstrap: [\n                        // '/dns4/ws-star.discovery.cybernode.ai/tcp/4430/p2p/QmUgmRxoLtGERot7Y6G7UyF6fwvnusQZfGR15PuE6pY3aB'\n                        '/dns4/ws-star.discovery.cybernode.ai/tcp/4430/wss/p2p/QmUgmRxoLtGERot7Y6G7UyF6fwvnusQZfGR15PuE6pY3aB',\n                        // '/dns6/ipfs.thedisco.zone/tcp/4430/wss/p2p/12D3KooWChhhfGdB9GJy1GbhghAAKCUR99oCymMEVS4eUcEy67nt',\n                        // '/dns4/ipfs.thedisco.zone/tcp/4430/wss/p2p/12D3KooWChhhfGdB9GJy1GbhghAAKCUR99oCymMEVS4eUcEy67nt',\n                    ],\n                },\n            })\n\n            if (this.node !== null) {\n                this.IPFSStatus = true\n            }\n        },\n\n\n        // Avatar\n        async getAvatar() {\n            try {\n                const tendermintClient = await Tendermint34Client.connect('https://rpc.bostrom.cybernode.ai'),\n                    content = []\n\n                this.jsCyber = new CyberClient(tendermintClient)\n\n                const response = await this.jsCyber.queryContractSmart(\n                    this.CONTRACT_ADDRESS_PASSPORT,\n                    {\n                        active_passport: {\n                            address: this.wallets.bostrom\n                        }\n                    }\n                )\n\n                for await (const file of this.node.get(response.extension.avatar)) {\n                    if (file.content) {\n                        for await (const chunk of file.content) {\n                            content.push(chunk)\n                        }\n                    }\n                }\n\n                let image = URL.createObjectURL(new Blob(content, {\n                    type: 'image/jpeg'\n                }))\n\n                this.account.avatar = image\n            } catch (error) {\n                console.log(error)\n\n                fetch(`https://lcd.bostrom.cybernode.ai/txs?cyberlink.neuron=${this.wallets.bostrom}&cyberlink.particleFrom=Qmf89bXkJH9jw4uaLkHmZkxQ51qGKfUPtAMxA8rTwBrmTs&limit=1000000`)\n                    .then(response => response.json())\n                    .then(data => {\n                        data.txs\n                            ? this.account.avatar = 'https://ipfs.io/ipfs/' + data.txs[0].tx.value.msg[0].value.links[0].to\n                            : this.account.avatar = `https://robohash.org/${this.account.userName.toLowerCase()}?set=set4`\n                    })\n            }\n        },\n\n\n        // Generate network address\n        setWallet(network, address) {\n            this.wallets[network] = address\n        },\n\n\n        // Reset state\n        reset() {\n            // Load from localstorage\n            let defaultAccount = JSON.parse(window.localStorage.getItem('account')),\n                defaultNetworks = JSON.parse(window.localStorage.getItem('networks'))\n\n            // Clear state\n            Object.assign(this, {\n                account: defaultAccount,\n                networks: defaultNetworks\n            })\n\n            // Update avatar\n            this.getAvatar()\n        },\n\n\n        // Networks status\n        async getNetworkStatus(network) {\n            await fetch(`${this.networks[network].lcd_api}/cosmos/distribution/v1beta1/delegators/${this.wallets[network]}/validators`)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.validators && data.validators.length) {\n                        data.validators.forEach(el => {\n                            if (el == this.networks[network].validator) {\n                                this.networks[network].status = true\n                            }\n                        })\n                    }\n                })\n        },\n\n\n        // Networks tokens\n        async getNetworkTokens(network) {\n            // Delegations tokens\n            await fetch(`${this.networks[network].lcd_api}/cosmos/staking/v1beta1/delegations/${this.wallets[network]}`)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.delegation_responses) {\n                        let sum = 0\n\n                        data.delegation_responses.forEach(el => {\n                            sum += parseFloat(el.balance.amount)\n\n                            this.networks[network].delegations[el.delegation.validator_address] = el.delegation.shares / this.networks[network].exponent\n                        })\n\n                        this.networks[network].delegations_tokens = sum / this.networks[network].exponent\n                    }\n                })\n\n\n            // Rewards tokens\n            await fetch(`${this.networks[network].lcd_api}/cosmos/distribution/v1beta1/delegators/${this.wallets[network]}/rewards`)\n                .then(response => response.json())\n                .then(data => {\n                    if (data.total.length) {\n                        let result = data.total.find(el => el.denom == this.networks[network].denom)\n\n                        this.networks[network].rewards_tokens = parseFloat(result.amount) / this.networks[network].exponent\n                    }\n                })\n\n\n            // Availabel/IBC tokens\n            await fetch(`${this.networks[network].lcd_api}/cosmos/bank/v1beta1/balances/${this.wallets[network]}`)\n                .then(response => response.json())\n                .then(data => {\n                    let availabel = data.balances.find(e => e.denom == this.networks[network].denom),\n                        ibc = data.balances.filter(e => e.denom.includes('ibc/'))\n\n                    if (data.balances && data.balances.length && typeof availabel !== \"undefined\") {\n                        // Availabel tokens\n                        this.networks[network].availabel_tokens = parseFloat(availabel.amount) / this.networks[network].exponent\n\n                        // IBC tokens\n                        ibc.forEach(el => {\n                            fetch(`${this.networks[network].lcd_api}/ibc/apps/transfer/v1/denom_traces/${el.denom.substr(4)}`)\n                                .then(response => response.json())\n                                .then(data => {\n                                    let baseDenom = data.denom_trace.base_denom,\n                                        baseNetwork = ''\n\n                                    for (const tempNetwork in this.networks) {\n                                        if (this.networks[tempNetwork].denom == baseDenom) {\n                                            baseNetwork = tempNetwork\n                                        }\n                                    }\n\n                                    this.networks[baseNetwork].ibc_tokens += parseFloat(el.amount) / this.networks[baseNetwork].exponent\n                                })\n                        })\n                    }\n                })\n        },\n\n\n        calcNetworkTokensSum(network) {\n            this.networks[network].tokens_sum = this.networks[network].availabel_tokens + this.networks[network].delegations_tokens + this.networks[network].rewards_tokens + this.networks[network].ibc_tokens\n\n            // Percents\n            if (this.networks[network].tokens_sum) {\n                this.networks[network].delegations_percents = this.networks[network].delegations_tokens * 100 / this.networks[network].tokens_sum\n                this.networks[network].rewards_percents = this.networks[network].rewards_tokens * 100 / this.networks[network].tokens_sum\n                this.networks[network].ibc_percents = this.networks[network].ibc_tokens * 100 / this.networks[network].tokens_sum\n                this.networks[network].availabel_percents = this.networks[network].availabel_tokens * 100 / this.networks[network].tokens_sum\n            }\n        },\n\n\n        // Network data\n        async getNetworkData(network) {\n            await fetch(`${this.networks[network].lcd_api}/cosmos/staking/v1beta1/delegators/${this.wallets[network]}/validators`)\n                .then(response => response.json())\n                .then(data => {\n                    // Validators\n                    if (data.validators.length) {\n                        this.networks[network].validators.push(data.validators.find(e => e.operator_address == this.networks[network].validator))\n\n                        // Annual provision\n                        this.networks[network].validators.forEach(el => {\n                            el.annual_provision = this.networks[network].delegations_tokens * this.networks[network].apr * (1 - el.commission.commission_rates.rate)\n\n                            // Total annual provision\n                            this.networks[network].total_annual_provision += el.annual_provision\n                        })\n\n                        // RPDE\n                        this.networks[network].RPDE = this.networks[network].total_annual_provision / 365.3\n\n                        // Personal APR\n                        this.networks[network].personal_APR = this.networks[network].total_annual_provision / this.networks[network].delegations_tokens * 100\n                    }\n                })\n        },\n\n\n        // Network balance\n        calcNetworkRPDEInCurrency(network) {\n            this.networks[network].RPDE_usdt = this.networks[network].price_usdt * this.networks[network].RPDE\n            this.networks[network].RPDE_atom = this.networks[network].price_atom * this.networks[network].RPDE\n            this.networks[network].RPDE_eth = this.networks[network].price_eth * this.networks[network].RPDE\n            this.networks[network].RPDE_btc = this.networks[network].price_btc * this.networks[network].RPDE\n\n            this.networks[network].RPDE_year_usdt = this.networks[network].RPDE_usdt * 365.3\n            this.networks[network].RPDE_year_atom = this.networks[network].RPDE_atom * 365.3\n            this.networks[network].RPDE_year_eth = this.networks[network].RPDE_eth * 365.3\n            this.networks[network].RPDE_year_btc = this.networks[network].RPDE_btc * 365.3\n        },\n\n\n        // Network balance\n        calcNetworkBalance(network) {\n            this.networks[network].balance_usdt = this.networks[network].tokens_sum * this.networks[network].price_usdt\n            this.networks[network].balance_atom = this.networks[network].tokens_sum * this.networks[network].price_atom\n            this.networks[network].balance_eth = this.networks[network].tokens_sum * this.networks[network].price_eth\n            this.networks[network].balance_btc = this.networks[network].tokens_sum * this.networks[network].price_btc\n        },\n\n\n        // Network delegations price\n        calcDelegationsPrice(network) {\n            this.networks[network].delegations_price = this.networks[network].delegations_tokens * this.networks[network].price\n            this.networks[network].delegations_price_usdt = this.networks[network].delegations_tokens * this.networks[network].price_usdt\n            this.networks[network].delegations_price_atom = this.networks[network].delegations_tokens * this.networks[network].price_atom\n            this.networks[network].delegations_price_eth = this.networks[network].delegations_tokens * this.networks[network].price_eth\n            this.networks[network].delegations_price_btc = this.networks[network].delegations_tokens * this.networks[network].price_btc\n        },\n\n\n        // Network rewards price\n        calcRewardsPrice(network) {\n            this.networks[network].rewards_price = this.networks[network].rewards_tokens * this.networks[network].price\n            this.networks[network].rewards_price_usdt = this.networks[network].rewards_tokens * this.networks[network].price_usdt\n            this.networks[network].rewards_price_atom = this.networks[network].rewards_tokens * this.networks[network].price_atom\n            this.networks[network].rewards_price_eth = this.networks[network].rewards_tokens * this.networks[network].price_eth\n            this.networks[network].rewards_price_btc = this.networks[network].rewards_tokens * this.networks[network].price_btc\n        },\n\n\n        // Networks info\n        getNetworksInfo() {\n            fetch('https://rpc.bronbro.io/bro_data/')\n                .then(response => response.json())\n                .then(data => {\n                    data.infos.forEach(el => {\n                        if (this.networks[el.network]) {\n                            this.networks[el.network].health = el.health\n                            this.networks[el.network].apr = el.apr\n\n                            this.networks[el.network].price = el.price\n                            this.networks[el.network].price_usdt = el.price\n                            this.networks[el.network].price_atom = el.price / this.ATOM_price\n                            this.networks[el.network].price_eth = el.price / this.ETH_price\n                            this.networks[el.network].price_btc = el.price / this.BTC_price\n\n                            switch (true) {\n                                case el.health >= 0 && el.health < 7:\n                                    this.networks[el.network].health_color = 'red'\n                                    break\n                                case el.health >= 7 && el.health < 13:\n                                    this.networks[el.network].health_color = 'orange'\n                                    break\n                                case el.health >= 13:\n                                    this.networks[el.network].health_color = 'green'\n                                    break\n                            }\n\n                            switch (true) {\n                                case el.apr < 0.15:\n                                    this.networks[el.network].speed = 4\n                                    break\n                                case el.apr >= 0.15 && el.apr < 4:\n                                    this.networks[el.network].speed = 4.28378 - 1.89189 * el.apr\n                                    break\n                                case el.apr >= 4:\n                                    this.networks[el.network].speed = 0.5\n                                    break\n                            }\n                        }\n                    })\n                })\n        },\n\n\n        // Currencies price\n        async getCurrenciesPrice() {\n            await fetch('https://rpc.bronbro.io/get_prices/')\n                .then(response => response.json())\n                .then(data => {\n                    this.ATOM_price = parseFloat(data.cosmos)\n                    this.ETH_price = parseFloat(data.ethereum)\n                    this.BTC_price = parseFloat(data.bitcoin)\n                })\n        },\n\n\n        // Account balance\n        updateAccountBalance() {\n            // Recalc\n            for (let network in this.networks) {\n                this.calcNetworkTokensSum(network)\n                this.calcNetworkBalance(network)\n            }\n\n            this.account.delegations_price = 0\n\n            this.account.balance_usdt = 0\n            this.account.balance_atom = 0\n            this.account.balance_eth = 0\n            this.account.balance_btc = 0\n\n            this.account.RPDE_usdt = 0\n            this.account.RPDE_atom = 0\n            this.account.RPDE_eth = 0\n            this.account.RPDE_btc = 0\n\n            for (let network in this.networks) {\n                this.account.delegations_price += this.networks[network].delegations_price\n\n                this.account.balance_usdt += this.networks[network].balance_usdt\n                this.account.balance_atom += this.networks[network].balance_atom\n                this.account.balance_eth += this.networks[network].balance_eth\n                this.account.balance_btc += this.networks[network].balance_btc\n\n                this.account.RPDE_usdt += this.networks[network].RPDE_usdt\n                this.account.RPDE_atom += this.networks[network].RPDE_atom\n                this.account.RPDE_eth += this.networks[network].RPDE_eth\n                this.account.RPDE_btc += this.networks[network].RPDE_btc\n            }\n\n            if (this.account.delegations_price != 0) {\n                this.account.personal_APR = this.account.RPDE_usdt * 365.3 / this.account.delegations_price * 100\n            }\n\n            this.recalc = false\n        },\n\n\n        // Update network\n        async updateNetwork(network) {\n            if (network == 'desmos') {\n                // Desmos singer\n                const offlineSignerDesmos = window.getOfflineSigner('desmos-mainnet'),\n                    accountsDesmos = await offlineSignerDesmos.getAccounts()\n\n                // Set wallet address\n                this.setWallet('desmos', accountsDesmos[0].address)\n            }\n\n            if (network == 'crescent') {\n                // Crescent singer\n                const offlineSignerCrescent = window.getOfflineSigner('crescent-1'),\n                    accountsCrescent = await offlineSignerCrescent.getAccounts()\n\n                // Set wallet address\n                this.setWallet('crescent', accountsCrescent[0].address)\n            }\n\n            if (network == 'omniflix') {\n                // Omniflix hub singer\n                const offlineSignerOmniflix = window.getOfflineSigner('omniflixhub-1'),\n                    accountsOmniflix = await offlineSignerOmniflix.getAccounts()\n\n                // Set wallet address\n                this.setWallet('crescent', accountsOmniflix[0].address)\n            }\n\n            // Get status\n            this.getNetworkStatus(network)\n\n            // Get network tokens\n            this.getNetworkTokens(network).then(() => {\n                // Calc network tokens sum\n                this.calcNetworkTokensSum(network)\n\n                if (this.networks[network].status) {\n                    // Get network data\n                    let networkData = this.getNetworkData(network)\n\n                    // Get network price\n                    let networkPrice = this.getNetworkPrice(network)\n\n                    Promise.all([networkData, networkPrice]).then(() => {\n                        // Calc network RPDE\n                        this.calcNetworkRPDEInCurrency(network)\n\n                        // Calc network balance\n                        this.calcNetworkBalance(network)\n\n                        // Calc delegations price\n                        this.calcDelegationsPrice(network)\n\n                        // Calc rewards price\n                        this.calcRewardsPrice(network)\n\n                        // Update account balance\n                        this.updateAccountBalance()\n                    })\n                }\n            })\n        }\n    }\n})\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"199\":\"cf2bdc24\",\"341\":\"4bb13c76\",\"695\":\"c2367939\",\"798\":\"badec6b6\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"css/\" + chunkId + \".\" + {\"695\":\"947a92f4\",\"798\":\"97df6cfa\"}[chunkId] + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"bro_app:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","var createStylesheet = function(chunkId, fullhref, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + realHref + \")\");\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tlinkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\tdocument.head.appendChild(linkTag);\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"695\":1,\"798\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbro_app\"] = self[\"webpackChunkbro_app\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(86445); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["route","useRoute","layout","computed","meta","__exports__","store","useGlobalStore","emitter","inject","i18n","setNotice","IPFSStatus","emit","global","t","selectCurrency","newCurrency","$patch","currency","showCurrencyDropdown","clickOut","preConnect","commision","form","reactive","type","amount","validators","validator","operator_address","availabel_tokens","name","clearValidator","hideDropdown","setTimeout","document","querySelector","classList","remove","setValidator","description","moniker","networks","networkManageModal","delegations","setAmount","event","target","value","setMAX","async","onSubmit","loaderManageModal","fetch","evmos","lcd_api","wallets","then","response","json","chain","chainId","cosmosChainId","sender","accountAddress","sequence","data","account","base_account","accountNumber","account_number","pubkey","pub_key","key","fee","denom","gas","params","validatorAddress","exponent","msg","createTxMsgDelegate","sign","window","keplr","signDirect","bodyBytes","body","serializeBinary","authInfoBytes","authInfo","isEthereum","rawTx","createTxRaw","signed","Uint8Array","Buffer","from","signature","postOptions","method","headers","generatePostBodyBroadcast","broadcastPost","generateEndpointBroadcast","tx_response","code","manageError","lastTXS","txhash","updateNetwork","error","offlineSigner","getOfflineSigner","rpcEndpoint","rpc_api","gasPrice","client","SigningStargateClient","msgAny","typeUrl","delegatorAddress","simulate","gasUsed","emoney","result","signAndBroadcast","transactionHash","errorCode","message","match","validatorSrcAddress","validatorDstAddress","createTxMsgBeginRedelegate","console","log","onMounted","showManageModal","filter","el","length","tryAgain","config","chainName","rpc","rest","bip44","coinType","bech32Config","bech32PrefixAccAddr","bech32PrefixAccPub","bech32PrefixValAddr","bech32PrefixValPub","bech32PrefixConsAddr","bech32PrefixConsPub","currencies","coinDenom","coinMinimalDenom","coinDecimals","coinGeckoId","feeCurrencies","gasPriceStep","low","average","high","stakeCurrency","tooltip","addEventListener","reset","auth","recalc","notificatios","stickyEvent","scrollY","add","on","promiseCurrencies","getCurrenciesPrice","getNetworksInfo","offlineSignerEvmos","accountsEvmos","getAccounts","setWallet","address","getNetworkStatus","getNetworkTokens","calcNetworkTokensSum","status","promiseData","getNetworkData","Promise","all","calcNetworkRPDEInCurrency","calcNetworkBalance","calcDelegationsPrice","calcRewardsPrice","updateAccountBalance","toBech32","fromBech32","cosmoshub","juno","junoData","cosmoshubData","bostrom","bostromData","osmosisData","emoneyData","gravity","gravityData","stargaze","stargazeData","stride","strideData","checkChains","desmosConfig","crescentConfig","omniflixConfig","accountsDesmos","i","accounts","experimentalSuggestChain","desmos","desmosData","crescent","crescentData","omniflix","omniflixData","notice","modal_data","network","state","unbonding_time","parseInt","showManageSuccessModal","showManageErrorModal","routes","path","component","errorLayut","defaultLayut","router","createRouter","history","createWebHistory","beforeEach","to","next","push","en","createI18n","locale","fallbackLocale","messages","VueI18nMessages","mitt","app","createApp","App","use","createPinia","provide","globalProperties","$filters","toFixed","limit","clickOutside","beforeMount","binding","clickOutsideEvent","contains","unmounted","removeEventListener","directive","mount","userName","useLocalStorage","avatar","balance_usdt","balance_atom","balance_eth","balance_btc","RPDE_usdt","RPDE_atom","RPDE_eth","RPDE_btc","personal_APR","delegations_price","token_name","coingecko_api","health","health_color","ibc_tokens","ibc_percents","availabel_percents","delegations_tokens","delegations_percents","delegations_price_usdt","delegations_price_atom","delegations_price_eth","delegations_price_btc","rewards_tokens","rewards_percents","rewards_price","rewards_price_usdt","rewards_price_atom","rewards_price_eth","rewards_price_btc","RPDE","RPDE_year_usdt","RPDE_year_atom","RPDE_year_eth","RPDE_year_btc","price","price_usdt","price_atom","price_eth","price_btc","apr","speed","total_annual_provision","tokens_sum","osmosis","localStorage","setItem","JSON","stringify","defineStore","CONTRACT_ADDRESS_PASSPORT","node","jsCyber","BTC_price","ETH_price","ATOM_price","showManageRejectModal","actions","enable","getKey","this","setUserInfo","user","startIPFS","getAvatar","Ipfs","create","init","start","relay","enabled","hop","EXPERIMENTAL","pubsub","Addresses","Swarm","Bootstrap","tendermintClient","Tendermint34Client","content","CyberClient","queryContractSmart","active_passport","file","get","extension","chunk","image","URL","createObjectURL","Blob","txs","tx","links","toLowerCase","defaultAccount","parse","getItem","defaultNetworks","Object","assign","forEach","delegation_responses","sum","parseFloat","balance","delegation","validator_address","shares","total","find","availabel","balances","e","ibc","includes","substr","baseDenom","denom_trace","base_denom","baseNetwork","tempNetwork","annual_provision","commission","commission_rates","rate","infos","cosmos","ethereum","bitcoin","offlineSignerDesmos","offlineSignerCrescent","accountsCrescent","offlineSignerOmniflix","accountsOmniflix","networkData","networkPrice","getNetworkPrice","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","f","chunkId","reduce","promises","u","miniCssF","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","url","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","createElement","charset","timeout","nc","setAttribute","src","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","bind","head","appendChild","Symbol","toStringTag","nmd","paths","children","p","createStylesheet","fullhref","resolve","reject","linkTag","rel","onLinkComplete","errorType","realHref","href","err","Error","request","findStylesheet","existingLinkTags","tag","dataHref","existingStyleTags","loadStylesheet","installedCssChunks","miniCss","cssChunks","installedChunks","installedChunkData","promise","loadingEnded","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}