{"version":3,"file":"js/411.0a35b259.js","mappings":"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","sources":["webpack://bro_app/./src/components/account/Networks.vue","webpack://bro_app/./src/components/account/Networks.vue?68c2","webpack://bro_app/./src/components/account/charts/Avatar.vue","webpack://bro_app/./src/components/account/charts/Avatar.vue?ec89","webpack://bro_app/./src/components/account/charts/ChartStake.vue","webpack://bro_app/./src/components/account/charts/ChartStake.vue?4660","webpack://bro_app/./src/components/account/charts/ChartLiquide.vue","webpack://bro_app/./src/components/account/charts/ChartLiquide.vue?bb7e","webpack://bro_app/./src/components/account/charts/ChartAccounts.vue","webpack://bro_app/./src/components/account/charts/ChartAccounts.vue?6b41","webpack://bro_app/./src/components/account/charts/ChartAssets.vue","webpack://bro_app/./src/components/account/charts/ChartAssets.vue?7aaa","webpack://bro_app/./src/components/account/charts/ChartNetworks.vue","webpack://bro_app/./src/components/account/charts/ChartNetworks.vue?5cd5","webpack://bro_app/./src/components/account/Charts.vue","webpack://bro_app/./src/components/account/Charts.vue?21aa","webpack://bro_app/./src/components/account/Stats.vue","webpack://bro_app/./src/components/account/Stats.vue?7fbe","webpack://bro_app/./src/components/modal/ValidatorModal.vue","webpack://bro_app/./src/components/modal/ValidatorModal.vue?59af","webpack://bro_app/./src/components/account/Validators.vue","webpack://bro_app/./src/components/account/Validators.vue?7bab","webpack://bro_app/./src/components/account/Proposals.vue","webpack://bro_app/./src/components/account/Proposals.vue?4ae9","webpack://bro_app/./src/components/modal/AddAddressModal.vue","webpack://bro_app/./src/components/modal/AddAddressModal.vue?e8ab","webpack://bro_app/./src/components/modal/DeleteAddressModal.vue","webpack://bro_app/./src/components/modal/DeleteAddressModal.vue?a0ae","webpack://bro_app/./src/components/account/EditAddressName.vue","webpack://bro_app/./src/components/account/EditAddressName.vue?463c","webpack://bro_app/./src/components/account/ConnectedAddresses.vue","webpack://bro_app/./src/components/account/ConnectedAddresses.vue?7fc1","webpack://bro_app/./src/views/Account.vue","webpack://bro_app/./src/views/Account.vue?727f"],"sourcesContent":["<template>\n    <section class=\"networks\">\n        <div class=\"title\">\n            {{ $t('message.account_networks_title') }}\n        </div>\n\n        <div class=\"list\">\n            <button class=\"network active\">\n                <div class=\"logo\">\n                    <img src=\"/cosmoshub_logo.png\" alt=\"\">\n                </div>\n\n                <div>\n                    <div class=\"name\">{{ store.networks.cosmoshub.name }}</div>\n                    <div class=\"token\">{{ store.networks.cosmoshub.token_name }}</div>\n                </div>\n            </button>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { useGlobalStore } from '@/stores'\n\n    const store = useGlobalStore()\n</script>\n\n\n\n<style scoped>\n    .networks\n    {\n        padding: 14px;\n\n        border-radius: 20px;\n        background: #0d0d0d;\n    }\n\n\n    .networks .title\n    {\n        font-size: 30px;\n        font-weight: 600;\n        line-height: 36px;\n\n        margin-bottom: 20px;\n    }\n\n\n    .networks .list > * + *\n    {\n        margin-top: 4px;\n    }\n\n\n    .networks .network\n    {\n        display: flex;\n\n        width: 100%;\n        padding: 10px;\n\n        transition: background .2s linear;\n        text-align: left;\n\n        border-radius: 14px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .networks .logo\n    {\n        position: relative;\n\n        overflow: hidden;\n\n        width: 40px;\n        height: 40px;\n\n        border-radius: 50%;\n    }\n\n\n    .networks .logo img\n    {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n\n    .networks .logo + *\n    {\n        width: calc(100% - 54px);\n        margin-left: auto;\n    }\n\n\n    .networks .name\n    {\n        font-size: 18px;\n        font-weight: 500;\n        line-height: 100%;\n    }\n\n\n    .networks .token\n    {\n        color: #555;\n        font-size: 12px;\n        line-height: 15px;\n\n        margin-top: 6px;\n\n        text-transform: uppercase;\n    }\n\n\n    .networks .network:hover,\n    .networks .network.active\n    {\n        background: #141414;\n    }\n\n\n\n    @media print, (max-width: 1899px)\n    {\n        .networks .title\n        {\n            font-size: 27px;\n            line-height: 33px;\n        }\n    }\n\n</style>","import script from \"./Networks.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Networks.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Networks.vue?vue&type=style&index=0&id=4e4222cd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4e4222cd\"]])\n\nexport default __exports__","<template>\n    <div class=\"avatar\">\n        <img :src=\"store.account.avatar\" alt=\"\">\n\n        <router-link to=\"/account/passport\" class=\"edit_link\">\n            <div class=\"btn\">\n                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_settings\"></use></svg>\n                <span>{{ $t('message.btn_settings') }}</span>\n            </div>\n        </router-link>\n    </div>\n</template>\n\n\n<script setup>\n    import { useGlobalStore } from '@/stores'\n\n    const store = useGlobalStore()\n</script>\n\n\n<style scoped>\n    .avatar\n    {\n        position: absolute;\n        z-index: 5;\n\n        width: 200px;\n        height: 200px;\n        margin: auto;\n\n        border: 5px solid #0d0d0d;\n        border-radius: 50%;\n\n        inset: 0;\n    }\n\n\n    .avatar img\n    {\n        position: relative;\n        z-index: 10;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n        background: #141414;\n\n        object-fit: cover;\n    }\n\n\n    .avatar .edit_link\n    {\n        color: currentColor;\n        font-size: 14px;\n        line-height: 120%;\n\n        position: absolute;\n        z-index: 20;\n        top: 0;\n        left: 0;\n\n        display: flex;\n\n        width: 100%;\n        height: 100%;\n\n        transition: opacity .2s linear;\n        text-decoration: none;\n\n        opacity: 0;\n        border-radius: 50%;\n        background: rgba(0, 0, 0, .6);\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .avatar .edit_link .btn\n    {\n        display: flex;\n\n        padding: 8px;\n\n        border-radius: 10px;\n        background: #950fff;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .avatar .edit_link .icon\n    {\n        display: block;\n\n        width: 16px;\n        height: 16px;\n        margin-right: 4px;\n    }\n\n    .avatar .edit_link:hover\n    {\n        opacity: 1;\n    }\n\n</style>","import script from \"./Avatar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Avatar.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Avatar.vue?vue&type=style&index=0&id=93c9d96a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-93c9d96a\"]])\n\nexport default __exports__","<template>\n    <div class=\"chart_info\">\n        <div class=\"block_title\">\n            {{ $t('message.account_chart_stake_block_title') }}\n        </div>\n\n        <div class=\"block_desc\">\n            {{ $t('message.account_chart_stake_desc') }}\n        </div>\n\n\n        <div class=\"chart\">\n            <Avatar />\n\n            <Doughnut ref=\"chart\" :data=\"chartData\" :options=\"chartOptions\" />\n        </div>\n\n\n        <div class=\"legends empty\" v-if=\"!chartTotal\">\n            <div class=\"legend\">\n                <div class=\"name\">\n                    <span></span>\n                </div>\n\n                <div class=\"amount\">\n                    <span></span>\n                </div>\n\n                <div class=\"progress\">\n                    <div class=\"bar\"><div></div></div>\n                </div>\n            </div>\n\n            <div class=\"legend\">\n                <div class=\"name\">\n                    <span></span>\n                </div>\n\n                <div class=\"amount\">\n                    <span></span>\n                </div>\n\n                <div class=\"progress\">\n                    <div class=\"bar\"><div></div></div>\n                </div>\n            </div>\n\n            <div class=\"legend\">\n                <div class=\"name\">\n                    <span></span>\n                </div>\n\n                <div class=\"amount\">\n                    <span></span>\n                </div>\n\n                <div class=\"progress\">\n                    <div class=\"bar\"><div></div></div>\n                </div>\n            </div>\n\n            <div class=\"legend\">\n                <div class=\"name\">\n                    <span></span>\n                </div>\n\n                <div class=\"amount\">\n                    <span></span>\n                </div>\n\n                <div class=\"progress\">\n                    <div class=\"bar\"><div></div></div>\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"legends\" v-else>\n            <div class=\"legend\" v-if=\"currentData.total.staked\" :class=\"{'active': chartActiveLegend == 0}\" @mouseenter=\"mouseenterLegend(0)\" @mouseleave=\"mouseleaveLegend()\">\n                <div class=\"name\">\n                    <div class=\"color\" style=\"background-color: #950FFF;\"></div>\n                    <span>{{ $t('message.account_charts_staked_label') }}</span>\n                </div>\n\n                <div class=\"amount\">\n                    <template v-if=\"(currentData.total.staked / Math.pow(10, store.networks[store.currentNetwork].exponent)) < 0.01\">&lt; 0.01</template>\n                    <template v-else>{{ $filters.toFixed(currentData.total.staked / Math.pow(10, store.networks[store.currentNetwork].exponent), 2) }}</template>\n\n                    {{ store.networks[store.currentNetwork].token_name }}\n\n                    <div class=\"price\">\n                        {{ $filters.toFixed(currencyСonversion(currentData.total.staked / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}\n                        {{ store.currentCurrency }}\n                    </div>\n                </div>\n\n                <div class=\"progress\">\n                    <div class=\"bar\"><div style=\"background-color: #950FFF;\" :style=\"setWidth(calcPercents('staked'))\"></div></div>\n                </div>\n            </div>\n\n\n            <div class=\"legend\" v-if=\"currentData.total.liquid_rewards\" :class=\"{'active': chartActiveLegend == 1}\" @mouseenter=\"mouseenterLegend(1)\" @mouseleave=\"mouseleaveLegend()\">\n                <div class=\"name\">\n                    <div class=\"color\" style=\"background-color: #0343E8;\"></div>\n                    <span>{{ $t('message.account_charts_liquid_tokens_label') }}</span>\n                </div>\n\n                <div class=\"amount\">\n                    <template v-if=\"(currentData.total.liquid_rewards / Math.pow(10, store.networks[store.currentNetwork].exponent)) < 0.01\">&lt; 0.01</template>\n                    <template v-else>{{ $filters.toFixed(currentData.total.liquid_rewards / Math.pow(10, store.networks[store.currentNetwork].exponent), 2) }}</template>\n\n                    {{ store.networks[store.currentNetwork].token_name }}\n\n                    <div class=\"price\">\n                        {{ $filters.toFixed(currencyСonversion(currentData.total.liquid_rewards / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}\n                        {{ store.currentCurrency }}\n                    </div>\n                </div>\n\n                <div class=\"progress\">\n                    <div class=\"bar\"><div style=\"background-color: #0343E8;\" :style=\"setWidth(calcPercents('liquid_rewards'))\"></div></div>\n                </div>\n            </div>\n\n\n            <div class=\"legend\" v-if=\"currentData.total.unbonding\" :class=\"{'active': chartFirstActiveLegend == 2}\" @mouseenter=\"mouseenterLegend(2)\" @mouseleave=\"mouseleaveLegend()\">\n                <div class=\"name\">\n                    <div class=\"color\" style=\"background-color: #EB5757;\"></div>\n                    <span>{{ $t('message.account_charts_unbonding_label') }}</span>\n                </div>\n\n                <div class=\"amount\">\n                    <template v-if=\"(currentData.total.unbonding / Math.pow(10, store.networks[store.currentNetwork].exponent)) < 0.01\">&lt; 0.01</template>\n                    <template v-else>{{ $filters.toFixed(currentData.total.unbonding / Math.pow(10, store.networks[store.currentNetwork].exponent), 2) }}</template>\n\n                    {{ store.networks[store.currentNetwork].token_name }}\n\n                    <div class=\"price\">\n                        {{ $filters.toFixed(currencyСonversion(currentData.total.unbonding / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}\n                        {{ store.currentCurrency }}\n                    </div>\n                </div>\n\n                <div class=\"progress\">\n                    <div class=\"bar\"><div style=\"background-color: #EB5757;\" :style=\"setWidth(calcPercents('unbonding'))\"></div></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, computed, reactive, ref } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { currencyСonversion } from '@/utils'\n\n    import { Chart as ChartJS, ArcElement } from 'chart.js'\n    import { Doughnut } from 'vue-chartjs'\n\n    // Components\n    import Avatar from '@/components/account/charts/Avatar.vue'\n\n    ChartJS.register(ArcElement)\n\n\n    const store = useGlobalStore(),\n        chart = ref(null),\n        chartDatasets = reactive([]),\n        chartActiveLegend = ref(null),\n        chartTotal = ref(0),\n        chartData = computed(() => ({\n            datasets: [{\n                data: chartDatasets,\n                backgroundColor: ['#950FFF', '#0343E8', '#EB5757'],\n                borderColor: '#0d0d0d',\n                borderWidth: 4,\n                hoverBackgroundColor: ['#7700E1', '#3400D1', '#D74343'],\n                hoverBorderColor: ['#7700E1', '#3400D1', '#D74343'],\n                borderAlign: 'inner',\n                cutout: '84%',\n            }]\n        })),\n        chartOptions = reactive({\n            responsive: true,\n            plugins: {\n                legend: false,\n                tooltip: false\n            },\n            animation: {\n                duration: 200\n            },\n            transitions: {\n                active: {\n                    animation: {\n                        duration: 200\n                    }\n                }\n            },\n            onHover: (e, item) => {\n                item.length\n                    ? chartActiveLegend.value = item[0].index\n                    : chartActiveLegend.value = null\n            }\n        }),\n        currentWallet = ref({}),\n        currentData = ref({\n            total: {\n                staked: 0,\n                unbonding: 0,\n                liquid_rewards: 0\n            }\n        })\n\n\n    onBeforeMount(() => {\n        if(store.account.currentWallet != 'all') {\n            // Get current walllet data\n            currentWallet.value = store.account.wallets.find(el => el.address == store.account.currentWallet)\n\n            // Get current data\n            currentData.value = currentWallet.value.networks.find(el => el.name == 'cosmoshub')\n        } else {\n            // Sum totals\n            for (let wallet of store.account.wallets) {\n                for (let network of wallet.networks) {\n                    currentData.value.total.staked += network.total.staked,\n                    currentData.value.total.unbonding += network.total.unbonding,\n                    currentData.value.total.liquid_rewards += network.total.liquid_rewards\n                }\n            }\n        }\n\n        // Set chart data\n        chartDatasets.push(currentData.value.total.staked)\n        chartDatasets.push(currentData.value.total.liquid_rewards)\n        chartDatasets.push(currentData.value.total.unbonding)\n\n        // Sum chart total\n        chartTotal.value = currentData.value.total.staked + currentData.value.total.liquid_rewards + currentData.value.total.unbonding\n    })\n\n\n    // Calc percents\n    function calcPercents(type) {\n        let result = 0\n\n        if(chartTotal.value) {\n            result = currentData.value.total[type] / chartTotal.value * 100\n        }\n\n        return result\n    }\n\n\n    // Mouse enter on legend\n    function mouseenterLegend(dataIndex) {\n        let chartInstance = chart.value.chart\n\n        chartActiveLegend.value = dataIndex\n\n        chartInstance.setActiveElements([{\n            datasetIndex: 0,\n            index: dataIndex\n        }])\n\n        chartInstance.update()\n    }\n\n\n    // Mouse leave from legend\n    function mouseleaveLegend() {\n        let chartInstance = chart.value.chart\n\n        chartActiveLegend.value = null\n\n        chartInstance.setActiveElements([])\n        chartInstance.update()\n    }\n\n\n    // Set width\n    function setWidth(percents) {\n        return `width: ${percents}%;`\n    }\n</script>\n\n\n<style scoped>\n    .chart_info\n    {\n        display: flex;\n\n        justify-content: space-between;\n        align-items: flex-start;\n        align-content: flex-start;\n        flex-wrap: wrap;\n    }\n\n\n    .block_title\n    {\n        font-size: 20px;\n        font-weight: 500;\n        line-height: 24px;\n\n        width: 100%;\n        margin-bottom: 8px;\n    }\n\n\n    .block_desc\n    {\n        color: #555;\n        line-height: 110%;\n\n        width: 100%;\n        margin-bottom: 24px;\n    }\n\n\n\n    .chart\n    {\n        position: relative;\n\n        width: 291px;\n        max-width: 100%;\n        height: 291px;\n\n        border-radius: 50%;\n        background: #0d0d0d;\n\n        clip-path: circle(50% at 50% 50%);\n    }\n\n    .chart:before\n    {\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        content: '';\n\n        border: 14px solid #282828;\n        border-radius: 50%;\n    }\n\n\n\n    .legends\n    {\n        width: calc(100% - 307px);\n        margin-left: auto;\n    }\n\n    .legends > * + *\n    {\n        margin-top: 8px;\n    }\n\n\n    .legends .legend\n    {\n        display: flex;\n\n        padding: 6px 8px;\n\n        transition: background .2s linear;\n\n        border-radius: 10px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .legends .legend .name\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 100%;\n\n        display: flex;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .legends .legend .color\n    {\n        width: 10px;\n        height: 10px;\n        margin-right: 4px;\n\n        border-radius: 50%;\n    }\n\n\n    .legends .legend .amount\n    {\n        font-size: 18px;\n        font-weight: 600;\n        line-height: 100%;\n\n        margin-left: auto;\n\n        text-align: right;\n        white-space: nowrap;\n        text-transform: uppercase;\n    }\n\n    .legends .legend .amount .token\n    {\n        margin-left: 4px;\n    }\n\n\n    .legends .legend .price\n    {\n        color: #555;\n        font-size: 12px;\n        font-weight: 400;\n        line-height: 100%;\n\n        margin-top: 4px;\n\n        white-space: nowrap;\n    }\n\n\n    .legends .legend .progress\n    {\n        display: flex;\n\n        width: 100%;\n        margin-top: 8px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .legends .legend .bar\n    {\n        width: 100%;\n        height: 8px;\n\n        border-radius: 4px;\n        background: #282828;\n    }\n\n    .legends .legend .bar div\n    {\n        width: 0;\n        height: 8px;\n\n        transition: width .4s linear;\n\n        border-radius: 4px;\n    }\n\n\n    .legends .legend.active\n    {\n        background: #141414;\n    }\n\n\n\n    .legends.empty .legend .name span,\n    .legends.empty .legend .amount span\n    {\n        display: block;\n\n        width: 80px;\n        height: 14px;\n\n        border-radius: 8px;\n        background: #282828;\n    }\n\n</style>","import script from \"./ChartStake.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChartStake.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChartStake.vue?vue&type=style&index=0&id=0191daa5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0191daa5\"]])\n\nexport default __exports__","<template>\n    <div class=\"chart_info\">\n        <div class=\"block_title\">\n            {{ $t('message.account_chart_liquide_block_title') }}\n        </div>\n\n        <div class=\"block_desc\">\n            {{ $t('message.account_chart_liquide_desc') }}\n        </div>\n\n\n        <div class=\"chart\">\n            <Avatar />\n\n            <Doughnut ref=\"chart\" :data=\"chartData\" :options=\"chartOptions\" />\n        </div>\n\n\n        <div class=\"legends empty\" v-if=\"!chartTotal\">\n            <div class=\"legend\">\n                <div class=\"name\">\n                    <span></span>\n                </div>\n\n                <div class=\"amount\">\n                    <span></span>\n                </div>\n\n                <div class=\"progress\">\n                    <div class=\"bar\"><div></div></div>\n                </div>\n            </div>\n\n            <div class=\"legend\">\n                <div class=\"name\">\n                    <span></span>\n                </div>\n\n                <div class=\"amount\">\n                    <span></span>\n                </div>\n\n                <div class=\"progress\">\n                    <div class=\"bar\"><div></div></div>\n                </div>\n            </div>\n\n            <div class=\"legend\">\n                <div class=\"name\">\n                    <span></span>\n                </div>\n\n                <div class=\"amount\">\n                    <span></span>\n                </div>\n\n                <div class=\"progress\">\n                    <div class=\"bar\"><div></div></div>\n                </div>\n            </div>\n\n            <div class=\"legend\">\n                <div class=\"name\">\n                    <span></span>\n                </div>\n\n                <div class=\"amount\">\n                    <span></span>\n                </div>\n\n                <div class=\"progress\">\n                    <div class=\"bar\"><div></div></div>\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"legends\" v-else>\n            <div class=\"legend\" v-if=\"currentData.total.liquid\" :class=\"{'active': chartActiveLegend == 0}\" @mouseenter=\"mouseenterLegend(0)\" @mouseleave=\"mouseleaveLegend()\">\n                <div class=\"name\">\n                    <div class=\"color\" style=\"background-color: #7879F1;\"></div>\n                    <span>{{ $t('message.account_charts_liquid_tokens_label') }}</span>\n                </div>\n\n                <div class=\"amount\">\n                    <template v-if=\"(currentData.total.liquid / Math.pow(10, store.networks[store.currentNetwork].exponent)) < 0.01\">&lt; 0.01</template>\n                    <template v-else>{{ $filters.toFixed(currentData.total.liquid / Math.pow(10, store.networks[store.currentNetwork].exponent), 2) }}</template>\n\n                    {{ store.networks[store.currentNetwork].token_name }}\n\n                    <div class=\"price\">\n                        {{ $filters.toFixed(currencyСonversion(currentData.total.liquid / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}\n                        {{ store.currentCurrency }}\n                    </div>\n                </div>\n            </div>\n\n\n            <div class=\"legend\" v-if=\"currentData.total.ibc\" :class=\"{'active': chartActiveLegend == 1}\" @mouseenter=\"mouseenterLegend(1)\" @mouseleave=\"mouseleaveLegend()\">\n                <div class=\"name\" @click.prevent=\"toggleActiveClass\">\n                    <div class=\"color\" style=\"background-color: #EF5DA8;\"></div>\n                    <span>{{ $t('message.account_charts_ibc_label') }}</span>\n\n                    <!-- <svg class=\"arr\"><use xlink:href=\"@/assets/sprite.svg#ic_arr_down\"></use></svg> -->\n                </div>\n\n                <div class=\"dropdown\">\n                    <!-- <pre>{{ currentNetwork.balance.liquid.ibc }}</pre> -->\n\n                    <div class=\"tokens\">\n                        <div v-for=\"(item, index) in currentData.balance.liquid.ibc\" :key=\"index\" class=\"item\">\n                            <div class=\"logo\">\n                                <img :src=\"`${item.logo}`\" alt=\"\">\n\n                                <div class=\"on_chain_logo\">\n                                    <img :src=\"`/${store.currentNetwork}_logo.png`\" alt=\"\">\n                                </div>\n                            </div>\n\n                            <div>\n                                <div class=\"token\">{{ item.symbol }}</div>\n\n                                <div class=\"on_chain\">\n                                    {{ $t('message.account_charts_on_chain') }}\n                                    {{ store.networks[store.currentNetwork].name }}\n                                </div>\n                            </div>\n\n                            <div>\n                                <div class=\"amount\">\n                                    <template v-if=\"item.symbol == 'BOOT'\">\n                                        <span v-if=\"(item.amount / Math.pow(10, item.exponent) / 1000000) < 0.01\">&lt; 0.01</span>\n                                        <span v-else>{{ $filters.toFixed(item.amount / Math.pow(10, item.exponent) / 1000000, 2) }}</span>\n                                    </template>\n\n                                    <template v-else>\n                                        <span v-if=\"(item.amount / Math.pow(10, item.exponent)) < 0.01\">&lt; 0.01</span>\n                                        <span v-else>{{ $filters.toFixed(item.amount / Math.pow(10, item.exponent), 2) }}</span>\n                                    </template>\n\n                                    <span class=\"token\" v-if=\"item.symbol == 'BOOT'\">M{{ item.symbol }}</span>\n                                    <span class=\"token\" v-else>{{ item.symbol }}</span>\n\n                                    <div class=\"price\">\n                                        {{ $filters.toFixed(currencyСonversion(item.amount / Math.pow(10, item.exponent), item.symbol), 2) }}\n                                        {{ store.currentCurrency }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <div class=\"legend\" v-if=\"currentData.total.rewards\" :class=\"{'active': chartActiveLegend == 2}\" @mouseenter=\"mouseenterLegend(2)\" @mouseleave=\"mouseleaveLegend()\">\n                <div class=\"name\">\n                    <div class=\"color\" style=\"background-color: #1BC562;\"></div>\n                    <span>{{ $t('message.account_charts_rewards_label') }}</span>\n                </div>\n\n                <div class=\"amount\">\n                    <template v-if=\"(currentData.total.rewards / Math.pow(10, store.networks[store.currentNetwork].exponent)) < 0.01\">&lt; 0.01</template>\n                    <template v-else>{{ $filters.toFixed(currentData.total.rewards / Math.pow(10, store.networks[store.currentNetwork].exponent), 5) }}</template>\n\n                    {{ store.networks[store.currentNetwork].token_name }}\n\n                    <div class=\"price\">\n                        {{ $filters.toFixed(currencyСonversion(currentData.total.rewards / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}\n                        {{ store.currentCurrency }}\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, computed, reactive, ref, inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { currencyСonversion } from '@/utils'\n\n    import { Chart as ChartJS, ArcElement } from 'chart.js'\n    import { Doughnut } from 'vue-chartjs'\n\n    // Components\n    import Avatar from '@/components/account/charts/Avatar.vue'\n\n    ChartJS.register(ArcElement)\n\n\n    const store = useGlobalStore(),\n        i18n = inject('i18n'),\n        chart = ref(null),\n        chartDatasets = reactive([]),\n        chartActiveLegend = ref(null),\n        chartTotal = ref(0),\n        chartData = computed(() => ({\n            labels: [\n                i18n.global.t('message.account_charts_staked_label'),\n                i18n.global.t('message.account_charts_liquid_tokens_label'),\n                i18n.global.t('message.account_charts_unbonding_label')\n            ],\n            datasets: [{\n                data: chartDatasets,\n                backgroundColor: ['#7879F1', '#EF5DA8', '#1BC562'],\n                borderColor: '#0d0d0d',\n                borderWidth: 4,\n                hoverBackgroundColor: ['#7879F1', '#EF5DA8', '#07B14E'],\n                hoverBorderColor: ['#7879F1', '#EF5DA8', '#07B14E'],\n                borderAlign: 'inner',\n                cutout: '80%'\n            }]\n        })),\n        chartOptions = reactive({\n            responsive: true,\n            plugins: {\n                legend: false,\n                tooltip: false\n            },\n            animation: {\n                duration: 200\n            },\n            transitions: {\n                active: {\n                    animation: {\n                        duration: 200\n                    }\n                }\n            },\n            onHover: (e, item) => {\n                item.length\n                    ? chartActiveLegend.value = item[0].index\n                    : chartActiveLegend.value = null\n            }\n        }),\n        currentWallet = ref({}),\n        currentData = ref({\n            total: {\n                liquid: 0,\n                rewards: 0,\n                ibc: 0,\n            },\n            balance: {\n                liquid: {\n                    ibc: []\n                }\n            }\n        })\n\n\n    onBeforeMount(() => {\n        if(store.account.currentWallet != 'all') {\n            // Get current walllet data\n            currentWallet.value = store.account.wallets.find(el => el.address == store.account.currentWallet)\n\n            // Get current network data\n            currentData.value = currentWallet.value.networks.find(el => el.name == 'cosmoshub')\n        } else {\n            for (let wallet of store.account.wallets) {\n                for (let network of wallet.networks) {\n                    // Calc totals\n                    currentData.value.total.liquid += network.total.liquid,\n                    currentData.value.total.ibc += network.total.ibc,\n                    currentData.value.total.rewards += network.total.rewards\n\n                    // Balance - Concat ibc tokens\n                    if(network.balance.liquid.ibc != null) {\n                        network.balance.liquid.ibc.forEach(el => {\n                            let duplicate = currentData.value.balance.liquid.ibc.find(e => e.symbol == el.symbol)\n\n                            duplicate\n                                ? duplicate.amount += el.amount\n                                : currentData.value.balance.liquid.ibc.push(el)\n                        })\n                    }\n                }\n            }\n        }\n\n        // Set chart data\n        chartDatasets.push(currentData.value.total.liquid)\n        chartDatasets.push(currentData.value.total.ibc)\n        chartDatasets.push(currentData.value.total.rewards)\n\n        // Sum chart total\n        chartTotal.value = currentData.value.total.liquid + currentData.value.total.ibc + currentData.value.total.rewards\n    })\n\n\n    // Mouse enter on legend\n    function mouseenterLegend(dataIndex) {\n        let chartInstance = chart.value.chart\n\n        chartActiveLegend.value = dataIndex\n\n        chartInstance.setActiveElements([{\n            datasetIndex: 0,\n            index: dataIndex\n        }])\n\n        chartInstance.update()\n    }\n\n\n    // Mouse leave from legend\n    function mouseleaveLegend() {\n        let chartInstance = chart.value.chart\n\n        chartActiveLegend.value = null\n\n        chartInstance.setActiveElements([])\n        chartInstance.update()\n    }\n\n\n    // Toggle active class\n    function toggleActiveClass(e) {\n        e.target.closest('.legend').classList.toggle('active')\n    }\n</script>\n\n\n<style scoped>\n    .chart_info\n    {\n        display: flex;\n\n        justify-content: space-between;\n        align-items: flex-start;\n        align-content: flex-start;\n        flex-wrap: wrap;\n    }\n\n\n    .block_title\n    {\n        font-size: 20px;\n        font-weight: 500;\n        line-height: 24px;\n\n        width: 100%;\n        margin-bottom: 8px;\n    }\n\n\n    .block_desc\n    {\n        color: #555;\n        line-height: 110%;\n\n        width: 100%;\n        margin-bottom: 24px;\n    }\n\n\n\n    .chart\n    {\n        position: relative;\n\n        width: 291px;\n        max-width: 100%;\n        height: 291px;\n\n        border-radius: 50%;\n        background: #0d0d0d;\n\n        clip-path: circle(50% at 50% 50%);\n    }\n\n    .chart:before\n    {\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        content: '';\n\n        border: 14px solid #282828;\n        border-radius: 50%;\n    }\n\n\n\n    .legends\n    {\n        width: calc(100% - 307px);\n        margin-left: auto;\n    }\n\n    .legends > * + *\n    {\n        margin-top: 8px;\n    }\n\n\n    .legends .legend .dropdown\n    {\n        /* display: none; */\n        width: 100%;\n        margin-top: 8px;\n    }\n\n\n    .legends .legend\n    {\n        display: flex;\n\n        padding: 6px 8px;\n\n        transition: background .2s linear;\n\n        border-radius: 10px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .legends .legend .name\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 100%;\n\n        display: flex;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .legends .legend .color\n    {\n        width: 10px;\n        height: 10px;\n        margin-right: 4px;\n\n        border-radius: 50%;\n    }\n\n\n    .legends .legend .amount\n    {\n        font-size: 18px;\n        font-weight: 600;\n        line-height: 100%;\n\n        margin-left: auto;\n\n        text-align: right;\n        white-space: nowrap;\n        text-transform: uppercase;\n    }\n\n    .legends .legend .amount .token\n    {\n        margin-left: 4px;\n    }\n\n\n    .legends .legend .price\n    {\n        color: #555;\n        font-size: 12px;\n        font-weight: 400;\n        line-height: 100%;\n\n        margin-top: 4px;\n\n        white-space: nowrap;\n    }\n\n\n    .legends .legend .progress\n    {\n        display: flex;\n\n        width: 100%;\n        margin-top: 8px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .legends .legend .bar\n    {\n        width: 100%;\n        height: 8px;\n\n        border-radius: 4px;\n        background: #282828;\n    }\n\n    .legends .legend .bar div\n    {\n        width: 0;\n        height: 8px;\n\n        transition: width .4s linear;\n\n        border-radius: 4px;\n    }\n\n\n    .legends .legend .tokens\n    {\n        margin-top: 8px;\n    }\n\n\n    .legends .legend .tokens .item\n    {\n        display: flex;\n\n        padding-top: 8px;\n\n        border-top: 1px solid rgba(255, 255, 255, .05);\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .legends .legend .tokens .item + .item\n    {\n        margin-top: 8px;\n    }\n\n\n    .legends .legend .tokens .item > *:last-child\n    {\n        margin-left: auto;\n    }\n\n\n    .legends .legend .tokens .token\n    {\n        font-size: 16px;\n        font-weight: 500;\n        line-height: 100%;\n\n        white-space: nowrap;\n    }\n\n\n    .legends .legend .tokens .on_chain\n    {\n        color: #555;\n        font-size: 12px;\n        line-height: 100%;\n\n        margin-top: 4px;\n    }\n\n\n    .legends .legend .tokens .logo\n    {\n        position: relative;\n\n        width: 30px;\n        height: 30px;\n        margin-right: 11px;\n\n        border-radius: 50%;\n    }\n\n    .legends .legend .tokens .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n\n    .legends .legend .tokens .on_chain_logo\n    {\n        position: absolute;\n        right: -3px;\n        bottom: -5px;\n\n        width: 16px;\n        height: 16px;\n\n        border: 1px solid #141414;\n        border-radius: 50%;\n    }\n\n\n    .legends .legend.active\n    {\n        background: #141414;\n    }\n\n\n\n    .legends.empty .legend .name span,\n    .legends.empty .legend .amount span\n    {\n        display: block;\n\n        width: 80px;\n        height: 14px;\n\n        border-radius: 8px;\n        background: #282828;\n    }\n\n</style>","import script from \"./ChartLiquide.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChartLiquide.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChartLiquide.vue?vue&type=style&index=0&id=f0dd2140&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-f0dd2140\"]])\n\nexport default __exports__","<template>\n    <div class=\"chart_info\">\n        <div class=\"block_title\">{{ $t('message.account_chart_accounts_block_title') }}</div>\n\n        <div class=\"block_desc\">{{ $t('message.account_chart_accounts_desc') }}</div>\n\n\n        <div class=\"chart\">\n            <Doughnut ref=\"chart\" :data=\"chartData\" :options=\"chartOptions\" />\n\n            <div class=\"total\">\n                <div class=\"label\">\n                    {{ $t('message.account_charts_total_assets') }}\n                </div>\n\n                <div class=\"price\" v-if=\"(typeof chartActiveLegend == 'undefined' || typeof chartActiveLegend == 'object')\">\n                    {{ $filters.toFixed(currencyСonversion(store.account.totalTokens / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}<span>{{ store.currentCurrency }}</span>\n                </div>\n\n                <template v-for=\"(wallet, index) in store.account.wallets\" :key=\"index\">\n                    <div class=\"price\" v-if=\"chartActiveLegend == index\">\n                        {{ $filters.toFixed(currencyСonversion(wallet.totalTokens / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}<span>{{ store.currentCurrency }}</span>\n                    </div>\n                </template>\n            </div>\n        </div>\n\n\n        <div class=\"legends\">\n            <div v-for=\"(wallet, index) in store.account.wallets\" :key=\"index\" class=\"legend\" :class=\"{'active': chartActiveLegend == index}\" @mouseenter=\"mouseenterLegend(index)\" @mouseleave=\"mouseleaveLegend()\">\n                <div class=\"address\">\n                    <span v-if=\"wallet.nickname\">{{ wallet.nickname }}</span>\n                    <span v-else>{{ wallet.address.slice(0, 13) + '...' + wallet.address.slice(-6) }}</span>\n                </div>\n\n                <div class=\"price\">\n                    <div>\n                        {{ $filters.toFixed(currencyСonversion(wallet.totalTokens / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}\n                        {{ store.currentCurrency }}\n                    </div>\n\n                    <div class=\"percents\">\n                        {{ $filters.toFixed(calcPercents(wallet.totalPrice), 2) }}%\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, computed, reactive, ref } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { currencyСonversion } from '@/utils'\n\n    import { Chart as ChartJS, ArcElement } from 'chart.js'\n    import { Doughnut } from 'vue-chartjs'\n\n    ChartJS.register(ArcElement)\n\n\n    const store = useGlobalStore(),\n        chart = ref(null),\n        chartDatasets = reactive([]),\n        chartActiveLegend = ref(null),\n        chartData = computed(() => ({\n            datasets: [{\n                data: chartDatasets,\n                backgroundColor: ['#4B0582', '#550694', '#6B09B7', '#800CDB', '#950FFF', '#A636FF', '#B75DFF', '#C983FF'],\n                borderColor: '#0d0d0d',\n                borderWidth: 4,\n                hoverBackgroundColor: ['#4B0582', '#550694', '#6B09B7', '#800CDB', '#950FFF', '#A636FF', '#B75DFF', '#C983FF'],\n                hoverBorderColor: ['#4B0582', '#550694', '#6B09B7', '#800CDB', '#950FFF', '#A636FF', '#B75DFF', '#C983FF'],\n                borderAlign: 'inner',\n                cutout: '84%',\n            }]\n        })),\n        chartOptions = reactive({\n            responsive: true,\n            plugins: {\n                legend: false,\n                tooltip: false\n            },\n            animation: {\n                duration: 200\n            },\n            transitions: {\n                active: {\n                    animation: {\n                        duration: 200\n                    }\n                }\n            },\n            onHover: (e, item) => {\n                item.length\n                    ? chartActiveLegend.value = item[0].index\n                    : chartActiveLegend.value = null\n            }\n        })\n\n\n    onBeforeMount(() => {\n        // Set data for chart\n        store.account.wallets.forEach(el => chartDatasets.push(el.totalTokens))\n    })\n\n\n    // Mouse enter on legend\n    function mouseenterLegend(dataIndex) {\n        let chartInstance = chart.value.chart\n\n        chartActiveLegend.value = dataIndex\n\n        chartInstance.setActiveElements([{\n            datasetIndex: 0,\n            index: dataIndex\n        }])\n\n        chartInstance.update()\n    }\n\n\n    // Mouse leave from legend\n    function mouseleaveLegend() {\n        let chartInstance = chart.value.chart\n\n        chartActiveLegend.value = null\n\n        chartInstance.setActiveElements([])\n        chartInstance.update()\n    }\n\n\n    // Calc percents\n    function calcPercents(price) {\n        let result = 0\n\n        if(store.account.totalPrice) {\n            result = price / store.account.totalPrice * 100\n        }\n\n        return result\n    }\n</script>\n\n\n<style scoped>\n    .chart_info\n    {\n        display: flex;\n\n        justify-content: space-between;\n        align-items: flex-start;\n        align-content: flex-start;\n        flex-wrap: wrap;\n    }\n\n\n    .block_title\n    {\n        font-size: 20px;\n        font-weight: 500;\n        line-height: 24px;\n\n        width: 100%;\n        margin-bottom: 8px;\n    }\n\n\n    .block_desc\n    {\n        color: #555;\n        line-height: 110%;\n\n        width: 100%;\n        margin-bottom: 24px;\n    }\n\n\n\n    .chart\n    {\n        position: relative;\n\n        width: 291px;\n        max-width: 100%;\n        height: 291px;\n\n        border-radius: 50%;\n        background: #0d0d0d;\n\n        clip-path: circle(50% at 50% 50%);\n    }\n\n    .chart:before\n    {\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        content: '';\n\n        border: 14px solid #282828;\n        border-radius: 50%;\n    }\n\n\n    .chart .total\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 100%;\n\n        position: absolute;\n        z-index: 0;\n        top: 0;\n        left: 0;\n\n        display: flex;\n\n        width: 100%;\n        height: 100%;\n\n        text-align: center;\n        white-space: nowrap;\n        pointer-events: none;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .chart .total .label\n    {\n        width: 100%;\n        margin-bottom: 8px;\n    }\n\n\n    .chart .total .price\n    {\n        color: #fff;\n        font-size: 18px;\n        font-weight: 500;\n        line-height: 100%;\n\n        width: 100%;\n    }\n\n    .chart .total .price.hide\n    {\n        display: none;\n    }\n\n    .chart .total .price span\n    {\n        font-size: 12px;\n        font-weight: 400;\n        line-height: 100%;\n\n        margin-left: 4px;\n\n        text-transform: uppercase;\n    }\n\n\n\n    .legends\n    {\n        width: calc(100% - 307px);\n        margin-left: auto;\n    }\n\n\n    .legends .legend\n    {\n        display: flex;\n\n        padding: 6px 8px;\n\n        cursor: pointer;\n        transition: background .2s linear;\n\n        border-radius: 10px;\n        background: #141414;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .legends .legend + .legend\n    {\n        margin-top: 8px;\n    }\n\n\n    .legends .legend .logo\n    {\n        width: 24px;\n        height: 24px;\n        margin-right: 8px;\n\n        border-radius: 50%;\n    }\n\n    .legends .legend .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n\n    .legends .legend .token,\n    .legends .legend .address\n    {\n        font-size: 14px;\n        line-height: 100%;\n    }\n\n    .legends .legend .address\n    {\n        overflow: hidden;\n\n        width: calc(100% - 140px);\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .legends .legend .price\n    {\n        font-size: 14px;\n        line-height: 100%;\n\n        margin-left: auto;\n\n        text-align: right;\n        white-space: nowrap;\n    }\n\n\n    .legends .legend .percents\n    {\n        color: #464646;\n        font-size: 12px;\n        line-height: 100%;\n\n        margin-top: 4px;\n    }\n\n\n    .legends .legend:hover,\n    .legends .legend.active\n    {\n        background: #212121;\n    }\n\n\n    .legends.empty .legend\n    {\n        height: 40px;\n\n        border-radius: 8px;\n        background: #282828;\n    }\n\n</style>","import script from \"./ChartAccounts.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChartAccounts.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChartAccounts.vue?vue&type=style&index=0&id=b6129ed2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b6129ed2\"]])\n\nexport default __exports__","<template>\n    <div class=\"chart_info\">\n        <div class=\"block_title\">{{ $t('message.account_chart_assets_block_title') }}</div>\n\n        <div class=\"block_desc\">{{ $t('message.account_chart_assets_desc') }}</div>\n\n\n        <div class=\"chart\">\n            <Doughnut ref=\"chart\" :data=\"chartData\" :options=\"chartOptions\" />\n\n            <div class=\"total\">\n                <div class=\"label\">\n                    {{ $t('message.account_charts_total_assets') }}\n                </div>\n\n                <div class=\"price\">\n                    {{ $filters.toFixed(currencyСonversion(currentData.totalTokens / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}<span>{{ store.currentCurrency }}</span>\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"legends\" :class=\"{ empty: !currentData.totalTokens }\">\n            <template v-if=\"!currentData.totalTokens\">\n            <div class=\"legend\"></div>\n\n            <div class=\"legend\"></div>\n\n            <div class=\"legend\"></div>\n\n            <div class=\"legend\"></div>\n            </template>\n\n            <template v-else>\n            <div v-for=\"(item, index) in currentData.balance.groupByDenom\" :key=\"index\" class=\"legend\" :class=\"{'active': chartActiveLegend == index}\" @mouseenter=\"mouseenterLegend(index)\" @mouseleave=\"mouseleaveLegend()\">\n                <div class=\"logo\">\n                    <img :src=\"item.logo\" alt=\"\">\n                </div>\n\n                <div class=\"token\">\n                    {{ item.symbol }}\n                </div>\n\n                <div class=\"price\">\n                    <div>\n                        {{ $filters.toFixed(currencyСonversion(item.amount / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}\n                        {{ store.currentCurrency }}\n                    </div>\n\n                    <div class=\"percents\">\n                        {{ $filters.toFixed(calcPercents(item.symbol), 2) }}%\n                    </div>\n                </div>\n            </div>\n            </template>\n        </div>\n    </div>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, computed, reactive, ref } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { currencyСonversion } from '@/utils'\n\n    import { Chart as ChartJS, ArcElement } from 'chart.js'\n    import { Doughnut } from 'vue-chartjs'\n\n    ChartJS.register(ArcElement)\n\n\n    const store = useGlobalStore(),\n        chart = ref(null),\n        chartDatasets = reactive([]),\n        chartActiveLegend = ref(null),\n        chartColors = reactive([]),\n        chartTotal = ref(0),\n        chartData = computed(() => ({\n            datasets: [{\n                data: chartDatasets,\n                backgroundColor: chartColors,\n                borderColor: '#0d0d0d',\n                borderWidth: 4,\n                hoverBackgroundColor: chartColors,\n                hoverBorderColor: chartColors,\n                borderAlign: 'inner',\n                cutout: '84%',\n            }]\n        })),\n        chartOptions = reactive({\n            responsive: true,\n            plugins: {\n                legend: false,\n                tooltip: false\n            },\n            animation: {\n                duration: 200\n            },\n            transitions: {\n                active: {\n                    animation: {\n                        duration: 200\n                    }\n                }\n            },\n            onHover: (e, item) => {\n                item.length\n                    ? chartActiveLegend.value = item[0].index\n                    : chartActiveLegend.value = null\n            }\n        }),\n        currentWallet = ref({}),\n        currentData = ref({\n            totalTokens: 0,\n            balance: {\n                groupByDenom: []\n            }\n        })\n\n\n    onBeforeMount(() => {\n        if(store.account.currentWallet != 'all') {\n            // Get current walllet data\n            currentWallet.value = store.account.wallets.find(el => el.address == store.account.currentWallet)\n\n            // Get current data\n            currentData.value = currentWallet.value.networks.find(el => el.name == 'cosmoshub')\n        } else {\n            let allGroupByDenom = []\n\n            // Group by denom\n            for (let wallet of store.account.wallets) {\n                for (let network of wallet.networks) {\n                    network.balance.groupByDenom.forEach(el => {\n                        let duplicate = allGroupByDenom.find(e => e.symbol == el.symbol)\n\n                        if(duplicate) {\n                            duplicate.amount += el.amount\n                        } else {\n                            allGroupByDenom.push({\n                                'amount': el.amount,\n                                'logo': el.logo,\n                                'symbol': el.symbol\n                            })\n                        }\n                    })\n                }\n            }\n\n            // Sort data\n            allGroupByDenom.sort((a, b) => {\n                if (a.amount > b.amount) { return -1 }\n                if (a.amount < b.amount) { return 1 }\n                return 0\n            })\n\n            // Set data\n            currentData.value.balance.groupByDenom = allGroupByDenom\n\n            // Total tokens\n            currentData.value.totalTokens = store.account.totalTokens\n        }\n\n\n        // Set data for chart\n        currentData.value.balance.groupByDenom.forEach(el => {\n            chartDatasets.push(el.amount)\n\n            let color = store.networkColors[el.symbol]\n\n            if(el.symbol.substring(0, 2) == 'st') {\n                color = store.networkColors.STRD\n            }\n\n            if(el.symbol.substring(0, 3) == 'stk') {\n                color = store.networkColors.XPRT\n            }\n\n            if(el.symbol.substring(0, 1) == 'q') {\n                color = store.networkColors.QCK\n            }\n\n            chartColors.push(color)\n        })\n\n\n        // Sum chart total\n        currentData.value.balance.groupByDenom.forEach(el => chartTotal.value += el.amount)\n    })\n\n\n    // Mouse enter on legend\n    function mouseenterLegend(dataIndex) {\n        let chartInstance = chart.value.chart\n\n        chartActiveLegend.value = dataIndex\n\n        chartInstance.setActiveElements([{\n            datasetIndex: 0,\n            index: dataIndex\n        }])\n\n        chartInstance.update()\n    }\n\n\n    // Mouse leave from legend\n    function mouseleaveLegend() {\n        let chartInstance = chart.value.chart\n\n        chartActiveLegend.value = null\n\n        chartInstance.setActiveElements([])\n        chartInstance.update()\n    }\n\n\n    // Calc percents\n    function calcPercents(symbol) {\n        let result = 0,\n            token = currentData.value.balance.groupByDenom.find(e => e.symbol == symbol)\n\n        if(currentData.value.totalTokens) {\n            result = token.amount / currentData.value.totalTokens * 100\n        }\n\n        return result\n    }\n</script>\n\n\n<style scoped>\n    .chart_info\n    {\n        display: flex;\n\n        justify-content: space-between;\n        align-items: flex-start;\n        align-content: flex-start;\n        flex-wrap: wrap;\n    }\n\n\n    .block_title\n    {\n        font-size: 20px;\n        font-weight: 500;\n        line-height: 24px;\n\n        width: 100%;\n        margin-bottom: 8px;\n    }\n\n\n    .block_desc\n    {\n        color: #555;\n        line-height: 110%;\n\n        width: 100%;\n        margin-bottom: 24px;\n    }\n\n\n\n    .chart\n    {\n        position: relative;\n\n        width: 291px;\n        max-width: 100%;\n        height: 291px;\n\n        border-radius: 50%;\n        background: #0d0d0d;\n\n        clip-path: circle(50% at 50% 50%);\n    }\n\n    .chart:before\n    {\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        content: '';\n\n        border: 14px solid #282828;\n        border-radius: 50%;\n    }\n\n\n    .chart .total\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 100%;\n\n        position: absolute;\n        z-index: 0;\n        top: 0;\n        left: 0;\n\n        display: flex;\n\n        width: 100%;\n        height: 100%;\n\n        text-align: center;\n        white-space: nowrap;\n        pointer-events: none;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .chart .total .label\n    {\n        width: 100%;\n        margin-bottom: 8px;\n    }\n\n\n    .chart .total .price\n    {\n        color: #fff;\n        font-size: 18px;\n        font-weight: 500;\n        line-height: 100%;\n\n        width: 100%;\n    }\n\n    .chart .total .price.hide\n    {\n        display: none;\n    }\n\n    .chart .total .price span\n    {\n        font-size: 12px;\n        font-weight: 400;\n        line-height: 100%;\n\n        margin-left: 4px;\n\n        text-transform: uppercase;\n    }\n\n\n\n    .legends\n    {\n        width: calc(100% - 307px);\n        margin-left: auto;\n    }\n\n\n    .legends .legend\n    {\n        display: flex;\n\n        padding: 6px 8px;\n\n        cursor: pointer;\n        transition: background .2s linear;\n\n        border-radius: 10px;\n        background: #141414;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .legends .legend + .legend\n    {\n        margin-top: 8px;\n    }\n\n\n    .legends .legend .logo\n    {\n        width: 24px;\n        height: 24px;\n        margin-right: 8px;\n\n        border-radius: 50%;\n    }\n\n    .legends .legend .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n\n    .legends .legend .token,\n    .legends .legend .address\n    {\n        font-size: 14px;\n        line-height: 100%;\n    }\n\n    .legends .legend .address\n    {\n        overflow: hidden;\n\n        width: calc(100% - 140px);\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .legends .legend .price\n    {\n        font-size: 14px;\n        line-height: 100%;\n\n        margin-left: auto;\n\n        text-align: right;\n        white-space: nowrap;\n    }\n\n\n    .legends .legend .percents\n    {\n        color: #464646;\n        font-size: 12px;\n        line-height: 100%;\n\n        margin-top: 4px;\n    }\n\n\n    .legends .legend:hover,\n    .legends .legend.active\n    {\n        background: #212121;\n    }\n\n\n    .legends.empty .legend\n    {\n        height: 40px;\n\n        border-radius: 8px;\n        background: #282828;\n    }\n\n</style>","import script from \"./ChartAssets.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChartAssets.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChartAssets.vue?vue&type=style&index=0&id=fd006176&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-fd006176\"]])\n\nexport default __exports__","<template>\n    <div class=\"chart_info\">\n        <div class=\"block_title\">{{ $t('message.account_chart_networks_block_title') }}</div>\n\n        <div class=\"block_desc\">{{ $t('message.account_chart_networks_desc') }}</div>\n\n\n        <div class=\"chart\">\n            <Doughnut ref=\"chart\" :data=\"chartData\" :options=\"chartOptions\" />\n\n            <div class=\"total\">\n                <div class=\"label\">\n                    {{ $t('message.account_charts_total_assets') }}\n                </div>\n\n                <div class=\"price\">\n                    {{ $filters.toFixed(currencyСonversion(currentData.totalTokens / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}\n                    <span>{{ store.currentCurrency }}</span>\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"legends\" :class=\"{ empty: !currentData.totalTokens }\">\n            <template v-if=\"!currentData.totalTokens\">\n            <div class=\"legend\"></div>\n\n            <div class=\"legend\"></div>\n\n            <div class=\"legend\"></div>\n\n            <div class=\"legend\"></div>\n            </template>\n\n            <template v-else>\n            <div v-for=\"(network, index) in currentData.networks\" :key=\"index\" class=\"legend\" :class=\"{'active': chartActiveLegend == index}\" @mouseenter=\"mouseenterLegend(index)\" @mouseleave=\"mouseleaveLegend()\">\n                <div class=\"logo\">\n                    <img :src=\"`/${network.name}_logo.png`\" alt=\"\">\n                </div>\n\n                <div class=\"token\">\n                    {{ store.networks[network.name].name }}\n                </div>\n\n                <div class=\"price\">\n                    <div>{{ $filters.toFixed(calcPercents(network.totalTokens), 2) }}%</div>\n\n                    <div class=\"percents\">\n                        {{ $filters.toFixed(currencyСonversion(network.totalTokens / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}\n                        {{ store.currentCurrency }}\n                    </div>\n                </div>\n            </div>\n            </template>\n        </div>\n    </div>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, computed, reactive, ref } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { currencyСonversion } from '@/utils'\n\n    import { Chart as ChartJS, ArcElement } from 'chart.js'\n    import { Doughnut } from 'vue-chartjs'\n\n    ChartJS.register(ArcElement)\n\n\n    const store = useGlobalStore(),\n        chart = ref(null),\n        chartDatasets = reactive([]),\n        chartActiveLegend = ref(null),\n        chartColors = reactive([]),\n        chartData = computed(() => ({\n            datasets: [{\n                data: chartDatasets,\n                backgroundColor: chartColors,\n                borderColor: '#0d0d0d',\n                borderWidth: 4,\n                hoverBackgroundColor: chartColors,\n                hoverBorderColor: chartColors,\n                borderAlign: 'inner',\n                cutout: '84%',\n            }]\n        })),\n        chartOptions = reactive({\n            responsive: true,\n            plugins: {\n                legend: false,\n                tooltip: false\n            },\n            animation: {\n                duration: 200\n            },\n            transitions: {\n                active: {\n                    animation: {\n                        duration: 200\n                    }\n                }\n            },\n            onHover: (e, item) => {\n                item.length\n                    ? chartActiveLegend.value = item[0].index\n                    : chartActiveLegend.value = null\n            }\n        }),\n        currentData = ref({\n            totalTokens: 0,\n            networks: []\n        })\n\n\n    onBeforeMount(() => {\n        if(store.account.currentWallet != 'all') {\n            // Get current walllet data\n            currentData.value = store.account.wallets.find(el => el.address == store.account.currentWallet)\n        } else {\n            // Sum data for chart\n            for (let wallet of store.account.wallets) {\n                for (let network of wallet.networks) {\n                    let duplicate = currentData.value.networks.find(e => e.name == network.name)\n\n                    if(duplicate) {\n                        duplicate.totalTokens += network.totalTokens\n                    } else {\n                        currentData.value.networks.push({\n                            name: network.name,\n                            color: network.color,\n                            totalTokens: network.totalTokens\n                        })\n                    }\n                }\n            }\n\n            // Total tokens\n            currentData.value.totalTokens = store.account.totalTokens\n        }\n\n        // Set data for chart\n        currentData.value.networks.forEach(network => {\n            chartDatasets.push(network.totalTokens)\n            chartColors.push(network.color)\n        })\n    })\n\n\n    // Mouse enter on legend\n    function mouseenterLegend(dataIndex) {\n        let chartInstance = chart.value.chart\n\n        chartActiveLegend.value = dataIndex\n\n        chartInstance.setActiveElements([{\n            datasetIndex: 0,\n            index: dataIndex\n        }])\n\n        chartInstance.update()\n    }\n\n\n    // Mouse leave from legend\n    function mouseleaveLegend() {\n        let chartInstance = chart.value.chart\n\n        chartActiveLegend.value = null\n\n        chartInstance.setActiveElements([])\n        chartInstance.update()\n    }\n\n\n    // Calc percents\n    function calcPercents(amount) {\n        let result = 0\n\n        if(currentData.value.totalTokens) {\n            result = amount / currentData.value.totalTokens * 100\n        }\n\n        return result\n    }\n</script>\n\n\n\n<style scoped>\n    .chart_info\n    {\n        display: flex;\n\n        justify-content: space-between;\n        align-items: flex-start;\n        align-content: flex-start;\n        flex-wrap: wrap;\n    }\n\n\n    .block_title\n    {\n        font-size: 20px;\n        font-weight: 500;\n        line-height: 24px;\n\n        width: 100%;\n        margin-bottom: 8px;\n    }\n\n\n    .block_desc\n    {\n        color: #555;\n        line-height: 110%;\n\n        width: 100%;\n        margin-bottom: 24px;\n    }\n\n\n\n    .chart\n    {\n        position: relative;\n\n        width: 291px;\n        max-width: 100%;\n        height: 291px;\n\n        border-radius: 50%;\n        background: #0d0d0d;\n\n        clip-path: circle(50% at 50% 50%);\n    }\n\n    .chart:before\n    {\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        content: '';\n\n        border: 14px solid #282828;\n        border-radius: 50%;\n    }\n\n\n    .chart .total\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 100%;\n\n        position: absolute;\n        z-index: 0;\n        top: 0;\n        left: 0;\n\n        display: flex;\n\n        width: 100%;\n        height: 100%;\n\n        text-align: center;\n        white-space: nowrap;\n        pointer-events: none;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .chart .total .label\n    {\n        width: 100%;\n        margin-bottom: 8px;\n    }\n\n\n    .chart .total .price\n    {\n        color: #fff;\n        font-size: 18px;\n        font-weight: 500;\n        line-height: 100%;\n\n        width: 100%;\n    }\n\n    .chart .total .price.hide\n    {\n        display: none;\n    }\n\n    .chart .total .price span\n    {\n        font-size: 12px;\n        font-weight: 400;\n        line-height: 100%;\n\n        margin-left: 4px;\n\n        text-transform: uppercase;\n    }\n\n\n\n    .legends\n    {\n        width: calc(100% - 307px);\n        margin-left: auto;\n    }\n\n\n    .legends .legend\n    {\n        display: flex;\n\n        padding: 6px 8px;\n\n        cursor: pointer;\n        transition: background .2s linear;\n\n        border-radius: 10px;\n        background: #141414;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .legends .legend + .legend\n    {\n        margin-top: 8px;\n    }\n\n\n    .legends .legend .logo\n    {\n        width: 24px;\n        height: 24px;\n        margin-right: 8px;\n\n        border-radius: 50%;\n    }\n\n    .legends .legend .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n\n    .legends .legend .token,\n    .legends .legend .address\n    {\n        font-size: 14px;\n        line-height: 100%;\n    }\n\n    .legends .legend .address\n    {\n        overflow: hidden;\n\n        width: calc(100% - 140px);\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .legends .legend .price\n    {\n        font-size: 14px;\n        line-height: 100%;\n\n        margin-left: auto;\n\n        text-align: right;\n        white-space: nowrap;\n    }\n\n\n    .legends .legend .percents\n    {\n        color: #464646;\n        font-size: 12px;\n        line-height: 100%;\n\n        margin-top: 4px;\n    }\n\n\n    .legends .legend:hover,\n    .legends .legend.active\n    {\n        background: #212121;\n    }\n\n\n    .legends.empty .legend\n    {\n        height: 40px;\n\n        border-radius: 8px;\n        background: #282828;\n    }\n\n</style>","import script from \"./ChartNetworks.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChartNetworks.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChartNetworks.vue?vue&type=style&index=0&id=0148fc10&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0148fc10\"]])\n\nexport default __exports__","<template>\n    <div class=\"tabs\">\n        <button class=\"btn\" :class=\"{'active': chartActive == 1}\" @click.prevent=\"chartActive = 1\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_account_charts_tab_stake'))\">\n            {{ $t('message.account_charts_tab_stake') }}\n        </button>\n\n        <button class=\"btn\" :class=\"{'active': chartActive == 2}\" @click.prevent=\"chartActive = 2\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_account_charts_tab_liquide'))\">\n            {{ $t('message.account_charts_tab_liquide') }}\n        </button>\n\n        <button class=\"btn\" :class=\"{'active': chartActive == 3}\" @click.prevent=\"chartActive = 3\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_account_charts_tab_accounts'))\">\n            {{ $t('message.account_charts_tab_accounts') }}\n        </button>\n\n        <button class=\"btn\" :class=\"{'active': chartActive == 4}\" @click.prevent=\"chartActive = 4\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_account_charts_tab_assets'))\">\n            {{ $t('message.account_charts_tab_assets') }}\n        </button>\n\n        <button class=\"btn\" :class=\"{'active': chartActive == 5}\" @click.prevent=\"chartActive = 5\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_account_charts_tab4'))\">\n            {{ $t('message.account_charts_tab_networks') }}\n        </button>\n    </div>\n\n\n    <div class=\"loader_wrap\" v-if=\"loading\">\n        <div class=\"loader\"><span></span></div>\n    </div>\n\n\n    <template v-else>\n    <ChartStake v-if=\"chartActive == 1\" />\n\n    <ChartLiquide v-if=\"chartActive == 2\" />\n\n    <ChartAccounts v-if=\"chartActive == 3\" />\n\n    <ChartAssets v-if=\"chartActive == 4\" />\n\n    <ChartNetworks v-if=\"chartActive == 5\" />\n    </template>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, ref, inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { generateAddress } from '@/utils'\n\n    // Components\n    import ChartStake from '@/components/account/charts/ChartStake.vue'\n    import ChartLiquide from '@/components/account/charts/ChartLiquide.vue'\n    import ChartAccounts from '@/components/account/charts/ChartAccounts.vue'\n    import ChartAssets from '@/components/account/charts/ChartAssets.vue'\n    import ChartNetworks from '@/components/account/charts/ChartNetworks.vue'\n\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter'),\n        loading = ref(true),\n        chartActive = ref(1)\n\n\n    onBeforeMount(async () => {\n        // Get data\n        await getData()\n    })\n\n\n    // Get data\n    async function getData() {\n        // Set loader\n        loading.value = true\n\n        // Get cosmos hub data\n        const cosmosNetworkPrice = store.prices.find(el => el.symbol == 'ATOM').price\n\n        for (let wallet of store.account.wallets) {\n            try {\n                await fetch(`https://rpc.bronbro.io/account/account_balance/${generateAddress(store.networks.cosmoshub.address_prefix, wallet.address)}`)\n                    .then(res => res.json())\n                    .then(response => {\n                        let totals = {\n                            liquid: 0,\n                            staked: 0,\n                            unbonding: 0,\n                            rewards: 0,\n                            outside: 0,\n                            ibc: 0,\n                            liquid_rewards: 0\n                        },\n                        groupByDenom = []\n\n\n                        // Clean data\n                        if(response.liquid && response.liquid.native) {\n                            for (let i = response.liquid.native.length - 1; i >= 0; i--) {\n                                if (response.liquid.native[i].symbol === null || response.liquid.native[i].exponent === null || response.liquid.native[i].price === null) {\n                                    response.liquid.native.splice(i, 1)\n                                }\n                            }\n                        }\n\n                        if(response.liquid && response.liquid.ibc) {\n                            for (let i = response.liquid.ibc.length - 1; i >= 0; i--) {\n                                if (response.liquid.ibc[i].symbol === null || response.liquid.ibc[i].exponent === null || response.liquid.ibc[i].price === null) {\n                                    response.liquid.ibc.splice(i, 1)\n                                }\n                            }\n                        }\n\n                        if(response.staked) {\n                            for (let i = response.staked.length - 1; i >= 0; i--) {\n                                if (response.staked[i].symbol === null || response.staked[i].exponent === null || response.staked[i].price === null) {\n                                    response.staked.splice(i, 1)\n                                }\n                            }\n                        }\n\n                        if(response.unbonding) {\n                            for (let i = response.unbonding.length - 1; i >= 0; i--) {\n                                if (response.unbonding[i].symbol === null || response.unbonding[i].exponent === null || response.unbonding[i].price === null) {\n                                    response.unbonding.splice(i, 1)\n                                }\n                            }\n                        }\n\n                        if(response.rewards) {\n                            for (let i = response.rewards.length - 1; i >= 0; i--) {\n                                if (response.rewards[i].symbol === null || response.rewards[i].exponent === null || response.rewards[i].price === null) {\n                                    response.rewards.splice(i, 1)\n                                }\n                            }\n                        }\n\n\n                        // Calc liquid tokens\n                        if(response.liquid && response.liquid.native) {\n                            response.liquid.native.forEach(el => {\n                                // Sum total\n                                totals.liquid += el.amount\n                                totals.liquid_rewards += el.amount\n\n                                // Group by denom\n                                let duplicate = groupByDenom.find(e => e.symbol == el.symbol)\n\n                                if(duplicate) {\n                                    duplicate.amount += (el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)) * Math.pow(10, store.networks.cosmoshub.exponent)\n                                } else {\n                                    groupByDenom.push({\n                                        'amount': (el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)) * Math.pow(10, store.networks.cosmoshub.exponent),\n                                        'logo': el.logo,\n                                        'symbol': el.symbol\n                                    })\n                                }\n                            })\n                        }\n\n                        // Calc ibc tokens\n                        if(response.liquid && response.liquid.ibc) {\n                            response.liquid.ibc.forEach(el => {\n                                // Convert to current denom\n                                el.amountCurrentDenom = el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)\n\n                                // Sum total\n                                totals.ibc += parseFloat(el.amountCurrentDenom * Math.pow(10, store.networks.cosmoshub.exponent))\n\n                                // Group by denom\n                                let duplicate = groupByDenom.find(e => e.symbol == el.symbol)\n\n                                if(duplicate) {\n                                    duplicate.amount += (el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)) * Math.pow(10, store.networks.cosmoshub.exponent)\n                                } else {\n                                    groupByDenom.push({\n                                        'amount': (el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)) * Math.pow(10, store.networks.cosmoshub.exponent),\n                                        'logo': el.logo,\n                                        'symbol': el.symbol\n                                    })\n                                }\n                            })\n                        }\n\n                        // Calc staked tokens\n                        if(response.staked) {\n                            response.staked.forEach(el => {\n                                // Sum total\n                                totals.staked += el.amount\n\n                                // Group by denom\n                                let duplicate = groupByDenom.find(e => e.symbol == el.symbol)\n\n                                if(duplicate) {\n                                    duplicate.amount += (el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)) * Math.pow(10, store.networks.cosmoshub.exponent)\n                                } else {\n                                    groupByDenom.push({\n                                        'amount': (el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)) * Math.pow(10, store.networks.cosmoshub.exponent),\n                                        'logo': el.logo,\n                                        'symbol': el.symbol\n                                    })\n                                }\n                            })\n                        }\n\n                        // Calc unbonding tokens\n                        if(response.unbonding) {\n                            response.unbonding.forEach(el => {\n                                // Sum total\n                                totals.unbonding += el.amount\n\n                                // Group by denom\n                                let duplicate = groupByDenom.find(e => e.symbol == el.symbol)\n\n                                if(duplicate) {\n                                    duplicate.amount += (el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)) * Math.pow(10, store.networks.cosmoshub.exponent)\n                                } else {\n                                    groupByDenom.push({\n                                        'amount': (el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)) * Math.pow(10, store.networks.cosmoshub.exponent),\n                                        'logo': el.logo,\n                                        'symbol': el.symbol\n                                    })\n                                }\n                            })\n                        }\n\n                        // Calc rewards tokens\n                        if(response.rewards) {\n                            response.rewards.forEach(el => {\n                                // Convert to current denom\n                                el.amountCurrentDenom = el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)\n\n                                // Sum total\n                                if(el.amount * Math.pow(10, el.exponent) >= 1) {\n                                    totals.rewards += parseFloat(el.amountCurrentDenom * Math.pow(10, store.networks.cosmoshub.exponent))\n                                }\n\n                                totals.liquid_rewards = totals.liquid + totals.rewards\n\n                                // Group by denom\n                                let duplicate = groupByDenom.find(e => e.symbol == el.symbol)\n\n                                if(duplicate) {\n                                    duplicate.amount += (el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)) * Math.pow(10, store.networks.cosmoshub.exponent)\n                                } else {\n                                    groupByDenom.push({\n                                        'amount': (el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)) * Math.pow(10, store.networks.cosmoshub.exponent),\n                                        'logo': el.logo,\n                                        'symbol': el.symbol\n                                    })\n                                }\n                            })\n                        }\n\n\n                        // Set data in network\n                        let currentNetworkInWallet = wallet.networks.find(network => network.name == 'cosmoshub')\n\n                        currentNetworkInWallet.address = response.address\n                        currentNetworkInWallet.total = totals\n\n                        currentNetworkInWallet.totalTokens = 0\n                        currentNetworkInWallet.totalTokens += totals.liquid + totals.staked + totals.unbonding + totals.rewards + totals.outside + totals.ibc\n\n                        currentNetworkInWallet.balance = {\n                            liquid: {\n                                native: response.liquid && response.liquid.native ? response.liquid.native : null,\n                                ibc: response.liquid && response.liquid.ibc ? response.liquid.ibc : null\n                            },\n                            staked: response.staked,\n                            unbonding: response.unbonding,\n                            rewards: response.rewards,\n                            groupByDenom: groupByDenom.sort((a, b) => {\n                                if (a.amount > b.amount) { return -1 }\n                                if (a.amount < b.amount) { return 1 }\n                                return 0\n                            })\n                        }\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n\n        // Sum wallet total tokens\n        for (let wallet of store.account.wallets) {\n            wallet.totalTokens = 0\n\n            for (let network of wallet.networks) {\n                wallet.totalTokens += network.totalTokens\n            }\n        }\n\n\n        // Sum account total tokens\n        store.account.totalTokens = 0\n\n        for (let wallet of store.account.wallets) {\n            store.account.totalTokens += wallet.totalTokens\n        }\n\n\n        // Hide loader\n        loading.value = false\n    }\n\n\n    // Set actual data\n    function setActualData() {\n        if(store.account.currentWallet != 'all') {\n            // Get current walllet data\n            // currentData.value = store.account.wallets.find(el => el.address == store.account.currentWallet)\n\n            // Get current network data\n            // currentNetwork.value = currentData.value.networks.find(el => el.name == 'cosmoshub')\n\n            // Calc charts totals\n            // totalChartFirst.value = currentNetwork.value.total.staked + currentNetwork.value.total.liquid_rewards + currentNetwork.value.total.unbonding\n\n            // currentNetwork.value.balance.groupByDenom.forEach(el => totalChartThird.value += el.amount)\n\n\n            // Set data for first chart\n            // chartDatasetsFirst.push(currentNetwork.value.total.staked)\n            // chartDatasetsFirst.push(currentNetwork.value.total.liquid_rewards)\n            // chartDatasetsFirst.push(currentNetwork.value.total.unbonding)\n\n\n            // Set data for second chart\n            // chartDatasetsSecond.push(currentNetwork.value.total.liquid)\n            // chartDatasetsSecond.push(currentNetwork.value.total.ibc)\n            // chartDatasetsSecond.push(currentNetwork.value.total.rewards)\n\n\n            // Set data for third chart\n            // currentNetwork.value.balance.groupByDenom.forEach(el => {\n            //     chartDatasetsThird.push(el.amount)\n\n            //     let color = store.networkColors[el.symbol]\n\n            //     if(el.symbol.substring(0, 2) == 'st') {\n            //         color = store.networkColors.STRD\n            //     }\n\n            //     if(el.symbol.substring(0, 3) == 'stk') {\n            //         color = store.networkColors.XPRT\n            //     }\n\n            //     if(el.symbol.substring(0, 1) == 'q') {\n            //         color = store.networkColors.QCK\n            //     }\n\n            //     chartColorsThird.push(color)\n            // })\n\n\n            // Set data for fourth chart\n            // currentData.value.networks.forEach(network => {\n            //     chartDatasetsFourth.push(network.totalPrice_usdt)\n            //     chartColorsFourth.push(network.color)\n            // })\n        } else {\n            let totals = {\n                liquid: 0,\n                staked: 0,\n                unbonding: 0,\n                rewards: 0,\n                outside: 0,\n                ibc: 0,\n                liquid_rewards: 0\n            },\n            allGroupByDenom = []\n\n\n            // Get current walllet data\n            // for (let wallet of store.account.wallets) {\n            //     currentData.value.totalPrice_usdt += wallet.totalPrice_usdt,\n            //     currentData.value.totalPrice_eth += wallet.totalPrice_eth,\n            //     currentData.value.totalPrice_btc += wallet.totalPrice_btc,\n            //     currentData.value.totalPrice_atom += wallet.totalPrice_atom\n            // }\n\n            // Get current network data\n            currentNetwork.value = store.account.wallets[0].networks.find(el => el.name == 'cosmoshub')\n\n\n            // Calc charts totals\n            for (let wallet of store.account.wallets) {\n                for (let network of wallet.networks) {\n                    if(network.name == 'cosmoshub') {\n                        totals.liquid += network.total.liquid,\n                        totals.staked += network.total.staked ,\n                        totals.unbonding += network.total.unbonding,\n                        totals.rewards += network.total.rewards,\n                        totals.outside += network.total.outside,\n                        totals.ibc += network.total.ibc,\n                        totals.liquid_rewards += network.total.liquid_rewards\n\n                        network.balance.groupByDenom.forEach(el => totalChartThird.value += el.amount)\n                    }\n                }\n            }\n\n            // totalChartFirst.value = totals.staked + totals.liquid_rewards + totals.unbonding\n\n\n            // Balance\n            let i = 0\n\n            for (let wallet of store.account.wallets) {\n                for (let network of wallet.networks) {\n                    if(network.name == 'cosmoshub') {\n                        // Concat ibc\n                        if(i && network.balance.liquid.ibc != null) {\n                            network.balance.liquid.ibc.forEach(el => {\n                                if(currentNetwork.value.balance.liquid.ibc != null) {\n                                    let duplicate = currentNetwork.value.balance.liquid.ibc.find(e => e.symbol == el.symbol)\n\n                                    duplicate\n                                        ? duplicate.amount += el.amount\n                                        : currentNetwork.value.balance.liquid.ibc.push(el)\n                                } else {\n                                    currentNetwork.value.balance.liquid.ibc = []\n                                    currentNetwork.value.balance.liquid.ibc.push(el)\n                                }\n                            })\n                        }\n\n                        // Group by denom\n                        network.balance.groupByDenom.forEach(el => {\n                            let duplicate = allGroupByDenom.find(e => e.symbol == el.symbol)\n\n                            if(duplicate) {\n                                duplicate.amount += el.amount\n                            } else {\n                                allGroupByDenom.push({\n                                    'amount': el.amount,\n                                    'logo': el.logo,\n                                    'symbol': el.symbol\n                                })\n                            }\n                        })\n\n                        i++\n                    }\n                }\n            }\n\n            allGroupByDenom.sort((a, b) => {\n                if (a.amount > b.amount) { return -1 }\n                if (a.amount < b.amount) { return 1 }\n                return 0\n            })\n\n\n            // Set data for first chart\n            // chartDatasetsFirst.push(totals.staked)\n            // chartDatasetsFirst.push(totals.liquid_rewards)\n            // chartDatasetsFirst.push(totals.unbonding)\n\n\n            // Set data for second chart\n            // chartDatasetsSecond.push(totals.liquid)\n            // chartDatasetsSecond.push(totals.ibc)\n            // chartDatasetsSecond.push(totals.rewards)\n\n\n            // Set data for first/second legends\n            // currentNetwork.value.total = totals\n\n\n            // Set data for third chart\n            allGroupByDenom.forEach(el => {\n                chartDatasetsThird.push(el.amount)\n\n                let color = store.networkColors[el.symbol]\n\n                if(el.symbol.substring(0, 2) == 'st') {\n                    color = store.networkColors.STRD\n                }\n\n                if(el.symbol.substring(0, 3) == 'stk') {\n                    color = store.networkColors.XPRT\n                }\n\n                if(el.symbol.substring(0, 1) == 'q') {\n                    color = store.networkColors.QCK\n                }\n\n                chartColorsThird.push(color)\n            })\n\n\n            // Set data for third legends\n            currentNetwork.value.balance.groupByDenom = allGroupByDenom\n\n\n            // Set data for fourth chart\n            let cosmosHubWalletTotalPrice_usdt = 0,\n                cosmosHubWalletTotalPrice_atom = 0,\n                cosmosHubWalletTotalPrice_btc = 0,\n                cosmosHubWalletTotalPrice_eth = 0\n\n            for (let wallet of store.account.wallets) {\n                for (let network of wallet.networks) {\n                    if(network.name == 'cosmoshub') {\n                        cosmosHubWalletTotalPrice_usdt += network.totalPrice_usdt\n                        cosmosHubWalletTotalPrice_atom += network.totalPrice_atom\n                        cosmosHubWalletTotalPrice_btc += network.totalPrice_ubttc\n                        cosmosHubWalletTotalPrice_eth += network.totalPrice_eth\n                    }\n                }\n            }\n\n            // Set data for fourth legends\n            currentData.value.networks.push({\n                name: 'cosmoshub',\n                totalPrice_usdt: cosmosHubWalletTotalPrice_usdt,\n                totalPrice_eth: cosmosHubWalletTotalPrice_eth,\n                totalPrice_btc: cosmosHubWalletTotalPrice_btc,\n                totalPrice_atom: cosmosHubWalletTotalPrice_atom\n            })\n\n            // Set data to chart\n            chartDatasetsFourth.push(cosmosHubWalletTotalPrice_usdt)\n            chartColorsFourth.push(currentNetwork.value.color)\n        }\n    }\n</script>\n\n\n<style scoped>\n    .tabs\n    {\n        display: flex;\n\n        width: 100%;\n        margin-bottom: 24px;\n\n        justify-content: flex-start;\n        align-items: stretch;\n        align-content: stretch;\n        flex-wrap: nowrap;\n    }\n\n\n    .tabs .btn\n    {\n        color: #555;\n        font-size: 16px;\n        line-height: 100%;\n\n        display: block;\n\n        width: 100%;\n        min-height: 62px;\n        padding: 10px 0 9px;\n\n        text-align: center;\n\n        border-bottom: 1px solid rgba(255, 255, 255, .1);\n    }\n\n    .tabs .btn + .btn\n    {\n        margin-left: 4px;\n    }\n\n    .tabs .btn:hover,\n    .tabs .btn.active\n    {\n        color: #950fff;\n\n        border-color: #950fff;\n    }\n\n\n    .loader_wrap\n    {\n        position: relative;\n\n        height: auto;\n        padding: 0;\n\n        background: none;\n    }\n\n</style>","import script from \"./Charts.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Charts.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Charts.vue?vue&type=style&index=0&id=4ec965ae&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4ec965ae\"]])\n\nexport default __exports__","<template>\n    <section class=\"stats\">\n        <!-- <pre>{{ data }}</pre> -->\n\n        <div class=\"row\">\n            <div class=\"item\">\n                <div class=\"label\">\n                    {{ $t('message.account_APR') }}\n                </div>\n\n                <div class=\"loader_wrap\" v-if=\"loading\">\n                    <div class=\"loader\"><span></span></div>\n                </div>\n\n                <div class=\"val\" v-else>\n                    {{ $filters.toFixed(APR * 100, 2) }}%\n                </div>\n            </div>\n\n\n            <div class=\"item\">\n                <div class=\"label\">\n                    {{ $t('message.account_rewards') }}\n                </div>\n\n                <div class=\"loader_wrap\" v-if=\"loading\">\n                    <div class=\"loader\"><span></span></div>\n                </div>\n\n                <div class=\"val\" v-else>\n                    {{ '~' + $filters.toFixed(currencyСonversion(totalRewardTokens / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}\n\n                    <div class=\"currency\">{{ store.currentCurrency }}</div>\n                </div>\n            </div>\n\n\n            <div class=\"item\">\n                <div class=\"label\">\n                    {{ $t('message.account_passport_value') }}\n                </div>\n\n                <div class=\"loader_wrap\" v-if=\"loading\">\n                    <div class=\"loader\"><span></span></div>\n                </div>\n\n                <div class=\"val\" v-else>\n                    {{ '~' + $filters.toFixed(currencyСonversion(store.account.totalTokens / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}\n\n                    <div class=\"currency\">{{ store.currentCurrency }}</div>\n                </div>\n            </div>\n\n\n            <div class=\"item\">\n                <div class=\"label\">\n                    {{ $t('message.account_RPDE') }}\n                </div>\n\n                <div class=\"loader_wrap\" v-if=\"loading\">\n                    <div class=\"loader\"><span></span></div>\n                </div>\n\n                <div class=\"val\" v-else>\n                    {{ '~' + $filters.toFixed(currencyСonversion(store.account.RPDE, store.networks[store.currentNetwork].token_name), 2) }}\n\n                    <div class=\"currency\">{{ store.currentCurrency }}</div>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { ref, onBeforeMount } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { generateAddress, currencyСonversion } from '@/utils'\n\n    const store = useGlobalStore(),\n        loading = ref(true),\n        totalRewardTokens = ref(0),\n        APR = ref(0),\n        RPDE = ref(0)\n\n\n    onBeforeMount(async () => {\n        // Get data\n        await getData()\n    })\n\n\n    // Get data\n    async function getData() {\n        // Set loader\n        loading.value = true\n\n        for (const wallet of store.account.wallets) {\n            // Get cosmos hub data\n            let cosmosHubAddress = generateAddress(store.networks[store.currentNetwork].address_prefix, wallet.address)\n\n            try {\n                await fetch(`https://rpc.bronbro.io/account/account_info/${cosmosHubAddress}`)\n                    .then(res => res.json())\n                    .then(response => {\n                        // Set network info\n                        let currentNetworkInWallet = wallet.networks.find(network => network.name == 'cosmoshub')\n\n                        currentNetworkInWallet.info = response\n\n                        // Set current data\n                        APR = response.apr\n                    })\n\n                // Sum account rewards\n                for (let wallet of store.account.wallets) {\n                    for (let network of wallet.networks) {\n                        totalRewardTokens.value += network.total.rewards\n                    }\n                }\n\n                // Calc wallet info\n                wallet.RPDE = 0\n\n                for (const network of wallet.networks) {\n                    wallet.RPDE += network.info.rpde.amount / Math.pow(10, network.info.rpde.exponent)\n                }\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n\n        // Calc account info\n        store.account.RPDE = 0\n\n        for (const wallet of store.account.wallets) {\n            store.account.info.RPDE_USDT += wallet.RPDE\n        }\n\n\n        // Set current data\n        if(store.account.currentWallet != 'all') {\n            // Current wallet\n            let currentWallet = store.account.wallets.find(el => el.address == store.account.currentWallet)\n\n            RPDE.value = currentWallet.RPDE\n        } else {\n            RPDE.value = store.account.RPDE\n        }\n\n\n        // Hide loader\n        loading.value = false\n    }\n</script>\n\n\n<style scoped>\n    .row\n    {\n        margin-bottom: -20px;\n        margin-left: -20px;\n\n        align-items: stretch;\n        align-content: stretch;\n    }\n\n    .row > *\n    {\n        width: calc(25% - 20px);\n        margin-bottom: 20px;\n        margin-left: 20px;\n    }\n\n\n    .item\n    {\n        padding: 16px 8px;\n\n        text-align: center;\n\n        border-radius: 20px;\n        background: #0d0d0d;\n    }\n\n\n    .label\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 17px;\n\n        width: 100%;\n        margin-bottom: 8px;\n    }\n\n\n    .val\n    {\n        font-size: 24px;\n        font-weight: 700;\n        line-height: 100%;\n\n        white-space: nowrap;\n    }\n\n\n    .val .currency\n    {\n        color: #555;\n        font-size: 16px;\n        font-weight: 400;\n        line-height: 100%;\n\n        margin-top: 4px;\n    }\n\n\n    .loader_wrap\n    {\n        position: relative;\n\n        height: auto;\n        margin: 8px auto -4px;\n\n        background: none;\n    }\n\n    .loader\n    {\n        width: 23px;\n        height: 23px;\n    }\n\n</style>","import script from \"./Stats.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Stats.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Stats.vue?vue&type=style&index=0&id=2ac7ac36&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2ac7ac36\"]])\n\nexport default __exports__","<template>\n    <section class=\"modal\" id=\"validator_modal\">\n        <div class=\"modal_content\" @click.self=\"emitter.emit('closeValidatorModal')\">\n            <div class=\"data\">\n                <button class=\"close_btn\" @click.prevent=\"emitter.emit('closeValidatorModal')\">\n                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n                </button>\n\n                <div class=\"modal_title\">\n                    {{ $t('message.validator_modal_title') }}\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"logo\">\n                        <div class=\"power\">\n                            {{ store.validatorInfo.result[0][getValidatorInfo('validator_rank')] }}\n                            <svg><use xlink:href=\"@/assets/sprite.svg#bg_rank\"></use></svg>\n                        </div>\n\n                        <img :src=\"store.validatorInfo.result[0][getValidatorInfo('logo_path')]\" alt=\"\" @error=\"imageLoadError\">\n                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_user\"></use></svg>\n                    </div>\n\n                    <div class=\"info\">\n                        <div class=\"name\">{{ props.validator.moniker }}</div>\n\n                        <div class=\"operator_address\">\n                            <div class=\"label\">\n                                {{ $t('message.validator_modal_operator_address_label') }}\n                            </div>\n\n                            <div class=\"val\">\n                                {{ props.validator.operator_address }}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"active_set\" :class=\"{ green: store.validatorInfo.result[0][getValidatorInfo('is_active_set')] }\">\n                        <template v-if=\"store.validatorInfo.result[0][getValidatorInfo('is_active_set')]\">\n                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                        <span>{{ $t('message.validator_modal_active_set') }}</span>\n                        </template>\n\n                        <template v-else>\n                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_notice\"></use></svg>\n                        <span>{{ $t('message.validator_modal_inactive_set') }}</span>\n                        </template>\n                    </div>\n                </div>\n\n                <div class=\"btns\">\n                    <a :href=\"`https://${props.validator.website.replace('https://', '')}`\" target=\"_blank\" rel=\"noopener nofollow\" class=\"link\">\n                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_website\"></use></svg>\n                        <span>{{ $t('message.validator_modal_website_btn') }}</span>\n                    </a>\n\n                    <a :href=\"`https://www.mintscan.io/${store.networks[store.currentNetwork].mintscanAlias}/validators/${props.validator.operator_address}`\" target=\"_blank\" rel=\"noopener nofollow\" class=\"link\" v-if=\"store.networks[store.currentNetwork].mintscanAlias\">\n                        <img src=\"@/assets/mintscan_logo.png\" alt=\"\">\n                        <span>{{ $t('message.validator_modal_mintscan_btn') }}</span>\n                    </a>\n\n                    <a :href=\"`https://score.bronbro.io/network?network=${store.currentNetwork}`\" target=\"_blank\" rel=\"noopener nofollow\" class=\"link\">\n                        <img src=\"@/assets/broscore_logo.svg\" alt=\"\">\n                        <span>{{ $t('message.validator_modal_broscore_btn') }}</span>\n                    </a>\n                </div>\n\n                <div class=\"details\">\n                    <div class=\"label\">\n                        {{ $t('message.validator_modal_details_label') }}\n                    </div>\n\n                    <div class=\"val\">\n                        {{ props.validator.details }}\n                    </div>\n                </div>\n\n                <div class=\"features\">\n                    <div class=\"row\">\n                        <div class=\"feature\" @mouseover=\"emitter.emit('setNotification', $t('message.validator_modal_col_greed_notice'))\">\n                            <div class=\"label\">\n                                {{ $t('message.validator_modal_commission_label') }}\n                            </div>\n\n                            <div class=\"val\">\n                                {{ $filters.toFixed(store.validatorInfo.result[0][getValidatorInfo('greed')] * 100, 2) }}%\n                            </div>\n                        </div>\n\n                        <div class=\"feature\" @mouseover=\"emitter.emit('setNotification', $t('message.validator_modal_col_self_bonded_ownership_notice'))\">\n                            <div class=\"label\" v-html=\"$t('message.validator_modal_ownership_label')\"></div>\n\n                            <div class=\"val\">\n                                <span>\n                                    {{ new Number($filters.toFixed(store.validatorInfo.result[0][getValidatorInfo('ownership')] * store.validatorInfo.result[0][getValidatorInfo('staked')] / store.networks[store.currentNetwork].exponent, 0)).toLocaleString() }}\n                                </span>\n                                /\n                                <span>\n                                    {{ $filters.toFixed(store.validatorInfo.result[0][getValidatorInfo('ownership')] * 100, 2) }}%\n                                </span>\n                            </div>\n                        </div>\n\n                        <div class=\"feature\" @mouseover=\"emitter.emit('setNotification', $t('message.validator_modal_col_total_delegated_notice'))\">\n                            <div class=\"label\">\n                                {{ $t('message.validator_modal_total_delegated_label') }}\n                            </div>\n\n                            <div class=\"val\">\n                                {{ new Number($filters.toFixed(store.validatorInfo.result[0][getValidatorInfo('staked')] / store.networks[store.currentNetwork].exponent, 0)).toLocaleString() }}\n                            </div>\n                        </div>\n\n                        <div class=\"feature\" @mouseover=\"emitter.emit('setNotification', $t('message.validator_modal_col_voted_notice', { voted: $filters.toFixed(store.validatorInfo.result[0][getValidatorInfo('voted')], 2) }))\">\n                            <div class=\"label\">\n                                {{ $t('message.validator_modal_voted_label') }}\n                            </div>\n\n                            <div class=\"val\">\n                                {{ $filters.toFixed(store.validatorInfo.result[0][getValidatorInfo('voted')], 0) }}\n                            </div>\n                        </div>\n\n                        <div class=\"feature\" @mouseover=\"emitter.emit('setNotification', $t('message.validator_modal_col_blurring_notice'))\">\n                            <div class=\"label\">\n                                {{ $t('message.validator_modal_blurring_label') }}\n                            </div>\n\n                            <div class=\"val\">\n                                {{ $filters.toFixed(store.validatorInfo.result[0][getValidatorInfo('blurring')] * 100, 2) }}%\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"overlay\"></div>\n    </section>\n</template>\n\n\n<script setup>\n    import { inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter'),\n        props = defineProps(['validator'])\n\n    await fetch(`https://rpc.bronbro.io/bro_score/?network=${store.currentNetwork}&validator=${props.validator.operator_address}`)\n        .then(res => res.json())\n        .then(response => {\n            store.validatorInfo = response\n\n            // Add blurring\n            store.validatorInfo.schema.push('blurring')\n\n            store.validatorInfo.result.forEach(el => {\n                el.push(el[store.validatorInfo.schema.indexOf('staked')] / el[store.validatorInfo.schema.indexOf('delegator_shares')])\n            })\n        })\n\n\n    // Replacement of the logo if it is not present\n    function imageLoadError(event) {\n        event.target.classList.add('hide')\n\n        event.target.closest('.logo').style.backgroundColor = store.colors[Math.floor((Math.random()*store.colors.length))]\n    }\n\n\n    // Get validator data from shema\n    function getValidatorInfo(columnName) {\n        return store.validatorInfo.schema.indexOf(columnName)\n    }\n</script>\n\n\n<style scoped>\n    .modal_content .data\n    {\n        width: 960px;\n        padding: 24px;\n\n        background: #0d0d0d;\n    }\n\n\n    .modal_content .modal_title\n    {\n        margin-bottom: 40px;\n    }\n\n\n    .data > .row\n    {\n        flex-wrap: nowrap;\n    }\n\n\n    .logo\n    {\n        position: relative;\n\n        display: flex;\n\n        width: 100px;\n        min-width: 100px;\n        height: 100px;\n        padding: 17px;\n\n        border-radius: 50%;\n        background: #fff;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .logo img\n    {\n        display: block;\n\n        max-width: 100%;\n        max-height: 100%;\n\n        border-radius: 50%;\n    }\n\n    .logo img.hide\n    {\n        display: none;\n    }\n\n\n    .logo .icon\n    {\n        display: none;\n\n        width: 48px;\n        height: 48px;\n    }\n\n    .logo img.hide + .icon\n    {\n        display: block;\n    }\n\n\n\n    .power\n    {\n        color: #fff;\n        font-size: 12px;\n        font-weight: 500;\n        line-height: 34px;\n\n        position: absolute;\n        z-index: 3;\n        top: -10px;\n        right: 0;\n\n        display: block;\n\n        width: 34px;\n        height: 34px;\n\n        text-align: center;\n    }\n\n    .power svg\n    {\n        color: #950fff;\n\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n    }\n\n\n\n    .info\n    {\n        width: 100%;\n        margin: 0 0 0 20px;\n    }\n\n\n    .info .name\n    {\n        font-size: 30px;\n        font-weight: 500;\n        line-height: 100%;\n\n        display: flex;\n\n        min-height: 44px;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .info .name > div\n    {\n        max-width: calc(100% - 124px);\n    }\n\n\n    .info .operator_address\n    {\n        margin-top: 14px;\n    }\n\n\n    .info .operator_address .label\n    {\n        font-size: 14px;\n        line-height: 100%;\n\n        margin-bottom: 10px;\n\n        opacity: .4;\n    }\n\n    .info .operator_address .val\n    {\n        font-size: 14px;\n        line-height: 100%;\n\n        overflow: hidden;\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .active_set\n    {\n        line-height: 100%;\n\n        display: flex;\n\n        padding: 10px 14px;\n\n        white-space: nowrap;\n\n        border-radius: 24px;\n        background: #353535;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: nowrap;\n    }\n\n    .active_set.green\n    {\n        padding: 9px 14px 11px;\n\n        opacity: 1;\n        background: #1bc562;\n    }\n\n    .active_set .icon\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n        margin-right: 4px;\n    }\n\n\n\n    .btns\n    {\n        display: flex;\n\n        margin-top: 30px;\n        margin-bottom: -8px;\n        margin-left: -8px;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .btns > *\n    {\n        margin-bottom: 8px;\n        margin-left: 8px;\n    }\n\n\n    .btns .link\n    {\n        color: currentColor;\n        font-size: 14px;\n        line-height: 100%;\n\n        display: flex;\n\n        min-height: 32px;\n        padding: 4px 6px;\n\n        transition: background .2s linear;\n        text-decoration: none;\n\n        border-radius: 10px;\n        background: #191919;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .btns .link .icon\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n        margin-right: 8px;\n    }\n\n    .btns .link img\n    {\n        display: block;\n\n        width: 24px;\n        height: 20px;\n        margin-right: 8px;\n    }\n\n\n    .btns .link:hover\n    {\n        background: #950fff;\n    }\n\n\n\n    .details\n    {\n        margin-top: 30px;\n    }\n\n\n    .details .label\n    {\n        font-size: 14px;\n        line-height: 100%;\n\n        margin-bottom: 8px;\n\n        opacity: .4;\n    }\n\n\n    .details .val\n    {\n        font-size: 14px;\n        line-height: 120%;\n    }\n\n\n\n    .features\n    {\n        margin-top: 30px;\n    }\n\n\n    .features .row\n    {\n        margin-bottom: -24px;\n        margin-left: -24px;\n\n        align-items: stretch;\n        align-content: stretch;\n    }\n\n    .features .row > *\n    {\n        width: calc(20% - 24px);\n        margin-bottom: 24px;\n        margin-left: 24px;\n    }\n\n\n    .features .feature\n    {\n        padding: 10px;\n\n        border-radius: 12px;\n        background: #141414;\n    }\n\n\n    .features .label\n    {\n        line-height: 120%;\n\n        min-height: 52px;\n        margin-bottom: 10px;\n\n        opacity: .4;\n    }\n\n\n    .features .val\n    {\n        font-weight: 500;\n        line-height: 120%;\n\n        white-space: nowrap;\n    }\n</style>\n","import script from \"./ValidatorModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidatorModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ValidatorModal.vue?vue&type=style&index=0&id=47ad97eb&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-47ad97eb\"]])\n\nexport default __exports__","<template>\n    <section class=\"validators\">\n        <div class=\"title\">\n            {{ $t('message.account_validators_title') }}\n        </div>\n\n        <div class=\"titles\">\n            <div class=\"col_account_name\">\n                {{ $t('message.account_validators_col_account_name') }}\n            </div>\n\n            <div class=\"col_network\">\n                {{ $t('message.account_validators_col_network') }}\n            </div>\n\n            <div class=\"col_validator\">\n                {{ $t('message.account_validators_col_validator') }}\n            </div>\n\n            <div class=\"col_percent\">\n                {{ $t('message.account_validators_col_account_percent') }}\n            </div>\n\n            <div class=\"col_percent\">\n                {{ $t('message.account_validators_col_passport_percent') }}\n            </div>\n        </div>\n\n        <div class=\"loader_wrap\" v-if=\"loading\">\n            <div class=\"loader\"><span></span></div>\n        </div>\n\n        <div class=\"items\" v-else>\n            <!-- <pre>{{ wallets }}</pre> -->\n\n            <template v-for=\"(wallet, index) in wallets\" :key=\"index\" v-if=\"wallets.length\">\n            <div class=\"item\" :class=\"{ 'hide': index >= 3 && !showAll }\" :style=\"{ order: wallet.totalTokens * -1 }\">\n                <div class=\"col_account_name\">\n                    <span v-if=\"wallet.nickname\">{{ wallet.nickname }}</span>\n                    <span v-else>{{ wallet.address.slice(0, 8) + '...' + wallet.address.slice(-5) }}</span>\n                </div>\n\n                <div class=\"col_network\">\n                    <div class=\"logo\">\n                        <img :src=\"`@/assets/${store.currentNetwork}_logo.png`\" alt=\"\">\n                    </div>\n\n                    <div>{{ store.networks[store.currentNetwork].name }}</div>\n                </div>\n\n                <div class=\"col_validator\" @click.prevent=\"toggleActiveClass\" v-if=\"wallet.validators.length\">\n                    <div class=\"logo\" v-for=\"(validator, validators_index) in wallet.validators\" :key=\"validators_index\">\n                        <img :src=\"validator.mintscan_avatar\" :alt=\"validator.moniker\" @error=\"imageLoadError\">\n                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_user\"></use></svg>\n                    </div>\n\n                    <svg class=\"arr\"><use xlink:href=\"@/assets/sprite.svg#ic_arr_down\"></use></svg>\n                </div>\n\n                <div class=\"col_validator empty\" v-else>\n                    {{ $t('message.account_validators_empty_text') }}\n                </div>\n\n                <div class=\"col_percent\"></div>\n\n                <div class=\"col_percent\">\n                    {{ $filters.toFixed(wallet.totalTokens / totalPassportTokens * 100, 2) }} %\n                </div>\n\n                <div class=\"list\">\n                    <div class=\"item sub_item\" v-for=\"(validator, validators_index) in wallet.validators\" :key=\"validators_index\" :style=\"{ order: validator.coin.amount * -1 }\">\n                        <div class=\"col_account_name\"></div>\n                        <div class=\"col_network\"></div>\n\n                        <div class=\"col_validator\">\n                            <div class=\"logo\">\n                                <img :src=\"validator.mintscan_avatar\" :alt=\"validator.moniker\" @error=\"imageLoadError\">\n                                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_user\"></use></svg>\n                            </div>\n\n                            <div class=\"name\" @click.prevent=\"openValidatorModal(validator)\">\n                                <span>{{ validator.moniker }}</span>\n\n                                <div class=\"tooltip\">\n                                    {{ validator.moniker }}\n                                </div>\n                            </div>\n\n                            <div class=\"amount\">\n                                <span>{{ $filters.toFixed(validator.coin.amount / Math.pow(10, store.networks[store.currentNetwork].exponent), 3) }}</span>\n                                {{ store.networks[store.currentNetwork].token_name }}\n                            </div>\n                        </div>\n\n                        <div class=\"col_percent\">\n                            {{ $filters.toFixed(validator.coin.amount / wallet.totalTokens * 100, 2) }} %\n                        </div>\n\n                        <div class=\"col_percent\">\n                            {{ $filters.toFixed(validator.coin.amount / totalPassportTokens * 100, 2) }} %\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </template>\n\n            <div class=\"empty_text\" v-else>\n                {{ $t('message.account_validators_empty_text') }}\n            </div>\n        </div>\n\n        <button class=\"spoler_btn\" :class=\"{ 'active': showAll }\" @click.prevent=\"showAll = !showAll\" v-if=\"wallets.length > 3\">\n            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_arr_down\"></use></svg>\n        </button>\n\n\n        <!-- Validator modal -->\n        <Suspense>\n        <ValidatorModal v-if=\"showValidatorModal\" :validator=\"validatorInfo\" />\n        </Suspense>\n    </section>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, reactive, ref, inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { generateAddress } from '@/utils'\n\n    // Components\n    import ValidatorModal from '@/components/modal/ValidatorModal.vue'\n\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter'),\n        loading = ref(true),\n        showValidatorModal = ref(false),\n        validatorInfo = ref({})\n\n    var wallets = reactive([]),\n        totalPassportTokens = 0,\n        showAll = ref(false)\n\n\n    onBeforeMount(async () => {\n        // Clear data\n        wallets = reactive([])\n\n        // Get data\n        store.account.currentWallet == 'all'\n            ? await getAllData()\n            : await getAddressData()\n    })\n\n\n    // Replacement of the logo if it is not present\n    function imageLoadError(event) {\n        event.target.classList.add('hide')\n    }\n\n\n    // Get address data\n    async function getAddressData() {\n        // Set loader\n        loading.value = true\n\n        // Get validators for current wallet\n        try {\n            let currentAddress = generateAddress(store.networks[store.currentNetwork].address_prefix, store.account.currentWallet)\n\n            await fetch(`https://rpc.bronbro.io/account/validators/${currentAddress}`)\n                .then(res => res.json())\n                .then(response => {\n                    if(response.validators.length) {\n                        let totalTokens = 0,\n                            nickname = store.account.wallets.find(wallet => wallet.address == generateAddress('bostrom', currentAddress)).nickname\n\n                        // Calc total totalTokens\n                        response.validators.forEach(validator => totalTokens += validator.coin.amount)\n\n                        // Calc total passport tokens\n                        response.validators.forEach(validator => totalPassportTokens += validator.coin.amount)\n\n                        // Sort and set\n                        wallets.push({\n                            nickname,\n                            address: currentAddress,\n                            totalTokens,\n                            validators: response.validators.sort((a, b) => {\n                                if (a.coin.amount > b.coin.amount) { return 1 }\n                                if (a.coin.amount < b.coin.amount) { return -1 }\n                                return 0\n                            })\n                        })\n                    }\n\n                    // Hide loader\n                    loading.value = false\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    // Get all data\n    async function getAllData() {\n        // Set loader\n        loading.value = true\n\n        // Get validators other wallets\n        store.account.wallets.forEach(async address => {\n            let generatedAddress = generateAddress(store.networks[store.currentNetwork].address_prefix, address.address)\n\n            if(generatedAddress != store.account.moonPassportOwnerAddress && !wallets[generatedAddress]) {\n                try {\n                    await fetch(`https://rpc.bronbro.io/account/validators/${generatedAddress}`)\n                        .then(res => res.json())\n                        .then(response => {\n                            let totalTokens = 0,\n                                nickname = store.account.wallets.find(wallet => wallet.address == generateAddress('bostrom', generatedAddress)).nickname\n\n                            // Calc total total tokens\n                            response.validators.forEach(validator => totalTokens += validator.coin.amount)\n\n                            // Calc total passport tokens\n                            response.validators.forEach(validator => totalPassportTokens += validator.coin.amount)\n\n                            // Sort\n                            wallets.push({\n                                nickname,\n                                address: generatedAddress,\n                                totalTokens,\n                                validators: response.validators.sort((a, b) => {\n                                    if (a.coin.amount > b.coin.amount) { return -1 }\n                                    if (a.coin.amount < b.coin.amount) { return 1 }\n                                    return 0\n                                })\n                            })\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n            }\n        })\n\n        // Hide loader\n        loading.value = false\n    }\n\n\n    // Toggle active class\n    function toggleActiveClass(e) {\n        e.target.closest('.item').classList.toggle('active')\n    }\n\n\n    // Open validator modal\n    function openValidatorModal(validator) {\n        validatorInfo.value = validator\n        showValidatorModal.value = true\n\n        document.body.classList.add('lock')\n    }\n\n\n    // Event \"close validator modal\"\n    emitter.on('closeValidatorModal', () => {\n        showValidatorModal.value = false\n\n        document.body.classList.remove('lock')\n    })\n</script>\n\n\n<style scoped>\n    .validators\n    {\n        position: relative;\n\n        padding: 14px 14px 24px;\n\n        border-radius: 20px;\n        background: #0d0d0d;\n    }\n\n\n    .validators .title\n    {\n        font-size: 30px;\n        font-weight: 600;\n        line-height: 36px;\n\n        margin-bottom: 16px;\n    }\n\n\n    .validators .col_account_name,\n    .validators .col_network\n    {\n        width: 140px;\n        min-width: 140px;\n    }\n\n    .validators .col_validator\n    {\n        width: calc(100% - 464px);\n    }\n\n    .validators .col_percent\n    {\n        width: 92px;\n        min-width: 92px;\n\n        text-align: right;\n    }\n\n\n    .validators .titles\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 17px;\n\n        display: flex;\n\n        margin-bottom: 8px;\n        padding-bottom: 7px;\n\n        border-bottom: 1px solid rgba(255, 255, 255, .05);\n\n        justify-content: space-between;\n        align-items: flex-start;\n        align-content: flex-start;\n        flex-wrap: wrap;\n    }\n\n    .validators .titles > *\n    {\n        padding: 8px;\n    }\n\n\n    .validators .loader_wrap\n    {\n        position: relative;\n\n        height: auto;\n        padding: 20px 0 0;\n\n        background: none;\n    }\n\n\n    .validators .empty_text\n    {\n        color: #555;\n        line-height: 110%;\n\n        margin-top: 20px;\n\n        text-align: center;\n    }\n\n\n    .validators .items\n    {\n        display: flex;\n        flex-direction: column;\n\n        margin: -2px 0 -3px;\n    }\n\n\n    .validators .items .hide\n    {\n        display: none;\n    }\n\n\n    .validators .item\n    {\n        font-size: 14px;\n        font-weight: 500;\n        line-height: 17px;\n\n        position: relative;\n\n        display: flex;\n\n        width: 100%;\n        margin: 2px 0 3px;\n\n        transition: background .2s linear;\n\n        border-radius: 8px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .validators .item:before\n    {\n        position: absolute;\n        bottom: -3px;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 1px;\n\n        content: '';\n        pointer-events: none;\n\n        background: rgba(255, 255, 255, .05);\n    }\n\n    .validators .item > *\n    {\n        display: flex;\n\n        padding: 8px;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: nowrap;\n    }\n\n\n    .validators .item .list\n    {\n        display: flex;\n        flex-direction: column;\n\n        width: 100%;\n        margin-bottom: -3px;\n        padding: 0;\n\n        transition: border-color .2s linear;\n\n        border-top: 1px solid transparent;\n\n        flex-wrap: wrap;\n    }\n\n    .validators .item.active .list\n    {\n        border-color: rgba(255, 255, 255, .05);\n    }\n\n\n    .validators .sub_item\n    {\n        display: none;\n\n        width: 100%;\n        padding: 0;\n\n        border-radius: 0;\n    }\n\n    .validators .sub_item:last-child\n    {\n        border-radius: 0 0 8px 8px;\n    }\n\n\n    .validators .item > *.col_account_name\n    {\n        overflow: hidden;\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .validators .item > *.col_validator\n    {\n        flex-direction: row-reverse;\n\n        cursor: pointer;\n\n        justify-content: flex-end;\n    }\n\n    .validators .item > *.col_validator.empty\n    {\n        color: #555;\n        font-size: 13px;\n        line-height: 17px;\n\n        cursor: default;\n    }\n\n    .validators .sub_item > *.col_validator\n    {\n        flex-direction: row;\n\n        justify-content: flex-start;\n    }\n\n    .validators .sub_item > *.col_validator > *\n    {\n        cursor: default;\n\n        order: 0 !important;\n    }\n\n\n    .validators .item > *.col_percent\n    {\n        justify-content: flex-end;\n    }\n\n\n    .validators .item .logo\n    {\n        position: relative;\n        z-index: 1;\n\n        display: flex;\n        overflow: hidden;\n\n        width: 24px;\n        min-width: 24px;\n        height: 24px;\n\n        border: 1px solid #0d0d0d;\n        border-radius: 50%;\n        background: #282828;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n        order: 2;\n    }\n\n    .validators .item .logo + .logo\n    {\n        z-index: 2;\n\n        margin-right: -6px;\n    }\n\n    .validators .item .col_network .logo + *\n    {\n        width: calc(100% - 32px);\n        margin-left: auto;\n\n        transition: opacity .2s linear;\n        pointer-events: none;\n\n        opacity: 0;\n\n        order: 5;\n    }\n\n    .validators .item .logo img\n    {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: inherit;\n\n        object-fit: cover;\n    }\n\n    .validators .item .logo img.hide\n    {\n        display: none;\n    }\n\n    .validators .item .logo .icon\n    {\n        display: block;\n\n        width: 18px;\n        height: 18px;\n    }\n\n\n    .validators .item .arr\n    {\n        color: #555;\n\n        display: block;\n\n        width: 16px;\n        height: 16px;\n        margin-left: auto;\n\n        transition: transform .2s linear;\n    }\n\n\n    .validators .item .name\n    {\n        position: relative;\n\n        width: calc(100% - 127px);\n        margin-left: auto;\n\n        cursor: pointer;\n        transition: color .2s linear;\n    }\n\n    .validators .item .name span\n    {\n        display: block;\n        overflow: hidden;\n\n        width: 100%;\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n    .validators .item .name:hover\n    {\n        color: #950fff;\n    }\n\n\n    .validators .item .tooltip\n    {\n        color: #fff;\n        font-size: 12px;\n        line-height: 100%;\n\n        position: absolute;\n        z-index: 9;\n        bottom: 100%;\n        left: -8px;\n\n        display: none;\n\n        margin-bottom: 8px;\n        padding: 8px;\n\n        white-space: nowrap;\n\n        border-radius: 8px;\n        background: #282828;\n        box-shadow: 0 6px 12px rgba(0, 0, 0, .2);\n    }\n\n    .validators .item .tooltip:before\n    {\n        position: absolute;\n        top: 100%;\n        right: 0;\n        left: 0;\n\n        display: block;\n\n        width: 29px;\n        height: 7px;\n        margin: 0 auto;\n\n        content: '';\n\n        background: url(@/assets/images/tooltip_tail.svg) 50% 0/100% 100% no-repeat;\n    }\n\n    .validators .item .name:hover .tooltip\n    {\n        display: block;\n    }\n\n\n    .validators .item .amount\n    {\n        color: #555;\n        font-size: 10px;\n        line-height: 12px;\n\n        width: 87px;\n        margin-left: auto;\n\n        text-align: right;\n        white-space: nowrap;\n    }\n\n    .validators .item .amount span\n    {\n        color: #fff;\n    }\n\n\n    .validators .item:hover\n    {\n        background: #191919;\n    }\n\n\n    .validators .item.active .col_network .logo + *\n    {\n        opacity: 1;\n    }\n\n    .validators .item.active .arr\n    {\n        transform: rotate(180deg);\n    }\n\n    .validators .item.active .sub_item\n    {\n        display: flex;\n    }\n\n\n    .validators .spoler_btn\n    {\n        position: absolute;\n        right: 0;\n        bottom: -18px;\n        left: 0;\n\n        display: flex;\n\n        width: 36px;\n        height: 36px;\n        margin: auto;\n\n        transition: background .2s linear;\n\n        border-radius: 50%;\n        background: #141414;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .validators .spoler_btn .icon\n    {\n        display: block;\n\n        width: 20px;\n        height: 20px;\n\n        transition: transform .2s linear;\n    }\n\n\n    .validators .spoler_btn:hover\n    {\n        background: #950fff;\n    }\n\n    .validators .spoler_btn.active .icon\n    {\n        transform: rotate(180deg);\n    }\n\n</style>","import script from \"./Validators.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Validators.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Validators.vue?vue&type=style&index=0&id=5052c662&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5052c662\"]])\n\nexport default __exports__","<template>\n    <section class=\"proposals\">\n        <div class=\"head\">\n            <div class=\"title\">\n                {{ $t('message.account_proposals_title') }}\n            </div>\n\n            <div class=\"all_link\">\n                <router-link :to=\"`/proposals/${store.currentNetwork}`\" class=\"link\">\n                    {{ $t('message.btn_see_more') }} &rarr;\n                </router-link>\n            </div>\n        </div>\n\n        <div class=\"titles\">\n            <div class=\"col_network\">\n                {{ $t('message.account_proposals_col_network') }}\n            </div>\n\n            <div class=\"col_name\">\n                {{ $t('message.account_proposals_col_name') }}\n            </div>\n\n            <div class=\"col_number\"></div>\n\n            <div class=\"col_type\">\n                {{ $t('message.account_proposals_col_type') }}\n            </div>\n\n            <div class=\"col_status\">\n                {{ $t('message.account_proposals_col_status') }}\n            </div>\n        </div>\n\n        <div class=\"loader_wrap\" v-if=\"!loading\">\n            <div class=\"loader\"><span></span></div>\n        </div>\n\n        <div class=\"items\" v-else>\n            <!-- <pre>{{ data.proposals }}</pre> -->\n\n            <template v-for=\"(proposal, index) in proposals\" :key=\"index\">\n            <!-- <router-link :to=\"`/proposal/${proposal.id}`\" class=\"item\" :class=\"{'hide': index >= 5 && !data.showAll}\" v-if=\"proposal.id != '796' || proposal.status != 'PROPOSAL_STATUS_VOTING_PERIOD'\"> -->\n            <router-link :to=\"`/${store.currentNetwork}/proposal/${proposal.id}`\" class=\"item\" :class=\"{ 'hide': index >= 5 && !showAll }\">\n                <div class=\"col_network\">\n                    <template v-if=\"index < 1\">\n                    <div class=\"logo\">\n                        <img :src=\"`/${store.currentNetwork}_logo.png`\" alt=\"\">\n                    </div>\n\n                    <div>{{ store.networks[store.currentNetwork].name }}</div>\n                    </template>\n                </div>\n\n                <div class=\"col_name\">\n                    <div class=\"name\">{{ proposal.title }}</div>\n                </div>\n\n                <div class=\"col_number\">№{{ proposal.id }}</div>\n\n                <div class=\"col_type\">\n                    <svg class=\"icon\"><use :xlink:href=\"`/sprite.svg#ic_proposal_${proposal.proposal_type}`\"></use></svg>\n                </div>\n\n                <div class=\"col_status\">\n                    <span v-if=\"proposal.status == 'PROPOSAL_STATUS_DEPOSIT_PERIOD'\">{{ $t('message.account_proposals_status_deposite') }}</span>\n                    <span v-if=\"proposal.status == 'PROPOSAL_STATUS_VOTING_PERIOD'\" class=\"blue\">{{ $t('message.account_proposals_status_voting') }}</span>\n                    <span v-if=\"proposal.status == 'PROPOSAL_STATUS_PASSED'\" class=\"green\">{{ $t('message.account_proposals_status_passed') }}</span>\n                    <span v-if=\"proposal.status == 'PROPOSAL_STATUS_REJECTED'\" class=\"red\">{{ $t('message.account_proposals_status_rejected') }}</span>\n                </div>\n            </router-link>\n            </template>\n        </div>\n\n        <button class=\"spoler_btn\" :class=\"{ 'active': showAll }\" @click.prevent=\"showAll = !showAll\" v-if=\"proposals.length > 5\">\n            <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_arr_down\"></use></svg>\n        </button>\n    </section>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, ref } from 'vue'\n    import { useGlobalStore } from '@/stores'\n\n\n    const store = useGlobalStore(),\n        loading = ref(false),\n        proposals = ref([]),\n        showAll = ref(false)\n\n\n    onBeforeMount(() => {\n        // Get proposals\n        try {\n            fetch('https://rpc.bronbro.io/gov/proposals')\n                .then(res => res.json())\n                .then(response => {\n                    proposals.value = response.proposals\n\n                    // Hide loader\n                    loading.value = true\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    })\n</script>\n\n\n<style scoped>\n    .proposals\n    {\n        position: relative;\n\n        padding: 14px 14px 24px;\n\n        border-radius: 20px;\n        background: #0d0d0d;\n    }\n\n\n    .proposals .col_network\n    {\n        width: 148px;\n        min-width: 148px;\n    }\n\n    .proposals .col_name\n    {\n        width: 100%;\n    }\n\n    .proposals .col_number\n    {\n        width: 56px;\n        min-width: 56px;\n    }\n\n    .proposals .col_type\n    {\n        width: 52px;\n        min-width: 52px;\n    }\n\n    .proposals .col_status\n    {\n        width: 124px;\n        min-width: 124px;\n    }\n\n\n    .proposals .head\n    {\n        display: flex;\n\n        margin-bottom: 16px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .proposals .title\n    {\n        font-size: 30px;\n        font-weight: 600;\n        line-height: 36px;\n    }\n\n\n    .proposals .all_link\n    {\n        color: #950fff;\n        font-size: 14px;\n        line-height: 100%;\n\n        margin-left: auto;\n    }\n\n\n    .proposals .all_link .link\n    {\n        color: currentColor;\n\n        white-space: nowrap;\n        text-decoration: none;\n    }\n\n\n    .proposals .titles\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 17px;\n\n        display: flex;\n\n        margin-bottom: 8px;\n        padding-bottom: 7px;\n\n        border-bottom: 1px solid rgba(255, 255, 255, .05);\n\n        justify-content: space-between;\n        align-items: flex-start;\n        align-content: flex-start;\n        flex-wrap: nowrap;\n    }\n\n    .proposals .titles > *\n    {\n        padding: 8px 10px;\n    }\n\n\n    .proposals .loader_wrap\n    {\n        position: relative;\n\n        height: auto;\n        padding: 20px 0 0;\n\n        background: none;\n    }\n\n\n    .proposals .items > * + *\n    {\n        margin-top: 5px;\n    }\n\n    .proposals .items > * + *:before\n    {\n        position: absolute;\n        top: -3px;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 1px;\n\n        content: '';\n        pointer-events: none;\n\n        background: rgba(255, 255, 255, .05);\n    }\n\n\n    .proposals .item\n    {\n        color: currentColor;\n        font-size: 14px;\n        font-weight: 500;\n        line-height: 20px;\n\n        position: relative;\n\n        display: flex;\n\n        transition: background .2s linear;\n        text-decoration: none;\n\n        border-radius: 8px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: nowrap;\n    }\n\n    .proposals .item.hide\n    {\n        display: none;\n    }\n\n    .proposals .item > *\n    {\n        display: flex;\n\n        padding: 8px 10px;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: nowrap;\n    }\n\n\n    .proposals .item .logo\n    {\n        position: relative;\n\n        overflow: hidden;\n\n        width: 24px;\n        height: 24px;\n        margin-right: 8px;\n\n        border-radius: 50%;\n    }\n\n    .proposals .item .logo img\n    {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: inherit;\n\n        object-fit: cover;\n    }\n\n    .proposals .item .logo + *\n    {\n        width: calc(100% - 32px);\n    }\n\n\n    .proposals .item .name\n    {\n        overflow: hidden;\n\n        width: 100%;\n\n        text-overflow: ellipsis;\n    }\n\n\n    .proposals .item .col_number\n    {\n        color: #484747;\n        font-size: 12px;\n        font-weight: 500;\n        line-height: 15px;\n\n        transition: color .2s linear;\n        white-space: nowrap;\n    }\n\n\n    .proposals .item .col_type .icon\n    {\n        color: #950fff;\n\n        display: block;\n\n        width: 20px;\n        height: 20px;\n\n        transition: color .2s linear;\n    }\n\n\n    .proposals .item .col_status > *\n    {\n        color: #950fff;\n\n        transition: color .2s linear;\n    }\n\n    .proposals .item .col_status .blue\n    {\n        color: #0343e8;\n    }\n\n    .proposals .item .col_status .green\n    {\n        color: #1bc562;\n    }\n\n    .proposals .item .col_status .red\n    {\n        color: #eb5757;\n    }\n\n\n    .proposals .item:hover\n    {\n        background: #191919;\n    }\n\n    .proposals .item:hover .col_number,\n    .proposals .item:hover .col_type .icon,\n    .proposals .item:hover .col_status > *\n    {\n        color: #fff !important;\n    }\n\n\n    .proposals .spoler_btn\n    {\n        position: absolute;\n        right: 0;\n        bottom: -18px;\n        left: 0;\n\n        display: flex;\n\n        width: 36px;\n        height: 36px;\n        margin: auto;\n\n        transition: background .2s linear;\n\n        border-radius: 50%;\n        background: #141414;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .proposals .spoler_btn .icon\n    {\n        display: block;\n\n        width: 20px;\n        height: 20px;\n\n        transition: transform .2s linear;\n    }\n\n    .proposals .spoler_btn:hover\n    {\n        background: #950fff;\n    }\n\n    .proposals .spoler_btn.active .icon\n    {\n        transform: rotate(180deg);\n    }\n\n</style>","import script from \"./Proposals.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Proposals.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Proposals.vue?vue&type=style&index=0&id=7180cf52&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7180cf52\"]])\n\nexport default __exports__","<template>\n    <section class=\"modal\" id=\"add_address_modal\">\n        <div class=\"modal_content\">\n            <div class=\"data\">\n                <button class=\"close_btn\" @click.prevent=\"emitter.emit('closeAddAddressModal')\">\n                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n                </button>\n\n                <template v-if=\"duplicateError || store.account.moonPassport && activeStep == 1\">\n                <div class=\"error\">\n                    <div class=\"title\">\n                        {{ $t('message.add_address_modal_title') }}\n                    </div>\n\n                    <img src=\"@/assets/images/add_address_different_account.svg\" alt=\"\">\n\n                    <div class=\"desc\">\n                        <span v-if=\"!duplicateError && !hasPassportError\">{{ $t('message.add_address_modal_error_desc') }}</span>\n\n                        <span v-if=\"duplicateError && !hasPassportError\">{{ $t('message.add_address_modal_error_desc2') }}</span>\n\n                        <span v-if=\"hasPassportError\">{{ $t('message.add_address_modal_error_desc3') }}</span>\n                    </div>\n\n                    <button class=\"btn\" v-if=\"hasPassportError\" @click.prevent=\"reloadPage()\">\n                        {{ $t('message.btn_use_new_passport') }}\n                    </button>\n\n                    <div class=\"loader_wrap\" v-if=\"loading\">\n                        <div class=\"loader\"><span></span></div>\n                    </div>\n                </div>\n                </template>\n\n\n                <template v-else>\n                <div class=\"steps\">\n                    <div class=\"title\">\n                        {{ $t('message.add_address_modal_title') }}\n                    </div>\n\n                    <div class=\"names\">\n                        <div :class=\"{'active': activeStep == 1, 'completed': activeStep > 1, 'disabled': activeStep == 5}\" @click.prevent=\"activeStep = 1\">\n                            <span>{{ $t('message.add_address_modal_step1_name') }}</span>\n                            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                        </div>\n\n                        <div :class=\"{'active': activeStep == 2, 'completed': activeStep > 2, 'disabled': activeStep == 5}\">\n                            <span>{{ $t('message.add_address_modal_step2_name') }}</span>\n                            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                        </div>\n\n                        <div :class=\"{'active': activeStep == 3, 'completed': activeStep > 3, 'disabled': activeStep == 5}\" @click.prevent=\"activeStep = 3\">\n                            <span>{{ $t('message.add_address_modal_step3_name') }}</span>\n                            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                        </div>\n\n                        <div :class=\"{'active': activeStep == 4, 'completed': activeStep > 4, 'disabled': activeStep == 5}\" @click.prevent=\"activeStep = 4\">\n                            <span>{{ $t('message.add_address_modal_step4_name') }}</span>\n                            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                        </div>\n                    </div>\n\n\n                    <div class=\"step step1\" v-if=\"activeStep == 1\">\n                        <div class=\"title\">\n                            {{ $t('message.add_address_modal_step1_title') }}\n                        </div>\n\n                        <div class=\"current_account\" :class=\"{'editing': editForm, 'error': !tempAddressName.length}\">\n                            <div class=\"logo\">\n                                <img :src=\"`/${addedNetwork}_logo.png`\" alt=\"\" v-if=\"!duplicate\">\n                                <svg class=\"icon\" v-else><use xlink:href=\"@/assets/sprite.svg#ic_duplicate\"></use></svg>\n                            </div>\n\n                            <div>\n                                <div class=\"name\" :class=\"{'error': duplicate}\">\n                                    <template v-if=\"tempAddressName.length\">{{ tempAddressName }}</template>\n                                    <template v-else>{{ store.account.userName }}</template>\n\n                                    <span v-if=\"duplicate\">{{ $t('message.add_address_duplicated_label') }}</span>\n                                </div>\n\n                                <form class=\"edit_name_form\" @submit.prevent=\"hideEditForm\">\n                                    <input type=\"text\" v-model=\"tempAddressName\" class=\"input\" id=\"temp_name\" maxlength=\"16\">\n\n                                    <button type=\"submit\" class=\"submit_btn\">\n                                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                                    </button>\n\n                                    <button type=\"button\" class=\"cancel_btn\" @click.prevent=\"cancelEditForm\">\n                                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n                                    </button>\n                                </form>\n\n                                <div class=\"address\">\n                                    <template v-if=\"addedNetwork == 'evmos'\">\n                                    {{ store.wallets.evmos.slice(0, 13) + '...' + store.wallets.evmos.slice(-6) }}\n                                    </template>\n\n                                    <template v-else-if=\"addedNetwork == 'desmos'\">\n                                    {{ store.wallets.desmos.slice(0, 13) + '...' + store.wallets.desmos.slice(-6) }}\n                                    </template>\n\n                                    <template v-else>\n                                    {{ generateAddress(store.networks[addedNetwork].address_prefix, store.Keplr.account.address).slice(0, 13) + '...' + generateAddress(store.networks[addedNetwork].address_prefix, store.Keplr.account.address).slice(-6) }}\n                                    </template>\n                                </div>\n\n                                <button class=\"edit_btn\" @click.prevent=\"showEditForm\">\n                                    <svg><use xlink:href=\"@/assets/sprite.svg#ic_edit\"></use></svg>\n                                </button>\n                            </div>\n                        </div>\n\n                        <div class=\"networks\">\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'cosmoshub', 'added': checkAddress('cosmos')}\" @click.prevent=\"selectNetwork('cosmoshub')\">\n                                <div class=\"logo\">\n                                    <img src=\"/cosmoshub_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.cosmoshub.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">\n                                    {{ $t('message.add_address_added_label') }}\n                                </div>\n                            </button></div>\n\n                            <!-- <div><button class=\"network\" :class=\"{'active': addedNetwork == 'desmos'}\" @click.prevent=\"selectNetwork('desmos')\">\n                                <div class=\"logo\">\n                                    <img src=\"/desmos_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.desmos.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">{{ $t('message.add_address_added_label') }}</div>\n                            </button></div> -->\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'juno', 'added': checkAddress('juno')}\" @click.prevent=\"selectNetwork('juno')\">\n                                <div class=\"logo\">\n                                    <img src=\"/juno_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.juno.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">\n                                    {{ $t('message.add_address_added_label') }}\n                                </div>\n                            </button></div>\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'stargaze', 'added': checkAddress('stars')}\" @click.prevent=\"selectNetwork('stargaze')\">\n                                <div class=\"logo\">\n                                    <img src=\"/stargaze_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.stargaze.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">\n                                    {{ $t('message.add_address_added_label') }}\n                                </div>\n                            </button></div>\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'gravity', 'added': checkAddress('gravity')}\" @click.prevent=\"selectNetwork('gravity')\">\n                                <div class=\"logo\">\n                                    <img src=\"/gravity_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.gravity.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">\n                                    {{ $t('message.add_address_added_label') }}\n                                </div>\n                            </button></div>\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'stride', 'added': checkAddress('stride')}\" @click.prevent=\"selectNetwork('stride')\">\n                                <div class=\"logo\">\n                                    <img src=\"/stride_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.stride.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">\n                                    {{ $t('message.add_address_added_label') }}\n                                </div>\n                            </button></div>\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'omniflix', 'added': checkAddress('omniflix')}\" @click.prevent=\"selectNetwork('omniflix')\">\n                                <div class=\"logo\">\n                                    <img src=\"/omniflix_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.omniflix.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">\n                                    {{ $t('message.add_address_added_label') }}\n                                </div>\n                            </button></div>\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'osmosis', 'added': checkAddress('osmo')}\" @click.prevent=\"selectNetwork('osmosis')\">\n                                <div class=\"logo\">\n                                    <img src=\"/osmosis_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.osmosis.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">\n                                    {{ $t('message.add_address_added_label') }}\n                                </div>\n                            </button></div>\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'bostrom', 'added': checkAddress('bostrom')}\" @click.prevent=\"selectNetwork('bostrom')\">\n                                <div class=\"logo\">\n                                    <img src=\"/bostrom_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.bostrom.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">\n                                    {{ $t('message.add_address_added_label') }}\n                                </div>\n                            </button></div>\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'crescent', 'added': checkAddress('cre')}\" @click.prevent=\"selectNetwork('crescent')\">\n                                <div class=\"logo\">\n                                    <img src=\"/crescent_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.crescent.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">\n                                    {{ $t('message.add_address_added_label') }}\n                                </div>\n                            </button></div>\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'emoney', 'added': checkAddress('emoney')}\" @click.prevent=\"selectNetwork('emoney')\">\n                                <div class=\"logo\">\n                                    <img src=\"/emoney_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.emoney.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">\n                                    {{ $t('message.add_address_added_label') }}\n                                </div>\n                            </button></div>\n                        </div>\n\n                        <button class=\"btn\" :class=\"{'disabled': duplicate}\" @click.prevent=\"setActiveKeplrAddress\">\n                            {{ $t('message.btn_next') }}\n                        </button>\n                    </div>\n\n\n                    <div class=\"step step2\" v-if=\"activeStep == 2\">\n                        <div class=\"title\">\n                            {{ $t('message.add_address_modal_step2_title') }}\n                        </div>\n\n                        <img src=\"@/assets/images/add_address_step2.svg\" alt=\"\" class=\"img\">\n\n                        <button class=\"btn\" @click.prevent=\"createSignature\">\n                            {{ $t('message.btn_sign') }}\n                        </button>\n                    </div>\n\n\n                    <div class=\"step step3\" v-if=\"activeStep == 3\">\n                        <div class=\"title\">\n                            {{ $t('message.add_address_modal_step3_title') }}\n                        </div>\n\n                        <img src=\"@/assets/images/add_address_step3.svg\" alt=\"\" class=\"img\">\n\n                        <button class=\"btn\" :class=\"{'disabled': !ownerAccount}\" @click.prevent=\"activeStep += 1\">\n                            {{ $t('message.btn_next') }}\n                        </button>\n\n                        <div class=\"loader_wrap\" v-if=\"loading\">\n                            <div class=\"loader\"><span></span></div>\n                        </div>\n                    </div>\n\n\n                    <div class=\"step step4\" v-if=\"activeStep == 4\">\n                        <div class=\"title\">\n                            {{ $t('message.add_address_modal_step4_title') }}\n                        </div>\n\n                        <img src=\"@/assets/images/add_address_step4.svg\" alt=\"\" class=\"img\">\n\n                        <button class=\"btn\" @click.prevent=\"addAddress\">\n                            {{ $t('message.btn_sing_broadcast') }}\n                        </button>\n\n                        <div class=\"loader_wrap\" v-if=\"loading\">\n                            <div class=\"loader\"><span></span></div>\n                        </div>\n                    </div>\n\n\n                    <div class=\"step step5\" v-if=\"activeStep == 5\">\n                        <div class=\"title\">\n                            {{ $t('message.add_address_modal_step5_title') }}\n                        </div>\n\n                        <img src=\"@/assets/images/add_address_step5.svg\" alt=\"\" class=\"img\">\n\n                        <button class=\"btn\" @click.prevent=\"emitter.emit('closeAddAddressModal')\">\n                            {{ $t('message.btn_done') }}\n                        </button>\n                    </div>\n                </div>\n                </template>\n            </div>\n        </div>\n\n        <div class=\"overlay\"></div>\n    </section>\n</template>\n\n\n<script setup>\n    import { ref, inject, onBeforeMount, watchEffect, computed } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { useNotification } from '@kyvg/vue3-notification'\n    import { preparePassportTx, sendTx, generateAddress } from '@/utils'\n    import { toAscii, toBase64 } from '@cosmjs/encoding'\n\n    const store = useGlobalStore(),\n        i18n = inject('i18n'),\n        notification = useNotification(),\n        emitter = inject('emitter'),\n        activeStep = ref(1),\n        activeKeplrAddress = ref(store.Keplr.account.address),\n        addedNetwork = ref(),\n        addedAddress = ref(''),\n        ownerAccount = ref(false),\n        loading = ref(false),\n        signature = ref(''),\n        duplicate = ref(false),\n        editForm = ref(false),\n        duplicateError = ref(false),\n        hasPassportError = ref(false),\n        tempAddressName = ref('')\n\n\n    onBeforeMount(() => {\n        // Select network\n        selectNetwork('cosmoshub')\n    })\n\n\n    watchEffect(() => {\n        // Set tooltip\n        if(activeStep.value == 0) {\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_step1')\n        }\n\n        if(activeStep.value == 1) {\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_step2')\n        }\n\n        if(activeStep.value == 2) {\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_step3')\n        }\n\n        if(activeStep.value == 3) {\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_step4')\n        }\n\n        if(activeStep.value == 4) {\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_step5')\n        }\n\n        if(activeStep.value == 5) {\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_success')\n        }\n    })\n\n\n    // Checking if the address was previously added\n    function checkAddress(prefix) {\n        if(store.account.moonPassportOwner.extension.addresses) {\n            let addresses = []\n\n            store.account.moonPassportOwner.extension.addresses.forEach(el => {\n                addresses.push(el.address)\n            })\n\n            return addresses.includes(generateAddress(prefix, store.Keplr.account.address))\n        }\n    }\n\n    // Checking if the wallet was previously added\n    function checkAllAddress() {\n        if(store.account.moonPassportOwner.extension.addresses) {\n            let addresses = []\n\n            store.account.moonPassportOwner.extension.addresses.forEach(el => {\n                addresses.push(generateAddress(store.networks.cosmoshub.address_prefix, el.address))\n            })\n\n            return addresses.includes(store.Keplr.account.address)\n        }\n    }\n\n\n    // Select network\n    async function selectNetwork(network) {\n        addedNetwork.value = network\n\n        // Checking if the address was previously added\n        let result = checkAddress(store.networks[network].address_prefix)\n\n        if(result) {\n            duplicate.value = true\n\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_step2_error')\n        } else {\n            duplicate.value = false\n\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_step2')\n        }\n\n        // Set new singer\n        await setNewSinger()\n    }\n\n\n    // Show edit form\n    function showEditForm() {\n        editForm.value = true\n\n        // Focus on input\n        setTimeout(() => document.getElementById('temp_name').focus())\n    }\n\n\n    // Hide edit form\n    function hideEditForm() {\n        editForm.value = false\n    }\n\n\n    // Cancel edit form\n    function cancelEditForm() {\n        hideEditForm()\n\n        // Set default name\n        tempAddressName.value = ''\n    }\n\n\n    // Set active Keplr address\n    async function setActiveKeplrAddress() {\n        activeKeplrAddress.value = store.Keplr.account.address\n\n        // Confirm address label\n        if(!tempAddressName.value.length) {\n            tempAddressName.value = store.account.userName\n        }\n\n        // Set new singer\n        await setNewSinger()\n\n        // Go to next step\n        activeStep.value += 1\n    }\n\n\n    // Set new singer\n    async function setNewSinger() {\n        await window.keplr.enable(store.networks[addedNetwork.value].chainId)\n\n        let offlineSigner = await window.getOfflineSignerAuto(store.networks[addedNetwork.value].chainId),\n            accounts = await offlineSigner.getAccounts()\n\n        addedAddress.value = accounts[0].address\n    }\n\n\n    // Create signature\n    async function createSignature() {\n        try {\n            let res = await window.keplr.signArbitrary(\n                store.networks[addedNetwork.value].chainId,\n                addedAddress.value,\n                `${store.account.moonPassportOwnerAddress}:${store.CONSTITUTION_HASH}`\n            )\n\n            signature.value = toBase64(toAscii(JSON.stringify({\n                pub_key: res.pub_key.value,\n                signature: res.signature\n            })))\n\n            // Show notification\n            notification.notify({\n                group: 'default',\n                title: i18n.global.t('message.notification_passport_signature'),\n                type: 'success'\n            })\n\n            // Hide loader\n            loading.value = false\n\n            // Go to next step\n            activeStep.value += 1\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    // Reload page\n    function reloadPage() {\n        store.needReload = true\n\n        emitter.emit('closeAddAddressModal')\n    }\n\n\n    // Sign a nd broadcast\n    async function addAddress() {\n        // Show loader\n        loading.value = true\n\n        // Show notification\n        notification.notify({\n            group: 'default',\n            duration: -100,\n            title: i18n.global.t('message.notification_address_adding_process')\n        })\n\n        try{\n            // Prepare Tx\n            let prepareResult = await preparePassportTx([\n                {\n                    proof_address: {\n                        address: addedAddress.value,\n                        nickname: store.account.moonPassportOwner.extension.nickname,\n                        signature: signature.value\n                    }\n                },\n                {\n                    set_address_label: {\n                        address: addedAddress.value,\n                        label: tempAddressName.value,\n                        nickname: store.account.moonPassportOwner.extension.nickname\n                    }\n                }\n            ])\n\n            // Send Tx\n            let result = await sendTx(prepareResult)\n\n            if (result.code === 0) {\n                // Set TXS\n                store.lastTXS = result.transactionHash\n\n                // Show notification\n                notification.notify({\n                    group: 'default',\n                    clean: true\n                })\n\n                notification.notify({\n                    group: store.networks.bostrom.denom,\n                    title: i18n.global.t('message.notification_success_address_added_title'),\n                    type: 'success',\n                    data: {\n                        chain: 'bostrom',\n                        tx_type: i18n.global.t('message.notification_action_address_add')\n                    }\n                })\n\n                // Hide loader\n                loading.value = false\n\n                // Go to next step\n                activeStep.value += 1\n\n                store.needReload = true\n            }\n\n            if (result.code) {\n                // Show notification\n                notification.notify({\n                    group: 'default',\n                    clean: true\n                })\n\n                notification.notify({\n                    group: store.networks.bostrom.denom,\n                    title: i18n.global.t('message.notification_failed_title'),\n                    text: i18n.global.t('message.manage_modal_error_rejected'),\n                    type: 'error',\n                    data: {\n                        chain: 'passport',\n                        tx_type: i18n.global.t('message.notification_action_address_add')\n                    }\n                })\n\n                // Hide loader\n                loading.value = false\n            }\n        } catch (error) {\n            console.log(error)\n\n            // Show notification\n            notification.notify({\n                group: 'default',\n                clean: true\n            })\n\n            notification.notify({\n                group: store.networks.bostrom.denom,\n                title: i18n.global.t('message.notification_failed_title'),\n                text: i18n.global.t('message.manage_modal_error_rejected'),\n                type: 'error',\n                data: {\n                    chain: 'passport',\n                    tx_type: i18n.global.t('message.notification_action_address_add')\n                }\n            })\n\n            // Hide loader\n            loading.value = false\n        }\n    }\n\n\n    // Change Keplr account\n    window.addEventListener('keplr_keystorechange', async () => {\n        // Check account\n        if(store.showAddAddressModal) {\n            // Show loader\n            loading.value = true\n\n            // Set condition\n            ownerAccount.value = false\n\n            // New keplr connect\n            await store.connectWallet(false, false)\n\n            // Step 0 and Step 2\n            if (activeStep.value == 1 || activeStep.value == 2) {\n                if(store.account.moonPassport) {\n                    // Hide loader\n                    loading.value = false\n\n                    // Go to zero step\n                    activeStep.value = 1\n\n                    // Has passport error\n                    hasPassportError.value = true\n                }\n\n                // Check duplicate\n                if(checkAllAddress()) {\n                    // Hide loader\n                    loading.value = false\n\n                    // Go to zero step\n                    activeStep.value = 1\n\n                    // Duplicate error\n                    duplicateError.value = true\n                }\n            }\n\n            // Step 3\n            if (activeStep.value == 3) {\n                if(store.wallets.bostrom == store.account.moonPassportOwnerAddress) {\n                    // Set condition\n                    ownerAccount.value = true\n\n                    // Go to next step\n                    activeStep.value += 1\n                }\n\n                // Hide loader\n                loading.value = false\n            }\n\n            // Step 4\n            if (activeStep.value == 4) {\n                if(store.wallets.bostrom != store.account.moonPassportOwnerAddress) {\n                    // Go to next step\n                    activeStep.value -= 1\n                }\n\n                // Hide loader\n                loading.value = false\n            }\n        }\n    })\n</script>\n\n\n<style scoped>\n    .loader_wrap\n    {\n        border-radius: 36px;\n    }\n\n\n\n    .title\n    {\n        line-height: 36px;\n\n        margin-bottom: 8px;\n        padding: 4px 60px 4px 0;\n    }\n\n\n\n    .error img\n    {\n        display: block;\n\n        width: 180px;\n        max-width: 100%;\n        margin: 0 auto 24px;\n    }\n\n\n    .error .desc\n    {\n        font-size: 24px;\n        font-weight: 500;\n        line-height: 110%;\n\n        text-align: center;\n    }\n\n\n    .error .btn\n    {\n        color: #fff;\n        font-weight: 500;\n        line-height: 19px;\n\n        width: 200px;\n        max-width: 100%;\n        margin: 16px auto 0;\n\n        border-radius: 14px;\n        background: #950fff;\n    }\n\n\n\n    .names\n    {\n        display: flex;\n\n        margin-bottom: 24px;\n\n        justify-content: flex-start;\n        align-items: stretch;\n        align-content: stretch;\n        flex-wrap: nowrap;\n    }\n\n\n    .names > *\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 100%;\n\n        display: flex;\n\n        width: 100%;\n        padding: 10px 0;\n\n        transition: .2s linear;\n        pointer-events: none;\n\n        border-bottom: 1px solid rgba(255, 255, 255, .1);\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .names > * + *\n    {\n        margin-left: 4px;\n    }\n\n\n    .names span\n    {\n        width: calc(100% - 24px);\n    }\n\n\n    .names .icon\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n        margin-left: auto;\n\n        transition: opacity .2s linear;\n\n        opacity: 0;\n    }\n\n\n    .names > *.active,\n    .names > *.completed\n    {\n        color: #950fff;\n\n        cursor: pointer;\n        pointer-events: auto;\n\n        border-color: #950fff;\n    }\n\n    .names > *.disabled\n    {\n        pointer-events: none;\n    }\n\n    .names > *.completed .icon\n    {\n        opacity: 1;\n    }\n\n\n\n    .step .title\n    {\n        font-size: 24px;\n        line-height: 110%;\n\n        margin-bottom: 8px;\n        padding: 0;\n    }\n\n\n    .step .desc\n    {\n        color: #555;\n        line-height: 110%;\n    }\n\n\n    .step .img\n    {\n        display: block;\n\n        height: 150px;\n        margin: 24px auto 0;\n    }\n\n\n    .step1 .current_account\n    {\n        position: relative;\n\n        display: flex;\n\n        margin-top: 16px;\n        padding: 11px 9px;\n\n        transition: border-color .2s linear;\n\n        border: 1px solid transparent;\n        border-radius: 12px;\n        background: #191919;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .step1 .current_account .logo\n    {\n        width: 24px;\n        height: 24px;\n\n        border-radius: 50%;\n    }\n\n    .step1 .current_account .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n    .step1 .current_account .logo + *\n    {\n        width: calc(100% - 32px);\n        margin-left: auto;\n    }\n\n\n    .step1 .current_account .logo .icon\n    {\n        color: #eb5757;\n\n        display: block;\n\n        width: 24px;\n        height: 24px;\n    }\n\n\n    .step1 .current_account .name\n    {\n        font-weight: 500;\n        line-height: 100%;\n\n        display: flex;\n\n        padding-right: 40px;\n\n        transition: color .2s linear;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: nowrap;\n    }\n\n    .step1 .current_account .name.error\n    {\n        color: #eb5757;\n    }\n\n    .step1 .current_account .name span\n    {\n        color: #555;\n        font-size: 14px;\n        font-weight: 400;\n\n        margin-left: 8px;\n    }\n\n\n    .step1 .current_account .edit_name_form\n    {\n        position: relative;\n\n        display: none;\n\n        width: 100%;\n    }\n\n\n    .step1 .current_account .edit_name_form .input\n    {\n        color: var(--text_color);\n        font-family: var(--font-family);\n        font-size: var(--font_size);\n        font-weight: 500;\n\n        display: block;\n\n        width: 100%;\n        height: 16px;\n        padding-right: 60px;\n\n        border: none;\n        background: none;\n    }\n\n\n    .step1 .current_account .edit_name_form .submit_btn\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 30px;\n        bottom: 0;\n\n        display: flex;\n\n        width: 16px;\n        height: 16px;\n        margin: auto;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .step1 .current_account .edit_name_form .submit_btn .icon\n    {\n        display: block;\n\n        width: 16px;\n        height: 16px;\n    }\n\n\n    .step1 .current_account .edit_name_form .cancel_btn\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 10px;\n        bottom: 0;\n\n        display: flex;\n\n        width: 16px;\n        height: 16px;\n        margin: auto;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .step1 .current_account .edit_name_form .cancel_btn .icon\n    {\n        display: block;\n\n        width: 16px;\n        height: 16px;\n    }\n\n\n    .step1 .current_account .address\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 16px;\n\n        overflow: hidden;\n\n        margin-top: 6px;\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .step1 .current_account .edit_btn\n    {\n        color: #555;\n\n        position: absolute;\n        top: 12px;\n        right: 10px;\n\n        display: flex;\n\n        width: 16px;\n        height: 16px;\n\n        transition: color .2s linear;\n        pointer-events: auto;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .step1 .current_account .edit_btn svg\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n    }\n\n    .step1 .current_account .edit_btn:hover\n    {\n        color: #fff;\n    }\n\n\n\n    .step1 .current_account.editing\n    {\n        border-color: #950fff;\n    }\n\n    .step1 .current_account.editing.error\n    {\n        border: 1px solid #eb5757;\n        background: rgba(235, 87, 87, .1);\n    }\n\n    .step1 .current_account.editing .name,\n    .step1 .current_account.editing .edit_btn\n    {\n        display: none;\n    }\n\n    .step1 .current_account.editing .edit_name_form\n    {\n        display: block;\n    }\n\n\n    .step1 .networks\n    {\n        display: flex;\n\n        margin-top: 24px;\n        margin-bottom: -8px;\n        margin-left: -8px;\n\n        justify-content: flex-start;\n        align-items: stretch;\n        align-content: stretch;\n        flex-wrap: wrap;\n    }\n\n    .step1 .networks > *\n    {\n        width: calc(50% - 8px);\n        margin-bottom: 8px;\n        margin-left: 8px;\n    }\n\n\n    .step1 .networks .network\n    {\n        font-size: 14px;\n        line-height: 100%;\n\n        display: flex;\n\n        width: 100%;\n        padding: 7px;\n\n        transition: .2s linear;\n        text-align: left;\n\n        border: 1px solid transparent;\n        border-radius: 8px;\n        background: #191919;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: nowrap;\n    }\n\n\n    .step1 .networks .logo\n    {\n        width: 24px;\n        min-width: 24px;\n        height: 24px;\n\n        border-radius: 50%;\n    }\n\n    .step1 .networks .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n    .step1 .networks .logo + *\n    {\n        width: 100%;\n        margin-left: 8px;\n    }\n\n\n    .step1 .networks .icon\n    {\n        color: #950fff;\n\n        display: block;\n\n        width: 16px;\n        min-width: 16px;\n        height: 16px;\n        margin-left: 8px;\n\n        transition: opacity .2s linear;\n\n        opacity: 0;\n    }\n\n\n    .step1 .networks .added_label\n    {\n        font-size: 12px;\n        line-height: 100%;\n\n        display: none;\n\n        margin-left: 8px;\n\n        white-space: nowrap;\n\n        opacity: .5;\n    }\n\n    .step1 .networks .network.added:not(.active) .added_label\n    {\n        display: block;\n    }\n\n\n    .step1 .networks .network:hover,\n    .step1 .networks .network.active\n    {\n        background: #212121;\n    }\n\n    .step1 .networks .network.active .icon\n    {\n        opacity: 1;\n    }\n\n\n    .step1 .networks .network.added\n    {\n        border-color: #950fff;\n        background: rgba(149, 15, 255, .1);\n    }\n\n    .step1 .networks .network.added .icon\n    {\n        display: none;\n    }\n\n\n    .step1 .networks .network.added.active\n    {\n        border: 1px solid #eb5757;\n        background: rgba(235, 87, 87, .1);\n    }\n\n    .step1 .networks .network.added.active .icon\n    {\n        color: #fff;\n\n        display: block;\n    }\n\n\n\n    .btn\n    {\n        font-weight: 500;\n        line-height: 100%;\n\n        display: block;\n\n        width: 100%;\n        height: 46px;\n        margin-top: 24px;\n        padding: 15px;\n\n        transition: background .2s linear;\n\n        border-radius: 12px;\n        background: #950fff;\n    }\n\n    .btn.disabled\n    {\n        pointer-events: none;\n\n        background: #353535;\n    }\n\n    .btn:hover\n    {\n        background: #7700e1;\n    }\n\n</style>","import script from \"./AddAddressModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddAddressModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AddAddressModal.vue?vue&type=style&index=0&id=522c3b40&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-522c3b40\"]])\n\nexport default __exports__","<template>\n    <section class=\"modal\" id=\"add_address_modal\">\n        <div class=\"modal_content\" @click.self=\"emitter.emit('closeDeleteAddressModal')\">\n            <div class=\"data\">\n                <button class=\"close_btn\" @click.prevent=\"emitter.emit('closeDeleteAddressModal')\">\n                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n                </button>\n\n                <div class=\"image\">\n                    <img src=\"@/assets/images/confirm_delete.svg\" alt=\"\">\n                </div>\n\n                <div class=\"title\">Do you want to delete your adress?</div>\n\n                <div class=\"btns\">\n                    <button class=\"btn no_btn\" @click.prevent=\"emitter.emit('closeDeleteAddressModal')\">\n                        {{ $t('message.btn_no') }}\n                    </button>\n\n                    <button class=\"btn yes_btn\" @click.prevent=\"deleteAddress()\">\n                        {{ $t('message.btn_yes') }}\n                    </button>\n                </div>\n\n                <div class=\"loader_wrap\" v-if=\"loading\">\n                    <div class=\"loader\"><span></span></div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"overlay\" @click.prevent=\"emitter.emit('closeDeleteAddressModal')\"></div>\n    </section>\n</template>\n\n\n<script setup>\n    import { inject, ref } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { useNotification } from '@kyvg/vue3-notification'\n    import { preparePassportTx, sendTx } from '@/utils'\n\n\n    const emitter = inject('emitter'),\n        i18n = inject('i18n'),\n        store = useGlobalStore(),\n        notification = useNotification(),\n        loading = ref(false)\n\n\n    // Delete address\n    async function deleteAddress() {\n        // Show loader\n        loading.value = true\n\n        // Show notification\n        notification.notify({\n            group: 'default',\n            duration: -100,\n            title: i18n.global.t('message.notification_address_deleting_process')\n        })\n\n        try{\n            // Prepare Tx\n            let prepareResult = await preparePassportTx({\n                remove_address: {\n                    address: store.currentDeleteAddress,\n                    nickname: store.account.moonPassportOwner.extension.nickname\n                }\n            })\n\n            // Send Tx\n            let result = await sendTx(prepareResult)\n\n            if (result.code === 0) {\n                // Set TXS\n                store.lastTXS = result.transactionHash\n\n                // Show notification\n                notification.notify({\n                    group: 'default',\n                    clean: true\n                })\n\n                notification.notify({\n                    group: store.networks.bostrom.denom,\n                    title: i18n.global.t('message.notification_success_address_delete_title'),\n                    type: 'success',\n                    data: {\n                        chain: 'bostrom',\n                        tx_type: i18n.global.t('message.notification_action_address_delete')\n                    }\n                })\n\n                // Reload page\n                setTimeout(() => window.location.reload(), 100)\n            }\n\n            if (result.code) {\n                // Show notification\n                notification.notify({\n                    group: 'default',\n                    clean: true\n                })\n\n                notification.notify({\n                    duration: -100,\n                    group: store.networks.bostrom.denom,\n                    title: i18n.global.t('message.notification_failed_title'),\n                    text: result?.rawLog.toString(),\n                    type: 'error',\n                    data: {\n                        chain: 'bostrom',\n                        tx_type: i18n.global.t('message.notification_action_address_delete')\n                    }\n                })\n\n                // Hide loader\n                loading.value = false\n            }\n        } catch (error) {\n            console.log(error)\n\n            // Show notification\n            notification.notify({\n                group: 'default',\n                clean: true\n            })\n\n            notification.notify({\n                group: store.networks.bostrom.denom,\n                title: i18n.global.t('message.notification_failed_title'),\n                text: i18n.global.t('message.manage_modal_error_rejected'),\n                type: 'error',\n                data: {\n                    chain: 'bostrom',\n                    tx_type: i18n.global.t('message.notification_action_address_delete')\n                }\n            })\n\n            // Hide loader\n            loading.value = false\n        }\n    }\n</script>\n\n\n<style scoped>\n    .modal_content .data\n    {\n        padding-top: 96px;\n    }\n\n\n    .image\n    {\n        display: flex;\n\n        height: 240px;\n        margin-bottom: 40px;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .image img\n    {\n        display: block;\n\n        max-width: 100%;\n        max-height: 100%;\n    }\n\n\n    .title\n    {\n        font-size: 30px;\n        font-weight: 600;\n        line-height: 130%;\n\n        text-align: center;\n    }\n\n\n    .btns\n    {\n        display: flex;\n\n        margin-top: 40px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .btns .btn\n    {\n        font-size: 16px;\n        font-weight: 500;\n        line-height: 19px;\n\n        display: block;\n\n        width: calc(50% - 5px);\n        padding: 14px;\n\n        transition: background .2s linear;\n\n        border-radius: 14px;\n        background: #353535;\n    }\n\n    .btns .btn:hover\n    {\n        background: #282828;\n    }\n\n\n    .btns .btn.yes_btn\n    {\n        background: #950fff;\n    }\n\n    .btns .btn.yes_btn:hover\n    {\n        background: #7700e1;\n    }\n\n</style>","import script from \"./DeleteAddressModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DeleteAddressModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DeleteAddressModal.vue?vue&type=style&index=0&id=6f194892&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6f194892\"]])\n\nexport default __exports__","<template>\n    <form @submit.prevent=\"onSubmit\">\n        <input type=\"text\" v-model=\"name\" class=\"input\" maxlength=\"16\">\n\n        <button type=\"submit\" class=\"submit_btn\">\n            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n        </button>\n\n        <button type=\"button\" class=\"cancel_btn\" @click.prevent=\"e => e.target.closest('.item').classList.remove('editing')\">\n            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n        </button>\n\n        <div class=\"loader_wrap\" v-if=\"loading\">\n            <div class=\"loader\"><span></span></div>\n        </div>\n    </form>\n</template>\n\n\n<script setup>\n    import { inject, onBeforeMount, ref } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { useNotification } from '@kyvg/vue3-notification'\n    import { preparePassportTx, sendTx } from '@/utils'\n\n\n    const props = defineProps(['address', 'name']),\n        store = useGlobalStore(),\n        notification = useNotification(),\n        i18n = inject('i18n'),\n        name = ref(''),\n        loading = ref(false)\n\n\n    onBeforeMount(() => {\n        name.value = props.name\n    })\n\n\n    // Submit form\n    async function onSubmit() {\n        // Show loader\n        loading.value = true\n\n        // Show notification\n        notification.notify({\n            group: 'default',\n            duration: -100,\n            title: i18n.global.t('message.notification_address_renaming_process')\n        })\n\n        try{\n            // Prepare Tx\n            let prepareResult = await preparePassportTx({\n                set_address_label: {\n                    address: props.address,\n                    label: name.value,\n                    nickname: store.account.moonPassportOwner.extension.nickname\n                }\n            })\n\n            // Send Tx\n            let result = await sendTx(prepareResult)\n\n            if (result.code === 0) {\n                // Set TXS\n                store.lastTXS = result.transactionHash\n\n                // Show notification\n                notification.notify({\n                    group: 'default',\n                    clean: true\n                })\n\n                notification.notify({\n                    group: store.networks.bostrom.denom,\n                    title: i18n.global.t('message.notification_success_address_rename_title'),\n                    type: 'success',\n                    data: {\n                        chain: 'bostrom',\n                        tx_type: i18n.global.t('message.notification_action_address_rename')\n                    }\n                })\n\n                // Get moon passport\n                await store.getMoonPassport()\n                await store.getOwnerMoonPassport()\n\n                // Hide loader\n                loading.value = false\n\n                // Hide form\n                document.querySelectorAll('.connected_addresses .item').forEach(el => el.classList.remove('editing'))\n            }\n        } catch (error) {\n            console.log(error)\n\n            // Show notification\n            notification.notify({\n                group: 'default',\n                clean: true\n            })\n\n            notification.notify({\n                group: store.networks.bostrom.denom,\n                title: i18n.global.t('message.notification_failed_title'),\n                text: i18n.global.t('message.manage_modal_error_rejected'),\n                type: 'error',\n                data: {\n                    chain: 'bostrom',\n                    tx_type: i18n.global.t('message.notification_action_address_rename')\n                }\n            })\n\n            // Hide loader\n            loading.value = false\n        }\n    }\n</script>\n\n\n<style scoped>\n    form\n    {\n        position: absolute;\n        z-index: 5;\n        top: 0;\n        left: 0;\n\n        width: 100%;\n        height: 100%;\n\n        pointer-events: auto;\n    }\n\n\n    form .input\n    {\n        color: var(--text_color);\n        font-family: var(--font-family);\n        font-size: 14px;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n        padding-right: 55px;\n        padding-bottom: 21px;\n        padding-left: 9px;\n\n        border: 1px solid #950fff;\n        border-radius: 14px;\n        background: #141414;\n    }\n\n\n    form .submit_btn\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 30px;\n        bottom: 0;\n\n        display: flex;\n\n        width: 16px;\n        height: 16px;\n        margin: auto;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    form .submit_btn .icon\n    {\n        display: block;\n\n        width: 16px;\n        height: 16px;\n    }\n\n\n    form .cancel_btn\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 10px;\n        bottom: 0;\n\n        display: flex;\n\n        width: 16px;\n        height: 16px;\n        margin: auto;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    form .cancel_btn .icon\n    {\n        display: block;\n\n        width: 16px;\n        height: 16px;\n    }\n\n\n    form .loader_wrap\n    {\n        border-radius: 13px;\n    }\n\n    form .loader\n    {\n        width: 24px;\n        height: 24px;\n    }\n\n</style>","import script from \"./EditAddressName.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditAddressName.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./EditAddressName.vue?vue&type=style&index=0&id=1fb140e6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1fb140e6\"]])\n\nexport default __exports__","<template>\n    <section class=\"connected_addresses\">\n        <div class=\"title\">\n            <span>{{ $t('message.account_connected_addresses_title') }}</span>\n\n            <button class=\"all_btn\" v-if=\"store.account.moonPassportOwner.extension.addresses\" :class=\"{ active: store.account.currentWallet == 'all' }\" @click.prevent=\"selectWallet('all')\">\n                <div class=\"check\">\n                    <svg><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                </div>\n                <span>{{ $t('message.account_connected_addresses_all') }}</span>\n            </button>\n        </div>\n\n        <div class=\"list\">\n            <div><div class=\"item\"\n                :class=\"{'active': store.account.currentWallet == 'all' || store.account.moonPassportOwnerAddress == generateAddress('bostrom', store.account.currentWallet)}\"\n                @click.prevent=\"selectWallet(store.account.moonPassportOwnerAddress)\"\n            >\n                <div class=\"name\">\n                    {{ store.account.moonPassportOwner.extension.nickname }}\n                </div>\n\n                <button class=\"copy_btn\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_copy_address'))\" v-clipboard:copy=\"store.account.moonPassportOwnerAddress\" v-if=\"store.currentNetwork == 'all'\" v-clipboard:success=\"onCopy\">\n                    <div class=\"tooltip copy_tooltip\">\n                        {{ $t('message.account_copy_tooltip') }}\n                    </div>\n\n                    <svg><use xlink:href=\"@/assets/sprite.svg#ic_copy\"></use></svg>\n                </button>\n\n                <button class=\"copy_btn\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_copy_address'))\" v-clipboard:copy=\"generateAddress(store.networks[store.currentNetwork].address_prefix, store.account.moonPassportOwnerAddress)\" v-clipboard:success=\"onCopy\" v-else>\n                    <div class=\"tooltip copy_tooltip\">\n                        {{ $t('message.account_copy_tooltip') }}\n                    </div>\n\n                    <svg><use xlink:href=\"@/assets/sprite.svg#ic_copy\"></use></svg>\n                </button>\n\n                <div class=\"address\">\n                <template v-if=\"store.currentNetwork == 'all'\">\n                {{ store.account.moonPassportOwnerAddress.slice(0, 13) + '...' + store.account.moonPassportOwnerAddress.slice(-6) }}\n                </template>\n\n                <template v-else>\n                {{ generateAddress(store.networks[store.currentNetwork].address_prefix, store.account.moonPassportOwnerAddress).slice(0, 13) + '...' + generateAddress(store.networks[store.currentNetwork].address_prefix, store.account.moonPassportOwnerAddress).slice(-6) }}\n                </template>\n                </div>\n            </div></div>\n\n            <template v-for=\"(item, index) in store.account.moonPassportOwner.extension.addresses\" :key=\"index\" v-if=\"store.account.moonPassportOwner.extension.addresses\">\n            <div v-if=\"item.address.substring(0, 2) != '0x' && item.address.substring(0, 5) != 'terra'\">\n                <div class=\"item\" @click.self=\"selectWallet(item.address)\" :class=\"{\n                    'duplicate': isDuplicate(item.address),\n                    'active': store.account.currentWallet == 'all' || store.account.currentWallet == generateAddress('bostrom', item.address)\n                }\">\n                    <div class=\"tooltip\">\n                        {{ $t('message.account_duplicate_ext') }}\n                    </div>\n\n                    <div class=\"name\">\n                        <span v-if=\"item.label\">{{ item.label }}</span>\n                        <span v-else>{{ item.address.slice(0, 13) + '...' + item.address.slice(-6) }}</span>\n                    </div>\n\n                    <button class=\"copy_btn\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_copy_address'))\" v-clipboard:copy=\"item.address\" v-if=\"store.currentNetwork == 'all'\">\n                        <div class=\"tooltip copy_tooltip\">\n                            {{ $t('message.account_copy_tooltip') }}\n                        </div>\n\n                        <svg><use xlink:href=\"@/assets/sprite.svg#ic_copy\"></use></svg>\n                    </button>\n\n                    <button class=\"copy_btn\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_copy_address'))\" v-clipboard:copy=\"generateAddress(store.networks[store.currentNetwork].address_prefix, item.address)\" v-clipboard:success=\"onCopy\" v-else>\n                        <div class=\"tooltip copy_tooltip\">\n                            {{ $t('message.account_copy_tooltip') }}\n                        </div>\n\n                        <svg><use xlink:href=\"@/assets/sprite.svg#ic_copy\"></use></svg>\n                    </button>\n\n                    <button class=\"edit_btn\" @click.prevent=\"showEditForm\" v-if=\"store.account.moonPassportOwnerAddress == generateAddress('bostrom', store.Keplr.account.address)\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_edit_address'))\" v-clipboard:success=\"onCopy\">\n                        <svg><use xlink:href=\"@/assets/sprite.svg#ic_edit\"></use></svg>\n                    </button>\n\n                    <button class=\"remove_btn\" @click.prevent=\"openDeleteAddressModal(item.address)\" v-if=\"store.account.moonPassportOwnerAddress == generateAddress('bostrom', store.Keplr.account.address)\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_delete_address'))\">\n                        <svg><use xlink:href=\"@/assets/sprite.svg#ic_remove\"></use></svg>\n                    </button>\n\n                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_duplicate\"></use></svg>\n\n                    <EditAddressName :address=\"item.address\" :name=\"item.label ? item.label : `${item.address.slice(0, 13)}...${item.address.slice(-6)}`\"/>\n\n                    <div class=\"address\">\n                        <template v-if=\"store.currentNetwork == 'all'\">\n                        {{ item.address.slice(0, 13) + '...' + item.address.slice(-6) }}\n                        </template>\n\n                        <template v-else>\n                        {{ generateAddress(store.networks[store.currentNetwork].address_prefix, store.account.moonPassportOwnerAddress).slice(0, 13) + '...' + generateAddress(store.networks[store.currentNetwork].address_prefix, item.address).slice(-6) }}\n                        </template>\n                    </div>\n                </div>\n            </div>\n\n            <div v-else>\n                <div class=\"item not_supported\">\n                    <div class=\"tooltip\">\n                        {{ $t('message.account_not_supported_ext') }}\n                    </div>\n\n                    <div class=\"name\">\n                        <span>{{ item.address.slice(0, 13) + '...' + item.address.slice(-6) }}</span>\n                    </div>\n\n                    <button class=\"copy_btn\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_copy_address'))\" v-clipboard:copy=\"item.address\" v-clipboard:success=\"onCopy\">\n                        <div class=\"tooltip copy_tooltip\">\n                            {{ $t('message.account_copy_tooltip') }}\n                        </div>\n\n                        <svg><use xlink:href=\"@/assets/sprite.svg#ic_copy\"></use></svg>\n                    </button>\n\n                    <button class=\"remove_btn\" @click.prevent=\"openDeleteAddressModal(item.address)\" v-if=\"store.account.moonPassportOwnerAddress == generateAddress('bostrom', store.Keplr.account.address)\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_delete_address'))\">\n                        <svg><use xlink:href=\"@/assets/sprite.svg#ic_remove\"></use></svg>\n                    </button>\n\n                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_duplicate\"></use></svg>\n                </div>\n            </div>\n            </template>\n        </div>\n\n        <button class=\"add_btn\" @click.prevent=\"openAddAddressModal\" :class=\"{'disabled': store.account.moonPassportOwner.extension.addresses && store.account.moonPassportOwner.extension.addresses.length >= 8}\">\n            <span>{{ $t('message.btn_add_address') }}</span>\n            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_plus\"></use></svg>\n        </button>\n\n\n        <!-- Add address modal -->\n        <AddAddressModal v-if=\"store.showAddAddressModal\" />\n\n\n        <!-- Delete address modal -->\n        <DeleteAddressModal v-if=\"store.showDeleteAddressModal\" />\n    </section>\n</template>\n\n\n<script setup>\n    import { inject, onBeforeMount, onBeforeUpdate } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { generateAddress } from '@/utils'\n\n    // Components\n    import AddAddressModal from '@/components/modal/AddAddressModal.vue'\n    import DeleteAddressModal from '@/components/modal/DeleteAddressModal.vue'\n    import EditAddressName from '@/components/account/EditAddressName.vue'\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter')\n\n    var uniqWallets = []\n\n\n    onBeforeMount(() => {\n        // Create uniq wallets array\n        createUniwWalletsArray()\n    })\n\n\n    onBeforeUpdate(() => {\n        // Clear array\n        uniqWallets = []\n\n        // Create uniq wallets array\n        createUniwWalletsArray()\n    })\n\n\n    // Create uniq wallets array\n    function createUniwWalletsArray() {\n        uniqWallets[store.account.moonPassportOwnerAddress] = true\n\n        if(store.account.moonPassportOwner.extension.addresses) {\n            store.account.moonPassportOwner.extension.addresses.forEach(address => {\n                // Drop eth and terra addresses\n                if(address.address.substring(0, 2) != '0x' && address.address.substring(0, 5) != 'terra') {\n                    let tempBostromAddress = generateAddress('bostrom', address.address)\n\n                    if (!uniqWallets[tempBostromAddress]) {\n                        uniqWallets[tempBostromAddress] = false\n                    }\n                }\n            })\n        }\n    }\n\n\n    // Check address\n    function isDuplicate(address) {\n        if(address.substring(0, 2) != '0x' && address.substring(0, 5) != 'terra') {\n            let result = false\n\n            !uniqWallets[generateAddress('bostrom', address)]\n                ? uniqWallets[generateAddress('bostrom', address)] = true\n                : result = true\n\n            return result\n        }\n    }\n\n\n    // Select wallet\n    function selectWallet(address) {\n        if(address == 'all') {\n            store.account.currentWallet == 'all'\n                ? store.account.currentWallet = store.account.moonPassportOwnerAddress\n                : store.account.currentWallet = address\n        } else {\n            store.account.currentWallet = generateAddress('bostrom', address)\n        }\n    }\n\n\n    // Show edit form\n    function showEditForm() {\n        let _self = event.target\n\n        _self.closest('.item').classList.add('editing')\n\n        // Focus on input\n        setTimeout(() => _self.closest('.item').querySelector('.input').focus())\n    }\n\n\n    // Open add address modal\n    function openAddAddressModal() {\n        store.showAddAddressModal = true\n\n        document.body.classList.add('lock')\n    }\n\n\n    // Open delete address modal\n    function openDeleteAddressModal(address) {\n        store.currentDeleteAddress = address\n        store.showDeleteAddressModal = true\n\n        document.body.classList.add('lock')\n    }\n\n\n    // Copy address callback\n    function onCopy() {\n        let _self = event.target\n\n        _self.closest('.item').querySelector('.copy_tooltip').classList.add('show')\n\n        setTimeout(() => _self.closest('.item').querySelector('.copy_tooltip').classList.remove('show'), 2000)\n    }\n\n\n    // Event \"close add address modal\"\n    emitter.on('closeAddAddressModal', () => {\n        if(store.needReload) {\n            // Reload page\n            window.location.reload()\n        } else {\n            store.showAddAddressModal = false\n\n            document.body.classList.remove('lock')\n        }\n    })\n\n\n    // Event \"close delete address modal\"\n    emitter.on('closeDeleteAddressModal', () => {\n        store.showDeleteAddressModal = false\n\n        document.body.classList.remove('lock')\n    })\n</script>\n\n\n<style scoped>\n    .connected_addresses\n    {\n        position: relative;\n\n        padding: 14px 14px 24px;\n\n        border-radius: 20px;\n        background: #0d0d0d;\n    }\n\n\n    .connected_addresses .title\n    {\n        font-size: 30px;\n        font-weight: 600;\n        line-height: 36px;\n\n        display: flex;\n\n        margin-bottom: 20px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .connected_addresses .all_btn\n    {\n        font-size: 14px;\n        line-height: 17px;\n\n        display: flex;\n\n        margin-left: auto;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .connected_addresses .all_btn .check\n    {\n        display: flex;\n\n        width: 20px;\n        height: 20px;\n        margin-right: 8px;\n\n        transition: background .2s linear;\n\n        border-radius: 7px;\n        background: #464646;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .connected_addresses .all_btn .check svg\n    {\n        display: block;\n\n        width: 16px;\n        height: 16px;\n\n        transition: opacity .2s linear;\n\n        opacity: 0;\n    }\n\n\n    .connected_addresses .all_btn.active .check\n    {\n        background: #950fff;\n    }\n    .connected_addresses .all_btn.active .check svg\n    {\n        opacity: 1;\n    }\n\n\n    .connected_addresses .list\n    {\n        display: flex;\n        flex-direction: column;\n    }\n\n\n    .connected_addresses .list > *\n    {\n        position: relative;\n    }\n\n    .connected_addresses .list > * + *\n    {\n        margin-top: 8px;\n    }\n\n\n    .connected_addresses .item\n    {\n        color: rgba(255,255,255,.7);\n\n        position: relative;\n\n        display: flex;\n\n        min-height: 42px;\n        padding: 10px;\n\n        cursor: pointer;\n        transition: .2s linear;\n\n        border-radius: 14px;\n        background: #141414;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .connected_addresses .item.hide\n    {\n        display: none;\n    }\n\n    .connected_addresses .item > *\n    {\n        pointer-events: none;\n    }\n\n\n    .connected_addresses .tooltip\n    {\n        font-size: 12px;\n        line-height: 100%;\n\n        position: absolute;\n        z-index: 9;\n        right: -41px;\n        bottom: 100%;\n\n        display: none;\n\n        margin-bottom: 8px;\n        padding: 8px;\n\n        pointer-events: none;\n\n        border-radius: 8px;\n        background: #282828;\n        box-shadow: 0 6px 12px rgba(0, 0, 0, .2);\n    }\n\n\n    .connected_addresses .tooltip.show\n    {\n        display: block;\n    }\n\n    .connected_addresses .tooltip:before\n    {\n        position: absolute;\n        top: 100%;\n        right: 0;\n        left: 0;\n\n        display: block;\n\n        width: 29px;\n        height: 7px;\n        margin: 0 auto;\n\n        content: '';\n\n        background: url(@/assets/images/tooltip_tail.svg) 50% 0/100% 100% no-repeat;\n    }\n\n\n    .connected_addresses .name\n    {\n        font-size: 14px;\n        line-height: 20px;\n\n        overflow: hidden;\n\n        width: calc(100% - 120px);\n        margin-right: auto;\n        padding-right: 8px;\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .connected_addresses .address\n    {\n        color: #555;\n        font-size: 12px;\n        line-height: 100%;\n\n        position: relative;\n        z-index: 5;\n\n        width: 100%;\n        margin-top: 8px;\n    }\n\n\n    .connected_addresses .item > .icon\n    {\n        color: #eb5757;\n\n        display: none;\n\n        width: 16px;\n        min-width: 16px;\n        height: 16px;\n        margin-left: 8px;\n    }\n\n\n    .connected_addresses .copy_btn\n    {\n        color: #555;\n\n        position: relative;\n\n        display: none;\n\n        width: 16px;\n        min-width: 16px;\n        height: 16px;\n        margin-left: 8px;\n\n        transition: color .2s linear;\n        pointer-events: auto;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .connected_addresses .copy_btn .tooltip\n    {\n        color: #fff;\n\n        right: auto;\n        left: 50%;\n\n        margin-bottom: 20px;\n\n        transform: translateX(-50%);\n        white-space: nowrap;\n    }\n\n    .connected_addresses .copy_btn svg\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n    }\n\n    .connected_addresses .copy_btn:hover\n    {\n        color: #fff;\n    }\n\n\n    .connected_addresses .edit_btn\n    {\n        color: #555;\n\n        display: none;\n\n        width: 16px;\n        min-width: 16px;\n        height: 16px;\n        margin-left: 8px;\n\n        transition: color .2s linear;\n        pointer-events: auto;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .connected_addresses .edit_btn svg\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n    }\n\n    .connected_addresses .edit_btn:hover\n    {\n        color: #fff;\n    }\n\n\n    .connected_addresses .remove_btn\n    {\n        color: #555;\n\n        display: none;\n\n        width: 18px;\n        min-width: 18px;\n        height: 18px;\n        margin-left: 8px;\n\n        transition: color .2s linear;\n        pointer-events: auto;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .connected_addresses .remove_btn svg\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n    }\n\n    .connected_addresses .remove_btn:hover\n    {\n        color: #fff;\n    }\n\n\n    .connected_addresses .item form\n    {\n        display: none;\n\n        pointer-events: auto;\n    }\n\n    .connected_addresses .item.editing form\n    {\n        display: block;\n    }\n\n\n    .connected_addresses .list > *:hover .item\n    {\n        color: #fff;\n\n        background: #212121;\n    }\n\n    .connected_addresses .list > *:hover .item .remove_btn,\n    .connected_addresses .list > *:hover .item .edit_btn,\n    .connected_addresses .list > *:hover .item .copy_btn\n    {\n        display: flex;\n    }\n\n\n    .connected_addresses .item.active\n    {\n        color: #fff;\n\n        background: #141414;\n        box-shadow: inset 0 0 0 1px #950fff;\n    }\n\n\n    .connected_addresses .item.duplicate\n    {\n        color: #fff;\n\n        cursor: default;\n        pointer-events: none;\n\n        box-shadow: none;\n    }\n\n\n    .connected_addresses .item.not_supported\n    {\n        box-shadow: inset 0 0 0 1px #eb5757;\n    }\n\n    .connected_addresses .item.not_supported .tooltip\n    {\n        right: -31px;\n    }\n\n\n    .connected_addresses .item.duplicate > .icon,\n    .connected_addresses .list > *:hover .item.duplicate > .tooltip,\n    .connected_addresses .item.not_supported > .icon,\n    .connected_addresses .list > *:hover .item.not_supported > .tooltip\n    {\n        display: block;\n    }\n\n\n    .connected_addresses .add_btn\n    {\n        font-size: 14px;\n        line-height: 110%;\n\n        display: flex;\n\n        width: 100%;\n        margin-top: 16px;\n        padding: 8px;\n\n        transition: background .2s linear;\n\n        border-radius: 14px;\n        background: #950fff;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .connected_addresses .add_btn .icon\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n        margin-left: 8px;\n    }\n\n    .connected_addresses .add_btn.disabled\n    {\n        pointer-events: none;\n\n        opacity: .3;\n    }\n\n    .connected_addresses .add_btn:hover\n    {\n        background: #7700e1;\n    }\n\n\n\n    @media print, (max-width: 1899px)\n    {\n        .connected_addresses .title\n        {\n            font-size: 27px;\n            line-height: 33px;\n        }\n    }\n\n</style>","import script from \"./ConnectedAddresses.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ConnectedAddresses.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ConnectedAddresses.vue?vue&type=style&index=0&id=29c5710c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-29c5710c\"]])\n\nexport default __exports__","<template>\n    <section class=\"account_info\">\n        <div class=\"cont middle\">\n            <div class=\"grid row\">\n                <section class=\"col\">\n                    <!-- Networks -->\n                    <Networks />\n                </section>\n\n\n                <section class=\"col_main\">\n                    <section class=\"main_data\">\n                        <!-- Contract address -->\n                        <!-- <ContractAddress /> -->\n\n                        <!-- Charts -->\n                        <Charts :key=\"chartsKey\" />\n                    </section>\n\n\n                    <!-- Stats -->\n                    <Stats :key=\"statsKey\" />\n\n                    <!-- Validators -->\n                    <Validators :key=\"validatorsKey\" />\n\n                    <!-- Proposals -->\n                    <Proposals />\n                </section>\n\n\n                <section class=\"col\">\n                    <!-- Connected addresses -->\n                    <ConnectedAddresses />\n                </section>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, inject, ref, watch } from 'vue'\n    import { useGlobalStore } from '@/stores'\n\n    // Components\n    import Networks from '../components/account/Networks.vue'\n    import Charts from '../components/account/Charts.vue'\n    import Stats from '../components/account/Stats.vue'\n    import Validators from '../components/account/Validators.vue'\n    import Proposals from '../components/account/Proposals.vue'\n    import ConnectedAddresses from '../components/account/ConnectedAddresses.vue'\n\n\n    const store = useGlobalStore(),\n        i18n = inject('i18n'),\n        chartsKey = ref(0),\n        statsKey = ref(0),\n        validatorsKey = ref(0)\n\n\n    onBeforeMount(() => {\n        // Set default notification\n        store.tooltip = i18n.global.t('message.notice_default_account_page')\n    })\n\n\n    watch(() => store.account.currentWallet, () => {\n        chartsKey.value += 1\n        statsKey.value += 1\n        validatorsKey.value += 1\n    })\n</script>\n\n\n<style scoped>\n    .grid\n    {\n        justify-content: space-between;\n    }\n\n\n    .col\n    {\n        width: 353px;\n        max-width: 100%;\n    }\n\n\n    .col_main\n    {\n        width: calc(100% - 746px);\n    }\n\n    .col_main > * + *\n    {\n        margin-top: 24px;\n    }\n\n\n\n    .main_data\n    {\n        padding: 20px;\n\n        border-radius: 20px;\n        background: #0d0d0d;\n    }\n\n</style>","import script from \"./Account.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Account.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Account.vue?vue&type=style&index=0&id=df712cf2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-df712cf2\"]])\n\nexport default __exports__"],"names":["store","useGlobalStore","__exports__","ChartJS","register","ArcElement","chart","ref","chartDatasets","reactive","chartActiveLegend","chartTotal","chartData","computed","datasets","data","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","borderAlign","cutout","chartOptions","responsive","plugins","legend","tooltip","animation","duration","transitions","active","onHover","e","item","length","value","index","currentWallet","currentData","total","staked","unbonding","liquid_rewards","calcPercents","type","result","mouseenterLegend","dataIndex","chartInstance","setActiveElements","datasetIndex","update","mouseleaveLegend","setWidth","percents","onBeforeMount","account","wallets","find","el","address","networks","name","wallet","network","push","i18n","inject","labels","global","t","liquid","rewards","ibc","balance","toggleActiveClass","target","closest","classList","toggle","forEach","duplicate","symbol","amount","price","totalPrice","totalTokens","chartColors","groupByDenom","token","allGroupByDenom","logo","sort","a","b","color","networkColors","substring","STRD","XPRT","QCK","emitter","loading","chartActive","async","getData","cosmosNetworkPrice","prices","fetch","generateAddress","cosmoshub","address_prefix","then","res","json","response","totals","outside","native","i","exponent","splice","Math","pow","amountCurrentDenom","parseFloat","currentNetworkInWallet","error","console","log","totalRewardTokens","APR","RPDE","cosmosHubAddress","currentNetwork","info","apr","rpde","RPDE_USDT","imageLoadError","event","add","style","colors","floor","random","getValidatorInfo","columnName","validatorInfo","schema","indexOf","props","validator","operator_address","showValidatorModal","totalPassportTokens","showAll","getAddressData","currentAddress","validators","nickname","coin","getAllData","generatedAddress","moonPassportOwnerAddress","openValidatorModal","document","body","on","remove","proposals","notification","useNotification","activeStep","activeKeplrAddress","Keplr","addedNetwork","addedAddress","ownerAccount","signature","editForm","duplicateError","hasPassportError","tempAddressName","checkAddress","prefix","moonPassportOwner","extension","addresses","includes","checkAllAddress","selectNetwork","setNewSinger","showEditForm","setTimeout","getElementById","focus","hideEditForm","cancelEditForm","setActiveKeplrAddress","userName","window","keplr","enable","chainId","offlineSigner","getOfflineSignerAuto","accounts","getAccounts","createSignature","signArbitrary","CONSTITUTION_HASH","toBase64","toAscii","JSON","stringify","pub_key","notify","group","title","reloadPage","needReload","emit","addAddress","prepareResult","preparePassportTx","proof_address","set_address_label","label","sendTx","code","lastTXS","transactionHash","clean","bostrom","denom","chain","tx_type","text","watchEffect","addEventListener","showAddAddressModal","connectWallet","moonPassport","deleteAddress","remove_address","currentDeleteAddress","location","reload","rawLog","toString","onSubmit","getMoonPassport","getOwnerMoonPassport","querySelectorAll","uniqWallets","createUniwWalletsArray","tempBostromAddress","isDuplicate","selectWallet","_self","querySelector","openAddAddressModal","openDeleteAddressModal","showDeleteAddressModal","onCopy","onBeforeUpdate","chartsKey","statsKey","validatorsKey","watch"],"sourceRoot":""}