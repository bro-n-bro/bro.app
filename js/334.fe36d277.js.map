{"version":3,"file":"js/334.fe36d277.js","mappings":"whiEA8lCI,MAAMA,GAAQC,EAAAA,EAAAA,KACVC,GAAUC,EAAAA,EAAAA,IAAO,W,ihhDCzlCzB,MAAMC,IAA2B,QAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,S","sources":["webpack://bro_app/./src/views/Dashboard.vue","webpack://bro_app/./src/views/Dashboard.vue?040e"],"sourcesContent":["<template>\n    <transition name=\"fade\" mode=\"out-in\" appear type=\"animation\">\n    <section class=\"dashboard\">\n        <div class=\"cont\">\n            <div class=\"row\">\n                <!-- Evmos -->\n                <div class=\"network\" :class=\"{\n                    empty: !store.auth,\n                    disabled: !store.networks.evmos.status && store.auth,\n                    default: store.networks.evmos.tokens_sum\n                }\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/evmos_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.evmos.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\" @mouseover=\"emitter.emit('setNotification', $t('message.network_notice', {\n                            health: $filters.toFixed(store.networks.evmos.health, 2),\n                            color: store.networks.evmos.health_color\n                        }))\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/evmos_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.evmos.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\" @mouseover=\"emitter.emit('setNotification', $t('message.network_sum_notice', { network: store.networks.evmos.name }))\">\n                            {{ $filters.toFixed(store.networks.evmos.tokens_sum, 2) }}\n                            {{ store.networks.evmos.token_name }}\n                        </div>\n\n                        <div class=\"visualization\">\n                            <div class=\"staked\" :style=\"{'width': $filters.toFixed(store.networks.evmos.delegations_percents, 2) + '%'}\" v-show=\"store.networks.evmos.delegations_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_staked_tokens_notice', {\n                                value: store.networks.evmos.delegations_tokens,\n                                denom: store.networks.evmos.token_name\n                            }))\"></div>\n\n                            <div class=\"liquid\" :style=\"{'width': $filters.toFixed(store.networks.evmos.availabel_percents, 2) + '%'}\" v-show=\"store.networks.evmos.availabel_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_liquid_tokens_notice', {\n                                value: store.networks.evmos.availabel_tokens,\n                                denom: store.networks.evmos.token_name\n                            }))\"></div>\n\n                            <div class=\"rewards\" :style=\"{'width': $filters.toFixed(store.networks.evmos.rewards_percents, 2) + '%'}\" v-show=\"store.networks.evmos.rewards_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_rewards_tokens_notice', {\n                                value: store.networks.evmos.rewards_tokens,\n                                denom: store.networks.evmos.token_name\n                            }))\"></div>\n\n                            <div class=\"IBC\" :style=\"{'width': $filters.toFixed(store.networks.evmos.ibc_percents, 2) + '%'}\" v-show=\"store.networks.evmos.ibc_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_ibc_tokens_notice', {\n                                value: store.networks.evmos.ibc_tokens,\n                                denom: store.networks.evmos.token_name,\n                                network: store.networks.evmos.name\n                            }))\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_personal_APR_notice'))\">\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.evmos.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_RPDE_notice', { denom: store.networks.evmos.token_name}))\">\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.evmos.RPDE, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <!-- <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.evmos.status && store.auth\">{{ $t('message.details') }}</a> -->\n                        <button class=\"details_btn\" v-if=\"store.networks.evmos.status && store.auth\" @click.prevent=\"emitter.emit('open_manage_modal', { network: 'evmos' })\">\n                            {{ $t('message.manage_btn') }}\n                        </button>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'evmos' })\">\n                            {{ $t('message.delegate_btn') }}\n                        </button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.evmos.health_color]\" :style=\"{'--speed': store.networks.evmos.speed + 's'}\"></div>\n                </div>\n\n\n                <!-- Juno -->\n                <div class=\"network\" :class=\"{\n                    empty: !store.auth,\n                    disabled: !store.networks.juno.status && store.auth,\n                    default: store.networks.juno.tokens_sum\n                }\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/juno_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.juno.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\" @mouseover=\"emitter.emit('setNotification', $t('message.network_notice', {\n                            health: $filters.toFixed(store.networks.juno.health, 2),\n                            color: store.networks.juno.health_color\n                        }))\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/juno_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.juno.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\" @mouseover=\"emitter.emit('setNotification', $t('message.network_sum_notice', { network: store.networks.juno.name }))\">\n                            {{ $filters.toFixed(store.networks.juno.tokens_sum, 2) }}\n                            {{ store.networks.juno.token_name }}\n                        </div>\n\n                        <div class=\"visualization\">\n                            <div class=\"staked\" :style=\"{'width': $filters.toFixed(store.networks.juno.delegations_percents, 2) + '%'}\" v-show=\"store.networks.juno.delegations_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_staked_tokens_notice', {\n                                value: store.networks.juno.delegations_tokens,\n                                denom: store.networks.juno.token_name\n                            }))\"></div>\n\n                            <div class=\"liquid\" :style=\"{'width': $filters.toFixed(store.networks.juno.availabel_percents, 2) + '%'}\" v-show=\"store.networks.juno.availabel_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_liquid_tokens_notice', {\n                                value: store.networks.juno.availabel_tokens,\n                                denom: store.networks.juno.token_name\n                            }))\"></div>\n\n                            <div class=\"rewards\" :style=\"{'width': $filters.toFixed(store.networks.juno.rewards_percents, 2) + '%'}\" v-show=\"store.networks.juno.rewards_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_rewards_tokens_notice', {\n                                value: store.networks.juno.rewards_tokens,\n                                denom: store.networks.juno.token_name\n                            }))\"></div>\n\n                            <div class=\"IBC\" :style=\"{'width': $filters.toFixed(store.networks.juno.ibc_percents, 2) + '%'}\" v-show=\"store.networks.juno.ibc_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_ibc_tokens_notice', {\n                                value: store.networks.juno.ibc_tokens,\n                                denom: store.networks.juno.token_name,\n                                network: store.networks.juno.name\n                            }))\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_personal_APR_notice'))\">\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n\n                                <div class=\"val\"> {{ $filters.toFixed(store.networks.juno.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_RPDE_notice', { denom: store.networks.juno.token_name}))\">\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.juno.RPDE, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <!-- <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.juno.status && store.auth\">{{ $t('message.details') }}</a> -->\n                        <button class=\"details_btn\" v-if=\"store.networks.juno.status && store.auth\" @click.prevent=\"emitter.emit('open_manage_modal', { network: 'juno' })\">\n                            {{ $t('message.manage_btn') }}\n                        </button>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'juno' })\">\n                            {{ $t('message.delegate_btn') }}\n                        </button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.juno.health_color]\" :style=\"{'--speed': store.networks.juno.speed + 's'}\"></div>\n                </div>\n\n\n                <!-- Сosmos hub -->\n                <div class=\"network\" :class=\"{\n                    empty: !store.auth,\n                    disabled: !store.networks.cosmoshub.status && store.auth,\n                    default: store.networks.cosmoshub.tokens_sum\n                }\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/cosmos_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.cosmoshub.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\" @mouseover=\"emitter.emit('setNotification', $t('message.network_notice', {\n                            health: $filters.toFixed(store.networks.cosmoshub.health, 2),\n                            color: store.networks.cosmoshub.health_color\n                        }))\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/cosmos_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.cosmoshub.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\" @mouseover=\"emitter.emit('setNotification', $t('message.network_sum_notice', { network: store.networks.cosmoshub.name }))\">\n                            {{ $filters.toFixed(store.networks.cosmoshub.tokens_sum, 2) }}\n                            {{ store.networks.cosmoshub.token_name }}\n                        </div>\n\n                        <div class=\"visualization\">\n                            <div class=\"staked\" :style=\"{'width': $filters.toFixed(store.networks.cosmoshub.delegations_percents, 2) + '%'}\" v-show=\"store.networks.cosmoshub.delegations_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_staked_tokens_notice', {\n                                value: store.networks.cosmoshub.delegations_tokens,\n                                denom: store.networks.cosmoshub.token_name\n                            }))\"></div>\n\n                            <div class=\"liquid\" :style=\"{'width': $filters.toFixed(store.networks.cosmoshub.availabel_percents, 2) + '%'}\" v-show=\"store.networks.cosmoshub.availabel_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_liquid_tokens_notice', {\n                                value: store.networks.cosmoshub.availabel_tokens,\n                                denom: store.networks.cosmoshub.token_name\n                            }))\"></div>\n\n                            <div class=\"rewards\" :style=\"{'width': $filters.toFixed(store.networks.cosmoshub.rewards_percents, 2) + '%'}\" v-show=\"store.networks.cosmoshub.rewards_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_rewards_tokens_notice', {\n                                value: store.networks.cosmoshub.rewards_tokens,\n                                denom: store.networks.cosmoshub.token_name\n                            }))\"></div>\n\n                            <div class=\"IBC\" :style=\"{'width': $filters.toFixed(store.networks.cosmoshub.ibc_percents, 2) + '%'}\" v-show=\"store.networks.cosmoshub.ibc_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_ibc_tokens_notice', {\n                                value: store.networks.cosmoshub.ibc_tokens,\n                                denom: store.networks.cosmoshub.token_name,\n                                network: store.networks.cosmoshub.name\n                            }))\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_personal_APR_notice'))\">\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n\n                                <div class=\"val\"> {{ $filters.toFixed(store.networks.cosmoshub.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_RPDE_notice', { denom: store.networks.cosmoshub.token_name}))\">\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.cosmoshub.RPDE, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <!-- <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.cosmoshub.status && store.auth\">{{ $t('message.details') }}</a> -->\n                        <button class=\"details_btn\" v-if=\"store.networks.cosmoshub.status && store.auth\" @click.prevent=\"emitter.emit('open_manage_modal', { network: 'cosmoshub' })\">\n                            {{ $t('message.manage_btn') }}\n                        </button>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'cosmoshub' })\">\n                            {{ $t('message.delegate_btn') }}\n                        </button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.cosmoshub.health_color]\" :style=\"{'--speed': store.networks.cosmoshub.speed + 's'}\"></div>\n                </div>\n\n\n                <!-- Bostrom -->\n                <div class=\"network\" :class=\"{\n                    empty: !store.auth,\n                    disabled: !store.networks.bostrom.status && store.auth,\n                    default: store.networks.bostrom.tokens_sum\n                }\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/bostrom_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.bostrom.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\" @mouseover=\"emitter.emit('setNotification', $t('message.network_notice', {\n                            health: $filters.toFixed(store.networks.bostrom.health, 2),\n                            color: store.networks.bostrom.health_color\n                        }))\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/bostrom_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.bostrom.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\" @mouseover=\"emitter.emit('setNotification', $t('message.network_sum_notice', { network: store.networks.bostrom.name }))\">\n                            {{ $filters.toFixed(store.networks.bostrom.tokens_sum, 2) }}\n                            {{ store.networks.bostrom.token_name }}\n                        </div>\n\n                        <div class=\"visualization\">\n                            <div class=\"staked\" :style=\"{'width': $filters.toFixed(store.networks.bostrom.delegations_percents, 2) + '%'}\" v-show=\"store.networks.bostrom.delegations_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_staked_tokens_notice', {\n                                value: store.networks.bostrom.delegations_tokens,\n                                denom: store.networks.bostrom.token_name\n                            }))\"></div>\n\n                            <div class=\"liquid\" :style=\"{'width': $filters.toFixed(store.networks.bostrom.availabel_percents, 2) + '%'}\" v-show=\"store.networks.bostrom.availabel_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_liquid_tokens_notice', {\n                                value: store.networks.bostrom.availabel_tokens,\n                                denom: store.networks.bostrom.token_name\n                            }))\"></div>\n\n                            <div class=\"rewards\" :style=\"{'width': $filters.toFixed(store.networks.bostrom.rewards_percents, 2) + '%'}\" v-show=\"store.networks.bostrom.rewards_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_rewards_tokens_notice', {\n                                value: store.networks.bostrom.rewards_tokens,\n                                denom: store.networks.bostrom.token_name\n                            }))\"></div>\n\n                            <div class=\"IBC\" :style=\"{'width': $filters.toFixed(store.networks.bostrom.ibc_percents, 2) + '%'}\" v-show=\"store.networks.bostrom.ibc_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_ibc_tokens_notice', {\n                                value: store.networks.bostrom.ibc_tokens,\n                                denom: store.networks.bostrom.token_name,\n                                network: store.networks.bostrom.name\n                            }))\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_personal_APR_notice'))\">\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n\n                                <div class=\"val\"> {{ $filters.toFixed(store.networks.bostrom.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_RPDE_notice', { denom: store.networks.bostrom.token_name}))\">\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.bostrom.RPDE, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <!-- <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.bostrom.status && store.auth\">{{ $t('message.details') }}</a> -->\n                        <button class=\"details_btn\" v-if=\"store.networks.bostrom.status && store.auth\" @click.prevent=\"emitter.emit('open_manage_modal', { network: 'bostrom' })\">\n                            {{ $t('message.manage_btn') }}\n                        </button>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'bostrom' })\">\n                            {{ $t('message.delegate_btn') }}\n                        </button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.bostrom.health_color]\" :style=\"{'--speed': store.networks.bostrom.speed + 's'}\"></div>\n                </div>\n            </div>\n\n\n            <!-- E-money -->\n            <div class=\"row\">\n                <div class=\"network\" :class=\"{\n                    empty: !store.auth,\n                    disabled: !store.networks.emoney.status && store.auth,\n                    default: store.networks.emoney.tokens_sum\n                }\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/e-money_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.emoney.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\" @mouseover=\"emitter.emit('setNotification', $t('message.network_notice', {\n                            health: $filters.toFixed(store.networks.emoney.health, 2),\n                            color: store.networks.emoney.health_color\n                        }))\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/e-money_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.emoney.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\" @mouseover=\"emitter.emit('setNotification', $t('message.network_sum_notice', { network: store.networks.emoney.name }))\">\n                            {{ $filters.toFixed(store.networks.emoney.tokens_sum, 2) }}\n                            {{ store.networks.emoney.token_name }}\n                        </div>\n\n                        <div class=\"visualization\">\n                            <div class=\"staked\" :style=\"{'width': $filters.toFixed(store.networks.emoney.delegations_percents, 2) + '%'}\" v-show=\"store.networks.emoney.delegations_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_staked_tokens_notice', {\n                                value: store.networks.emoney.delegations_tokens,\n                                denom: store.networks.emoney.token_name\n                            }))\"></div>\n\n                            <div class=\"liquid\" :style=\"{'width': $filters.toFixed(store.networks.emoney.availabel_percents, 2) + '%'}\" v-show=\"store.networks.emoney.availabel_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_liquid_tokens_notice', {\n                                value: store.networks.emoney.availabel_tokens,\n                                denom: store.networks.emoney.token_name\n                            }))\"></div>\n\n                            <div class=\"rewards\" :style=\"{'width': $filters.toFixed(store.networks.emoney.rewards_percents, 2) + '%'}\" v-show=\"store.networks.emoney.rewards_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_rewards_tokens_notice', {\n                                value: store.networks.emoney.rewards_tokens,\n                                denom: store.networks.emoney.token_name\n                            }))\"></div>\n\n                            <div class=\"IBC\" :style=\"{'width': $filters.toFixed(store.networks.emoney.ibc_percents, 2) + '%'}\" v-show=\"store.networks.emoney.ibc_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_ibc_tokens_notice', {\n                                value: store.networks.emoney.ibc_tokens,\n                                denom: store.networks.emoney.token_name,\n                                network: store.networks.emoney.name\n                            }))\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_personal_APR_notice'))\">\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n\n                                <div class=\"val\"> {{ $filters.toFixed(store.networks.emoney.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_RPDE_notice', { denom: store.networks.emoney.token_name}))\">\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.emoney.RPDE, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <!-- <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.emoney.status && store.auth\">{{ $t('message.details') }}</a> -->\n                        <button class=\"details_btn\" v-if=\"store.networks.emoney.status && store.auth\" @click.prevent=\"emitter.emit('open_manage_modal', { network: 'emoney' })\">\n                            {{ $t('message.manage_btn') }}\n                        </button>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'emoney' })\">\n                            {{ $t('message.delegate_btn') }}\n                        </button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.emoney.health_color]\" :style=\"{'--speed': store.networks.emoney.speed + 's'}\"></div>\n                </div>\n\n\n                <!-- Desmos -->\n                <div class=\"network\" :class=\"{\n                    empty: !store.auth,\n                    disabled: !store.networks.desmos.status && store.auth,\n                    default: store.networks.desmos.tokens_sum\n                }\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/desmos_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.desmos.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\" @mouseover=\"emitter.emit('setNotification', $t('message.network_notice', {\n                            health: $filters.toFixed(store.networks.desmos.health, 2),\n                            color: store.networks.desmos.health_color\n                        }))\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/desmos_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.desmos.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\" @mouseover=\"emitter.emit('setNotification', $t('message.network_sum_notice', { network: store.networks.desmos.name }))\">\n                            {{ $filters.toFixed(store.networks.desmos.tokens_sum, 2) }}\n                            {{ store.networks.desmos.token_name }}\n                        </div>\n\n                        <div class=\"visualization\">\n                            <div class=\"staked\" :style=\"{'width': $filters.toFixed(store.networks.desmos.delegations_percents, 2) + '%'}\" v-show=\"store.networks.desmos.delegations_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_staked_tokens_notice', {\n                                value: store.networks.desmos.delegations_tokens,\n                                denom: store.networks.desmos.token_name\n                            }))\"></div>\n\n                            <div class=\"liquid\" :style=\"{'width': $filters.toFixed(store.networks.desmos.availabel_percents, 2) + '%'}\" v-show=\"store.networks.desmos.availabel_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_liquid_tokens_notice', {\n                                value: store.networks.desmos.availabel_tokens,\n                                denom: store.networks.desmos.token_name\n                            }))\"></div>\n\n                            <div class=\"rewards\" :style=\"{'width': $filters.toFixed(store.networks.desmos.rewards_percents, 2) + '%'}\" v-show=\"store.networks.desmos.rewards_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_rewards_tokens_notice', {\n                                value: store.networks.desmos.rewards_tokens,\n                                denom: store.networks.desmos.token_name\n                            }))\"></div>\n\n                            <div class=\"IBC\" :style=\"{'width': $filters.toFixed(store.networks.desmos.ibc_percents, 2) + '%'}\" v-show=\"store.networks.desmos.ibc_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_ibc_tokens_notice', {\n                                value: store.networks.desmos.ibc_tokens,\n                                denom: store.networks.desmos.token_name,\n                                network: store.networks.desmos.name\n                            }))\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_personal_APR_notice'))\">\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n\n                                <div class=\"val\"> {{ $filters.toFixed(store.networks.desmos.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_RPDE_notice', { denom: store.networks.desmos.token_name}))\">\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.desmos.RPDE, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <!-- <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.desmos.status && store.auth\">{{ $t('message.details') }}</a> -->\n                        <button class=\"details_btn\" v-if=\"store.networks.desmos.status && store.auth\" @click.prevent=\"emitter.emit('open_manage_modal', { network: 'desmos' })\">\n                            {{ $t('message.manage_btn') }}\n                        </button>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'desmos' })\">\n                            {{ $t('message.delegate_btn') }}\n                        </button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.desmos.health_color]\" :style=\"{'--speed': store.networks.desmos.speed + 's'}\"></div>\n                </div>\n\n\n                <!-- Account -->\n                <div class=\"account\">\n                    <button class=\"connect_wallet_btn\" @click.prevent=\"emitter.emit('connectWallet')\" v-if=\"!store.auth\">\n                        {{ $t('message.connect_wallet_btn') }}\n                    </button>\n\n                    <template v-else>\n                        <div class=\"user_name\">{{ store.userName }}</div>\n\n                        <div class=\"balance\" @mouseover=\"emitter.emit('setNotification', $t('message.account_balance_notice'))\">\n                            <template v-if=\"store.currency == 'USDT'\">\n                            {{ $filters.toFixed(store.account.balance_usdt, 1) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'ATOM'\">\n                            {{ $filters.toFixed(store.account.balance_atom, 2) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'ETH'\">\n                            {{ $filters.toFixed(store.account.balance_eth, 4) }}\n                            </template>\n\n                            <template v-if=\"store.currency == 'BTC'\">\n                            {{ $filters.toFixed(store.account.balance_btc, 5) }}\n                            </template>\n\n                            {{ store.currency }}\n                        </div>\n\n                        <div class=\"stats\">\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.account_RPDE_notice'))\">\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n\n                                <div class=\"val\">\n                                    <template v-if=\"store.currency == 'USDT'\">\n                                    {{ $filters.toFixed(store.account.RPDE_usdt, 3) }}\n                                    </template>\n\n                                    <template v-if=\"store.currency == 'ATOM'\">\n                                    {{ $filters.toFixed(store.account.RPDE_atom, 3) }}\n                                    </template>\n\n                                    <template v-if=\"store.currency == 'ETH'\">\n                                    {{ $filters.toFixed(store.account.RPDE_eth, 3) }}\n                                    </template>\n\n                                    <template v-if=\"store.currency == 'BTC'\">\n                                    {{ $filters.toFixed(store.account.RPDE_btc, 3) }}\n                                    </template>\n                                </div>\n                            </div>\n\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.account_personal_APR_notice'))\">\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n\n                                <div class=\"val\">{{ $filters.toFixed(store.account.personal_APR, 2) }}%</div>\n                            </div>\n                        </div>\n\n                        <router-link to=\"/under_construction\" class=\"details_btn\">{{ $t('message.details_btn') }}</router-link>\n                    </template>\n\n                    <div class=\"shadow\"></div>\n                </div>\n\n\n                <!-- Osmosis -->\n                <div class=\"network\" :class=\"{\n                    empty: !store.auth,\n                    disabled: !store.networks.osmosis.status && store.auth,\n                    default: store.networks.osmosis.tokens_sum\n                }\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/osmosis_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.osmosis.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\" @mouseover=\"emitter.emit('setNotification', $t('message.network_notice', {\n                            health: $filters.toFixed(store.networks.osmosis.health, 2),\n                            color: store.networks.osmosis.health_color\n                        }))\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/osmosis_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.osmosis.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\" @mouseover=\"emitter.emit('setNotification', $t('message.network_sum_notice', { network: store.networks.osmosis.name }))\">\n                            {{ $filters.toFixed(store.networks.osmosis.tokens_sum, 2) }}\n                            {{ store.networks.osmosis.token_name }}\n                        </div>\n\n                        <div class=\"visualization\">\n                            <div class=\"staked\" :style=\"{'width': $filters.toFixed(store.networks.osmosis.delegations_percents, 2) + '%'}\" v-show=\"store.networks.osmosis.delegations_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_staked_tokens_notice', {\n                                value: store.networks.osmosis.delegations_tokens,\n                                denom: store.networks.osmosis.token_name\n                            }))\"></div>\n\n                            <div class=\"liquid\" :style=\"{'width': $filters.toFixed(store.networks.osmosis.availabel_percents, 2) + '%'}\" v-show=\"store.networks.osmosis.availabel_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_liquid_tokens_notice', {\n                                value: store.networks.osmosis.availabel_tokens,\n                                denom: store.networks.osmosis.token_name\n                            }))\"></div>\n\n                            <div class=\"rewards\" :style=\"{'width': $filters.toFixed(store.networks.osmosis.rewards_percents, 2) + '%'}\" v-show=\"store.networks.osmosis.rewards_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_rewards_tokens_notice', {\n                                value: store.networks.osmosis.rewards_tokens,\n                                denom: store.networks.osmosis.token_name\n                            }))\"></div>\n\n                            <div class=\"IBC\" :style=\"{'width': $filters.toFixed(store.networks.osmosis.ibc_percents, 2) + '%'}\" v-show=\"store.networks.osmosis.ibc_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_ibc_tokens_notice', {\n                                value: store.networks.osmosis.ibc_tokens,\n                                denom: store.networks.osmosis.token_name,\n                                network: store.networks.osmosis.name\n                            }))\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_personal_APR_notice'))\">\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n\n                                <div class=\"val\"> {{ $filters.toFixed(store.networks.osmosis.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_RPDE_notice', { denom: store.networks.osmosis.token_name}))\">\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.osmosis.RPDE, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <!-- <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.osmosis.status && store.auth\">{{ $t('message.details') }}</a> -->\n                        <button class=\"details_btn\" v-if=\"store.networks.osmosis.status && store.auth\" @click.prevent=\"emitter.emit('open_manage_modal', { network: 'osmosis' })\">\n                            {{ $t('message.manage_btn') }}\n                        </button>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'osmosis' })\">\n                            {{ $t('message.delegate_btn') }}\n                        </button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.osmosis.health_color]\" :style=\"{'--speed': store.networks.osmosis.speed + 's'}\"></div>\n                </div>\n\n\n                <!-- Crescent -->\n                <div class=\"network\" :class=\"{\n                    empty: !store.auth,\n                    disabled: !store.networks.crescent.status && store.auth,\n                    default: store.networks.crescent.tokens_sum\n                }\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/crescent_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.crescent.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\" @mouseover=\"emitter.emit('setNotification', $t('message.network_notice', {\n                            health: $filters.toFixed(store.networks.crescent.health, 2),\n                            color: store.networks.crescent.health_color\n                        }))\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/crescent_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.crescent.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\" @mouseover=\"emitter.emit('setNotification', $t('message.network_sum_notice', { network: store.networks.crescent.name }))\">\n                            {{ $filters.toFixed(store.networks.crescent.tokens_sum, 2) }}\n                            {{ store.networks.crescent.token_name }}\n                        </div>\n\n                        <div class=\"visualization\">\n                            <div class=\"staked\" :style=\"{'width': $filters.toFixed(store.networks.crescent.delegations_percents, 2) + '%'}\" v-show=\"store.networks.crescent.delegations_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_staked_tokens_notice', {\n                                value: store.networks.crescent.delegations_tokens,\n                                denom: store.networks.crescent.token_name\n                            }))\"></div>\n\n                            <div class=\"liquid\" :style=\"{'width': $filters.toFixed(store.networks.crescent.availabel_percents, 2) + '%'}\" v-show=\"store.networks.crescent.availabel_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_liquid_tokens_notice', {\n                                value: store.networks.crescent.availabel_tokens,\n                                denom: store.networks.crescent.token_name\n                            }))\"></div>\n\n                            <div class=\"rewards\" :style=\"{'width': $filters.toFixed(store.networks.crescent.rewards_percents, 2) + '%'}\" v-show=\"store.networks.crescent.rewards_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_rewards_tokens_notice', {\n                                value: store.networks.crescent.rewards_tokens,\n                                denom: store.networks.crescent.token_name\n                            }))\"></div>\n\n                            <div class=\"IBC\" :style=\"{'width': $filters.toFixed(store.networks.crescent.ibc_percents, 2) + '%'}\" v-show=\"store.networks.crescent.ibc_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_ibc_tokens_notice', {\n                                value: store.networks.crescent.ibc_tokens,\n                                denom: store.networks.crescent.token_name,\n                                network: store.networks.crescent.name\n                            }))\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_personal_APR_notice'))\">\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n\n                                <div class=\"val\"> {{ $filters.toFixed(store.networks.crescent.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_RPDE_notice', { denom: store.networks.crescent.token_name}))\">\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.crescent.RPDE, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <!-- <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.crescent.status && store.auth\">{{ $t('message.details') }}</a> -->\n                        <button class=\"details_btn\" v-if=\"store.networks.crescent.status && store.auth\" @click.prevent=\"emitter.emit('open_manage_modal', { network: 'crescent' })\">\n                            {{ $t('message.manage_btn') }}\n                        </button>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'crescent' })\">\n                            {{ $t('message.delegate_btn') }}\n                        </button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.crescent.health_color]\" :style=\"{'--speed': store.networks.crescent.speed + 's'}\"></div>\n                </div>\n            </div>\n\n\n            <!-- Gravity bridge -->\n            <div class=\"row\">\n                <div class=\"network\" :class=\"{\n                    empty: !store.auth,\n                    disabled: !store.networks.gravity.status && store.auth,\n                    default: store.networks.gravity.tokens_sum\n                }\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/g-bridge_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.gravity.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\" @mouseover=\"emitter.emit('setNotification', $t('message.network_notice', {\n                            health: $filters.toFixed(store.networks.gravity.health, 2),\n                            color: store.networks.gravity.health_color\n                        }))\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/g-bridge_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.gravity.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\" @mouseover=\"emitter.emit('setNotification', $t('message.network_sum_notice', { network: store.networks.gravity.name }))\">\n                            {{ $filters.toFixed(store.networks.gravity.tokens_sum, 2) }}\n                            {{ store.networks.gravity.token_name }}\n                        </div>\n\n                        <div class=\"visualization\">\n                            <div class=\"staked\" :style=\"{'width': $filters.toFixed(store.networks.gravity.delegations_percents, 2) + '%'}\" v-show=\"store.networks.gravity.delegations_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_staked_tokens_notice', {\n                                value: store.networks.gravity.delegations_tokens,\n                                denom: store.networks.gravity.token_name\n                            }))\"></div>\n\n                            <div class=\"liquid\" :style=\"{'width': $filters.toFixed(store.networks.gravity.availabel_percents, 2) + '%'}\" v-show=\"store.networks.gravity.availabel_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_liquid_tokens_notice', {\n                                value: store.networks.gravity.availabel_tokens,\n                                denom: store.networks.gravity.token_name\n                            }))\"></div>\n\n                            <div class=\"rewards\" :style=\"{'width': $filters.toFixed(store.networks.gravity.rewards_percents, 2) + '%'}\" v-show=\"store.networks.gravity.rewards_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_rewards_tokens_notice', {\n                                value: store.networks.gravity.rewards_tokens,\n                                denom: store.networks.gravity.token_name\n                            }))\"></div>\n\n                            <div class=\"IBC\" :style=\"{'width': $filters.toFixed(store.networks.gravity.ibc_percents, 2) + '%'}\" v-show=\"store.networks.gravity.ibc_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_ibc_tokens_notice', {\n                                value: store.networks.gravity.ibc_tokens,\n                                denom: store.networks.gravity.token_name,\n                                network: store.networks.gravity.name\n                            }))\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_personal_APR_notice'))\">\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n\n                                <div class=\"val\"> {{ $filters.toFixed(store.networks.gravity.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_RPDE_notice', { denom: store.networks.gravity.token_name}))\">\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.gravity.RPDE, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <!-- <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.gravity.status && store.auth\">{{ $t('message.details') }}</a> -->\n                        <button class=\"details_btn\" v-if=\"store.networks.gravity.status && store.auth\" @click.prevent=\"emitter.emit('open_manage_modal', { network: 'gravity' })\">\n                            {{ $t('message.manage_btn') }}\n                        </button>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'gravity' })\">\n                            {{ $t('message.delegate_btn') }}\n                        </button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.gravity.health_color]\" :style=\"{'--speed': store.networks.gravity.speed + 's'}\"></div>\n                </div>\n\n\n                <!-- Stargaze -->\n                <div class=\"network\" :class=\"{\n                    empty: !store.auth,\n                    disabled: !store.networks.stargaze.status && store.auth,\n                    default: store.networks.stargaze.tokens_sum\n                }\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/stargaze_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.stargaze.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\" @mouseover=\"emitter.emit('setNotification', $t('message.network_notice', {\n                            health: $filters.toFixed(store.networks.stargaze.health, 2),\n                            color: store.networks.stargaze.health_color\n                        }))\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/stargaze_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.stargaze.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\" @mouseover=\"emitter.emit('setNotification', $t('message.network_sum_notice', { network: store.networks.stargaze.name }))\">\n                            {{ $filters.toFixed(store.networks.stargaze.tokens_sum, 2) }}\n                            {{ store.networks.stargaze.token_name }}\n                        </div>\n\n                        <div class=\"visualization\">\n                            <div class=\"staked\" :style=\"{'width': $filters.toFixed(store.networks.stargaze.delegations_percents, 2) + '%'}\" v-show=\"store.networks.stargaze.delegations_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_staked_tokens_notice', {\n                                value: store.networks.stargaze.delegations_tokens,\n                                denom: store.networks.stargaze.token_name\n                            }))\"></div>\n\n                            <div class=\"liquid\" :style=\"{'width': $filters.toFixed(store.networks.stargaze.availabel_percents, 2) + '%'}\" v-show=\"store.networks.stargaze.availabel_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_liquid_tokens_notice', {\n                                value: store.networks.stargaze.availabel_tokens,\n                                denom: store.networks.stargaze.token_name\n                            }))\"></div>\n\n                            <div class=\"rewards\" :style=\"{'width': $filters.toFixed(store.networks.stargaze.rewards_percents, 2) + '%'}\" v-show=\"store.networks.stargaze.rewards_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_rewards_tokens_notice', {\n                                value: store.networks.stargaze.rewards_tokens,\n                                denom: store.networks.stargaze.token_name\n                            }))\"></div>\n\n                            <div class=\"IBC\" :style=\"{'width': $filters.toFixed(store.networks.stargaze.ibc_percents, 2) + '%'}\" v-show=\"store.networks.stargaze.ibc_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_ibc_tokens_notice', {\n                                value: store.networks.stargaze.ibc_tokens,\n                                denom: store.networks.stargaze.token_name,\n                                network: store.networks.stargaze.name\n                            }))\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_personal_APR_notice'))\">\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n\n                                <div class=\"val\"> {{ $filters.toFixed(store.networks.stargaze.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_RPDE_notice', { denom: store.networks.stargaze.token_name}))\">\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.stargaze.RPDE, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <!-- <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.stargaze.status && store.auth\">{{ $t('message.details') }}</a> -->\n                        <button class=\"details_btn\" v-if=\"store.networks.stargaze.status && store.auth\" @click.prevent=\"emitter.emit('open_manage_modal', { network: 'stargaze' })\">\n                            {{ $t('message.manage_btn') }}\n                        </button>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'stargaze' })\">\n                            {{ $t('message.delegate_btn') }}\n                        </button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.stargaze.health_color]\" :style=\"{'--speed': store.networks.stargaze.speed + 's'}\"></div>\n                </div>\n\n\n                <!-- Omniflix hub -->\n                <div class=\"network\" :class=\"{\n                    empty: !store.auth,\n                    disabled: !store.networks.omniflix.status && store.auth,\n                    default: store.networks.omniflix.tokens_sum\n                }\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/omniflix_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.omniflix.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\" @mouseover=\"emitter.emit('setNotification', $t('message.network_notice', {\n                            health: $filters.toFixed(store.networks.omniflix.health, 2),\n                            color: store.networks.omniflix.health_color\n                        }))\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/omniflix_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.omniflix.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\" @mouseover=\"emitter.emit('setNotification', $t('message.network_sum_notice', { network: store.networks.omniflix.name }))\">\n                            {{ $filters.toFixed(store.networks.omniflix.tokens_sum, 2) }}\n                            {{ store.networks.omniflix.token_name }}\n                        </div>\n\n                        <div class=\"visualization\">\n                            <div class=\"staked\" :style=\"{'width': $filters.toFixed(store.networks.omniflix.delegations_percents, 2) + '%'}\" v-show=\"store.networks.omniflix.delegations_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_staked_tokens_notice', {\n                                value: store.networks.omniflix.delegations_tokens,\n                                denom: store.networks.omniflix.token_name\n                            }))\"></div>\n\n                            <div class=\"liquid\" :style=\"{'width': $filters.toFixed(store.networks.omniflix.availabel_percents, 2) + '%'}\" v-show=\"store.networks.omniflix.availabel_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_liquid_tokens_notice', {\n                                value: store.networks.omniflix.availabel_tokens,\n                                denom: store.networks.omniflix.token_name\n                            }))\"></div>\n\n                            <div class=\"rewards\" :style=\"{'width': $filters.toFixed(store.networks.omniflix.rewards_percents, 2) + '%'}\" v-show=\"store.networks.omniflix.rewards_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_rewards_tokens_notice', {\n                                value: store.networks.omniflix.rewards_tokens,\n                                denom: store.networks.omniflix.token_name\n                            }))\"></div>\n\n                            <div class=\"IBC\" :style=\"{'width': $filters.toFixed(store.networks.omniflix.ibc_percents, 2) + '%'}\" v-show=\"store.networks.omniflix.ibc_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_ibc_tokens_notice', {\n                                value: store.networks.omniflix.ibc_tokens,\n                                denom: store.networks.omniflix.token_name,\n                                network: store.networks.omniflix.name\n                            }))\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_personal_APR_notice'))\">\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n\n                                <div class=\"val\"> {{ $filters.toFixed(store.networks.omniflix.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_RPDE_notice', { denom: store.networks.omniflix.token_name}))\">\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.omniflix.RPDE, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <!-- <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.omniflix.status && store.auth\">{{ $t('message.details') }}</a> -->\n                        <button class=\"details_btn\" v-if=\"store.networks.omniflix.status && store.auth\" @click.prevent=\"emitter.emit('open_manage_modal', { network: 'omniflix' })\">\n                            {{ $t('message.manage_btn') }}\n                        </button>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'omniflix' })\">\n                            {{ $t('message.delegate_btn') }}\n                        </button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.omniflix.health_color]\" :style=\"{'--speed': store.networks.omniflix.speed + 's'}\"></div>\n                </div>\n\n\n                <!-- Stride -->\n                <div class=\"network\" :class=\"{\n                    empty: !store.auth,\n                    disabled: !store.networks.stride.status && store.auth,\n                    default: store.networks.stride.tokens_sum\n                }\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/stride_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.stride.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\" @mouseover=\"emitter.emit('setNotification', $t('message.network_notice', {\n                            health: $filters.toFixed(store.networks.stride.health, 2),\n                            color: store.networks.stride.health_color\n                        }))\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/stride_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.stride.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\" @mouseover=\"emitter.emit('setNotification', $t('message.network_sum_notice', { network: store.networks.stride.name }))\">\n                            {{ $filters.toFixed(store.networks.stride.tokens_sum, 2) }}\n                            {{ store.networks.stride.token_name }}\n                        </div>\n\n                        <div class=\"visualization\">\n                            <div class=\"staked\" :style=\"{'width': $filters.toFixed(store.networks.stride.delegations_percents, 2) + '%'}\" v-show=\"store.networks.stride.delegations_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_staked_tokens_notice', {\n                                value: store.networks.stride.delegations_tokens,\n                                denom: store.networks.stride.token_name\n                            }))\"></div>\n\n                            <div class=\"liquid\" :style=\"{'width': $filters.toFixed(store.networks.stride.availabel_percents, 2) + '%'}\" v-show=\"store.networks.stride.availabel_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_liquid_tokens_notice', {\n                                value: store.networks.stride.availabel_tokens,\n                                denom: store.networks.stride.token_name\n                            }))\"></div>\n\n                            <div class=\"rewards\" :style=\"{'width': $filters.toFixed(store.networks.stride.rewards_percents, 2) + '%'}\" v-show=\"store.networks.stride.rewards_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_rewards_tokens_notice', {\n                                value: store.networks.stride.rewards_tokens,\n                                denom: store.networks.stride.token_name\n                            }))\"></div>\n\n                            <div class=\"IBC\" :style=\"{'width': $filters.toFixed(store.networks.stride.ibc_percents, 2) + '%'}\" v-show=\"store.networks.stride.ibc_tokens\"\n                            @mouseover=\"emitter.emit('setNotification', $t('message.network_ibc_tokens_notice', {\n                                value: store.networks.stride.ibc_tokens,\n                                denom: store.networks.stride.token_name,\n                                network: store.networks.stride.name\n                            }))\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_personal_APR_notice'))\">\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n\n                                <div class=\"val\"> {{ $filters.toFixed(store.networks.stride.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div @mouseover=\"emitter.emit('setNotification', $t('message.network_RPDE_notice', { denom: store.networks.stride.token_name}))\">\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.stride.RPDE, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <!-- <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.stride.status && store.auth\">{{ $t('message.details') }}</a> -->\n                        <button class=\"details_btn\" v-if=\"store.networks.stride.status && store.auth\" @click.prevent=\"emitter.emit('open_manage_modal', { network: 'stride' })\">\n                            {{ $t('message.manage_btn') }}\n                        </button>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'stride' })\">\n                            {{ $t('message.delegate_btn') }}\n                        </button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.stride.health_color]\" :style=\"{'--speed': store.networks.stride.speed + 's'}\"></div>\n                </div>\n            </div>\n\n            <!-- <pre>{{ store.wallets }}</pre> -->\n        </div>\n    </section>\n    </transition>\n</template>\n\n\n<script setup>\n    import { inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter')\n</script>\n\n\n<style scoped>\n    .dashboard\n    {\n        padding-bottom: 24px;\n    }\n\n\n    .dashboard .row\n    {\n        margin-bottom: -7px;\n        margin-left: -7px;\n\n        justify-content: center;\n    }\n\n    .dashboard .row + .row\n    {\n        margin-top: -82px;\n    }\n\n\n    .dashboard .row > *\n    {\n        color: #fff;\n\n        position: relative;\n        z-index: 3;\n\n        display: flex;\n        flex-direction: column;\n\n        width: calc(20% - 7px);\n        width: 280px;\n        height: 324px;\n        margin-bottom: 7px;\n        margin-left: 7px;\n        padding: 58px 38px 64px;\n\n        pointer-events: none;\n    }\n\n    .dashboard .row > *:before\n    {\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        content: '';\n\n        background: #141414;\n\n        clip-path: polygon(50% 0, 100% 25%, 100% 75%, 50% 100%, 0 75%, 0 25%);\n    }\n\n    .dashboard .row > *.hidden:before\n    {\n        display: none;\n    }\n\n\n    .dashboard .shadow\n    {\n        position: absolute;\n        z-index: -2;\n        top: -3px;\n        left: -3px;\n\n        display: block;\n\n        width: calc(100% + 6px);\n        height: calc(100% + 6px);\n\n        --speed: 10s;\n        clip-path: polygon(50% 0, 100% 25%, 100% 75%, 50% 100%, 0 75%, 0 25%);\n    }\n\n\n    .dashboard .shadow:after\n    {\n        position: absolute;\n        top: -24px;\n        left: -24px;\n\n        display: block;\n\n        width: calc(100% + 48px);\n        height: calc(100% + 48px);\n\n        content: '';\n        -webkit-animation: spin var(--speed) linear infinite;\n           -moz-animation: spin var(--speed) linear infinite;\n                animation: spin var(--speed) linear infinite;\n    }\n\n    .dashboard .shadow.green:after\n    {\n        background:    -moz-linear-gradient(top, rgba(92, 255, 15, 1) 0%, rgba(0, 47, 5, .3) 100%);\n        background: -webkit-linear-gradient(top, rgba(92, 255, 15, 1) 0%, rgba(0, 47, 5, .3) 100%);\n        background:         linear-gradient(to bottom, rgba(92, 255, 15, 1) 0%, rgba(0, 47, 5, .3) 100%);\n    }\n\n    .dashboard .shadow.orange:after\n    {\n        background:    -moz-linear-gradient(top, rgba(255, 101, 15, 1) 0%, rgba(96, 24, 2, .3) 100%);\n        background: -webkit-linear-gradient(top, rgba(255, 101, 15, 1) 0%, rgba(96, 24, 2, .3) 100%);\n        background:         linear-gradient(to bottom, rgba(255, 101, 15, 1) 0%, rgba(96, 24, 2, .3) 100%);\n    }\n\n    .dashboard .shadow.red:after\n    {\n        background:    -moz-linear-gradient(top, rgba(255, 15, 15, 1) 0%, rgba(87, 0, 0, .3) 100%);\n        background: -webkit-linear-gradient(top, rgba(255, 15, 15, 1) 0%, rgba(87, 0, 0, .3) 100%);\n        background:         linear-gradient(to bottom, rgba(255, 15, 15, 1) 0%, rgba(87, 0, 0, .3) 100%);\n    }\n\n    .dashboard .shadow.grey:after\n    {\n        background: #212121;\n    }\n\n\n    .dashboard .head\n    {\n        display: flex;\n\n        width: 100%;\n        margin-bottom: 20px;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n\n\n    .dashboard .logo\n    {\n        position: relative;\n\n        display: flex;\n\n        width: 30px;\n        height: 30px;\n\n        border-radius: 50%;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n\n\n    .dashboard .logo img\n    {\n        display: block;\n\n        max-width: 100%;\n        max-height: 100%;\n\n        border-radius: inherit;\n    }\n\n\n    .dashboard .name\n    {\n        font-size: 18px;\n        font-weight: 500;\n        line-height: 22px;\n\n        max-width: calc(100% - 40px);\n        margin-left: 10px;\n\n        transition: text-shadow .2s linear;\n    }\n\n    .dashboard .name:hover\n    {\n        text-shadow: -0   -1px 0   rgba( 149, 15, 255, .6 ),\n        0   -1px 0   rgba( 149, 15, 255, .6 ),\n        -0    1px 0   rgba( 149, 15, 255, .6 ),\n        0    1px 0   rgba( 149, 15, 255, .6 ),\n        -1px -0   0   rgba( 149, 15, 255, .6 ),\n        1px -0   0   rgba( 149, 15, 255, .6 ),\n        -1px  0   0   rgba( 149, 15, 255, .6 ),\n        1px  0   0   rgba( 149, 15, 255, .6 ),\n        -1px -1px 0   rgba( 149, 15, 255, .6 ),\n        1px -1px 0   rgba( 149, 15, 255, .6 ),\n        -1px  1px 0   rgba( 149, 15, 255, .6 ),\n        1px  1px 0   rgba( 149, 15, 255, .6 ),\n        -1px -1px 0   rgba( 149, 15, 255, .6 ),\n        1px -1px 0   rgba( 149, 15, 255, .6 ),\n        -1px  1px 0   rgba( 149, 15, 255, .6 ),\n        1px  1px 0   rgba( 149, 15, 255, .6 ),\n        2px 5px 15px rgba(149, 15, 255, .45);\n    }\n\n\n    .dashboard .tokens\n    {\n        font-size: 18px;\n        font-weight: 600;\n        line-height: 22px;\n\n        margin-bottom: 10px;\n\n        transition: text-shadow .2s linear;\n        text-align: center;\n        white-space: nowrap;\n\n        font-feature-settings: 'pnum' on, 'lnum' on;\n    }\n\n    .dashboard .tokens:hover\n    {\n        text-shadow: -0   -1px 0   rgba( 149, 15, 255, .6 ),\n        0   -1px 0   rgba( 149, 15, 255, .6 ),\n        -0    1px 0   rgba( 149, 15, 255, .6 ),\n        0    1px 0   rgba( 149, 15, 255, .6 ),\n        -1px -0   0   rgba( 149, 15, 255, .6 ),\n        1px -0   0   rgba( 149, 15, 255, .6 ),\n        -1px  0   0   rgba( 149, 15, 255, .6 ),\n        1px  0   0   rgba( 149, 15, 255, .6 ),\n        -1px -1px 0   rgba( 149, 15, 255, .6 ),\n        1px -1px 0   rgba( 149, 15, 255, .6 ),\n        -1px  1px 0   rgba( 149, 15, 255, .6 ),\n        1px  1px 0   rgba( 149, 15, 255, .6 ),\n        -1px -1px 0   rgba( 149, 15, 255, .6 ),\n        1px -1px 0   rgba( 149, 15, 255, .6 ),\n        -1px  1px 0   rgba( 149, 15, 255, .6 ),\n        1px  1px 0   rgba( 149, 15, 255, .6 ),\n        2px 5px 15px rgba(149, 15, 255, .45);\n    }\n\n\n    .dashboard .visualization\n    {\n        display: flex;\n        visibility: hidden;\n\n        height: 12px;\n        margin-bottom: 12px;\n\n        transition: .2s linear;\n        transition-property: opacity, visibility;\n        pointer-events: none;\n\n        opacity: 0;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: nowrap;\n    }\n\n    .dashboard .network:not(.disabled) .visualization\n    {\n        visibility: visible;\n\n        pointer-events: auto;\n\n        opacity: 1;\n    }\n\n\n    .dashboard .visualization > *\n    {\n        min-width: 24px;\n        height: 12px;\n\n        transition: .2s linear;\n\n        border-radius: 10px;\n    }\n\n    .dashboard .visualization > * + *\n    {\n        margin-left: 6px;\n    }\n\n    .dashboard .visualization .staked\n    {\n        background: #950fff;\n    }\n\n    .dashboard .visualization .liquid\n    {\n        background: #eb5757;\n    }\n\n    .dashboard .visualization .rewards\n    {\n        background: #1bc562;\n    }\n\n    .dashboard .visualization .IBC\n    {\n        background: #c5811b;\n    }\n\n    .dashboard .visualization .staked:hover\n    {\n        box-shadow: 2px 5px 15px rgba(149, 15, 255, .65);\n    }\n\n    .dashboard .visualization .liquid:hover\n    {\n        box-shadow: 2px 5px 15px rgba(235, 87, 87, .65);\n    }\n\n    .dashboard .visualization .rewards:hover\n    {\n        box-shadow: 2px 5px 15px rgba(27, 197, 98, .65);\n    }\n\n    .dashboard .visualization .IBC:hover\n    {\n        box-shadow: 2px 5px 15px rgba(197, 129, 27, .65);\n    }\n\n\n    .dashboard .stats\n    {\n        font-size: 12px;\n        line-height: 15px;\n\n        width: 100%;\n        margin-bottom: 20px;\n    }\n\n    .dashboard .network:not(.disabled) .stats\n    {\n        pointer-events: auto;\n    }\n\n\n    .dashboard .stats > *\n    {\n        display: flex;\n\n        transition: text-shadow .2s linear;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: nowrap;\n        justify-content: space-between;\n    }\n\n    .dashboard .stats > *:hover\n    {\n        text-shadow: -0   -1px 0   rgba( 149, 15, 255, .6 ),\n        0   -1px 0   rgba( 149, 15, 255, .6 ),\n        -0    1px 0   rgba( 149, 15, 255, .6 ),\n        0    1px 0   rgba( 149, 15, 255, .6 ),\n        -1px -0   0   rgba( 149, 15, 255, .6 ),\n        1px -0   0   rgba( 149, 15, 255, .6 ),\n        -1px  0   0   rgba( 149, 15, 255, .6 ),\n        1px  0   0   rgba( 149, 15, 255, .6 ),\n        -1px -1px 0   rgba( 149, 15, 255, .6 ),\n        1px -1px 0   rgba( 149, 15, 255, .6 ),\n        -1px  1px 0   rgba( 149, 15, 255, .6 ),\n        1px  1px 0   rgba( 149, 15, 255, .6 ),\n        -1px -1px 0   rgba( 149, 15, 255, .6 ),\n        1px -1px 0   rgba( 149, 15, 255, .6 ),\n        -1px  1px 0   rgba( 149, 15, 255, .6 ),\n        1px  1px 0   rgba( 149, 15, 255, .6 ),\n        2px 5px 15px rgba(149, 15, 255, .45);\n    }\n\n\n    .dashboard .stats > * + *\n    {\n        margin-top: 7px;\n        padding-top: 6px;\n\n        border-top: 1px solid rgba(255, 255, 255, .05);\n    }\n\n\n    .dashboard .stats .label\n    {\n        position: relative;\n\n        margin-right: 10px;\n    }\n\n\n    .dashboard .stats .val\n    {\n        font-weight: 500;\n    }\n\n\n    .dashboard .details_btn,\n    .dashboard .delegate_btn\n    {\n        color: currentColor;\n        font-size: 12px;\n        font-weight: 600;\n        line-height: 15px;\n\n        display: block;\n\n        margin: auto auto 0;\n        padding: 9px 29px 10px;\n\n        transition: .2s linear;\n        text-decoration: none;\n        pointer-events: auto;\n\n        border: 1px solid #353535;\n        border-radius: 40px;\n    }\n\n    .dashboard .delegate_btn,\n    .dashboard .details_btn:hover\n    {\n        color: #fff;\n\n        border-color: #950fff;\n        background: #950fff;\n    }\n\n    .dashboard .disabled:not(.default) .delegate_btn\n    {\n        opacity: .65;\n    }\n\n\n\n    .dashboard .network.empty\n    {\n        color: #464646;\n        font-size: 30px;\n        font-weight: 700;\n        line-height: 36px;\n\n        flex-direction: row;\n\n        text-align: center;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n\n    .dashboard .network.empty .shadow:after\n    {\n        background: #212121;\n    }\n\n\n    .dashboard .network.empty .logo\n    {\n        position: relative;\n\n        display: flex;\n\n        width: 60px;\n        height: 60px;\n        margin: 0 auto 10px;\n\n        align-content: center;\n        align-items: center;\n        flex-wrap: wrap;\n        justify-content: center;\n    }\n\n    .dashboard .network.empty .logo + div\n    {\n        width: 100%;\n    }\n\n    .dashboard .network.empty .logo img\n    {\n        display: block;\n\n        max-width: 100%;\n        max-height: 100%;\n\n        border-radius: 50%;\n    }\n\n    .dashboard .network.empty .logo:after\n    {\n        position: absolute;\n        z-index: 2;\n        top: -1px;\n        left: -1px;\n\n        display: block;\n\n        width: calc(100% + 2px);\n        height: calc(100% + 2px);\n\n        content: '';\n\n        border-radius: 50%;\n        background: rgba(20, 20, 20, .8);\n    }\n\n\n\n    .dashboard .row > *.disabled\n    {\n        color: #464646;\n    }\n\n    .dashboard .disabled:not(.default) .logo:after\n    {\n        position: absolute;\n        z-index: 2;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        content: '';\n\n        opacity: .8;\n        border-radius: inherit;\n        background: #141414;\n    }\n\n    .dashboard .network.disabled .shadow:after\n    {\n        background: #212121;\n    }\n\n\n    .dashboard .network:not(.disabled) .head,\n    .dashboard .network:not(.disabled) .tokens\n    {\n        pointer-events: auto;\n    }\n\n    .dashboard .network.default .head,\n    .dashboard .network.default .tokens\n    {\n        color: #fff;\n    }\n\n\n\n    .dashboard .row > *.account:before\n    {\n        background: #3c0666;\n    }\n\n\n    .dashboard .account\n    {\n        position: relative;\n    }\n\n\n    .dashboard .account .user_name\n    {\n        font-size: 18px;\n        font-weight: 500;\n        line-height: 22px;\n\n        overflow: hidden;\n\n        width: 102px;\n        margin: 0 auto 20px;\n\n        text-align: center;\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .dashboard .account .balance\n    {\n        font-size: 30px;\n        font-weight: 700;\n        line-height: 36px;\n\n        margin-bottom: 18px;\n\n        transition: text-shadow .2s linear;\n        text-align: center;\n        pointer-events: auto;\n\n        font-feature-settings: 'pnum' on, 'lnum' on;\n    }\n\n    .dashboard .account .balance:hover\n    {\n        text-shadow: -0   -1px 0   rgba( 149, 15, 255, .6 ),\n        0   -1px 0   rgba( 149, 15, 255, .6 ),\n        -0    1px 0   rgba( 149, 15, 255, .6 ),\n        0    1px 0   rgba( 149, 15, 255, .6 ),\n        -1px -0   0   rgba( 149, 15, 255, .6 ),\n        1px -0   0   rgba( 149, 15, 255, .6 ),\n        -1px  0   0   rgba( 149, 15, 255, .6 ),\n        1px  0   0   rgba( 149, 15, 255, .6 ),\n        -1px -1px 0   rgba( 149, 15, 255, .6 ),\n        1px -1px 0   rgba( 149, 15, 255, .6 ),\n        -1px  1px 0   rgba( 149, 15, 255, .6 ),\n        1px  1px 0   rgba( 149, 15, 255, .6 ),\n        -1px -1px 0   rgba( 149, 15, 255, .6 ),\n        1px -1px 0   rgba( 149, 15, 255, .6 ),\n        -1px  1px 0   rgba( 149, 15, 255, .6 ),\n        1px  1px 0   rgba( 149, 15, 255, .6 ),\n        2px 5px 15px rgba(149, 15, 255, .45);\n    }\n\n\n    .dashboard .account .stats\n    {\n        pointer-events: auto;\n    }\n\n\n    .dashboard .account .details_btn\n    {\n        border-color: rgba(255, 255, 255, .2);\n    }\n\n\n    .dashboard .account .connect_wallet_btn\n    {\n        color: #000;\n        font-size: 12px;\n        font-weight: 600;\n        line-height: 15px;\n\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n\n        display: block;\n\n        width: 128px;\n        height: 35px;\n        margin: auto;\n\n        transition: .2s linear;\n        pointer-events: auto;\n\n        border-radius: 50px;\n        background: #fff;\n    }\n\n    .dashboard .account .connect_wallet_btn:hover\n    {\n        color: #fff;\n\n        background: #950fff;\n    }\n\n\n    .dashboard .account .shadow:after\n    {\n        background: #950fff;\n    }\n\n\n\n    @-moz-keyframes spin\n    {\n        100%\n        {\n            -moz-transform: rotate(360deg);\n        }\n    }\n\n    @-webkit-keyframes spin\n    {\n        100%\n        {\n            -webkit-transform: rotate(360deg);\n        }\n    }\n\n    @keyframes spin\n    {\n        100%\n        {\n            -webkit-transform: rotate(360deg);\n                    transform: rotate(360deg);\n        }\n    }\n\n</style>\n","import script from \"./Dashboard.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Dashboard.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Dashboard.vue?vue&type=style&index=0&id=5a824f97&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5a824f97\"]])\n\nexport default __exports__"],"names":["store","useGlobalStore","emitter","inject","__exports__"],"sourceRoot":""}