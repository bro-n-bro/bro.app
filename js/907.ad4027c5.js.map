{"version":3,"file":"js/907.ad4027c5.js","mappings":"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","sources":["webpack://bro_app/./src/components/account/Networks.vue","webpack://bro_app/./src/components/account/Networks.vue?68c2","webpack://bro_app/./src/components/account/charts/Avatar.vue","webpack://bro_app/./src/components/account/charts/Avatar.vue?ec89","webpack://bro_app/./src/components/account/charts/ChartStakeLiquide.vue","webpack://bro_app/./src/components/account/charts/ChartStakeLiquide.vue?25f9","webpack://bro_app/./src/components/account/charts/ChartAccounts.vue","webpack://bro_app/./src/components/account/charts/ChartAccounts.vue?6b41","webpack://bro_app/./src/components/account/charts/ChartAssets.vue","webpack://bro_app/./src/components/account/charts/ChartAssets.vue?7aaa","webpack://bro_app/./src/components/account/charts/ChartNetworks.vue","webpack://bro_app/./src/components/account/charts/ChartNetworks.vue?5cd5","webpack://bro_app/./src/components/account/Charts.vue","webpack://bro_app/./src/components/account/Charts.vue?21aa","webpack://bro_app/./src/components/account/Stats.vue","webpack://bro_app/./src/components/account/Stats.vue?7fbe","webpack://bro_app/./src/components/modal/ValidatorModal.vue","webpack://bro_app/./src/components/modal/ValidatorModal.vue?59af","webpack://bro_app/./src/components/account/Validators.vue","webpack://bro_app/./src/components/account/Validators.vue?7bab","webpack://bro_app/./src/components/account/Proposals.vue","webpack://bro_app/./src/components/account/Proposals.vue?4ae9","webpack://bro_app/./src/components/modal/AddAddressModal.vue","webpack://bro_app/./src/components/modal/AddAddressModal.vue?e8ab","webpack://bro_app/./src/components/modal/DeleteAddressModal.vue","webpack://bro_app/./src/components/modal/DeleteAddressModal.vue?a0ae","webpack://bro_app/./src/components/account/EditAddressName.vue","webpack://bro_app/./src/components/account/EditAddressName.vue?463c","webpack://bro_app/./src/components/account/ConnectedAddresses.vue","webpack://bro_app/./src/components/account/ConnectedAddresses.vue?7fc1","webpack://bro_app/./src/components/tour/AccountPageTour.vue","webpack://bro_app/./src/components/tour/AccountPageTour.vue?0cc9","webpack://bro_app/./src/views/Account.vue","webpack://bro_app/./src/views/Account.vue?727f"],"sourcesContent":["<template>\n    <section class=\"networks\">\n        <div class=\"title\">\n            {{ $t('message.account_networks_title') }}\n        </div>\n\n        <div class=\"list\">\n            <button class=\"network active\">\n                <div class=\"logo\">\n                    <img src=\"/cosmoshub_logo.png\" alt=\"\">\n                </div>\n\n                <div>\n                    <div class=\"name\">{{ store.networks.cosmoshub.name }}</div>\n                    <div class=\"token\">{{ store.networks.cosmoshub.token_name }}</div>\n                </div>\n            </button>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { useGlobalStore } from '@/stores'\n\n    const store = useGlobalStore()\n</script>\n\n\n\n<style scoped>\n    .networks\n    {\n        padding: 14px;\n\n        border-radius: 20px;\n        background: #0d0d0d;\n    }\n\n\n    .networks .title\n    {\n        font-size: 30px;\n        font-weight: 600;\n        line-height: 36px;\n\n        margin-bottom: 20px;\n    }\n\n\n    .networks .list > * + *\n    {\n        margin-top: 4px;\n    }\n\n\n    .networks .network\n    {\n        display: flex;\n\n        width: 100%;\n        padding: 10px;\n\n        transition: background .2s linear;\n        text-align: left;\n\n        border-radius: 14px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .networks .logo\n    {\n        position: relative;\n\n        overflow: hidden;\n\n        width: 40px;\n        height: 40px;\n\n        border-radius: 50%;\n    }\n\n\n    .networks .logo img\n    {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n\n    .networks .logo + *\n    {\n        width: calc(100% - 54px);\n        margin-left: auto;\n    }\n\n\n    .networks .name\n    {\n        font-size: 18px;\n        font-weight: 500;\n        line-height: 100%;\n    }\n\n\n    .networks .token\n    {\n        color: #555;\n        font-size: 12px;\n        line-height: 15px;\n\n        margin-top: 6px;\n\n        text-transform: uppercase;\n    }\n\n\n    .networks .network:hover,\n    .networks .network.active\n    {\n        background: #141414;\n    }\n\n\n\n    @media print, (max-width: 1899px)\n    {\n        .networks .title\n        {\n            font-size: 27px;\n            line-height: 33px;\n        }\n    }\n\n</style>","import script from \"./Networks.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Networks.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Networks.vue?vue&type=style&index=0&id=4e4222cd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4e4222cd\"]])\n\nexport default __exports__","<template>\n    <div class=\"avatar\">\n        <img :src=\"store.account.avatar\" alt=\"\">\n\n        <router-link to=\"/account/passport?demo=true\" class=\"edit_link\" v-if=\"store.demo\">\n            <div class=\"btn\">\n                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_settings\"></use></svg>\n                <span>{{ $t('message.btn_settings') }}</span>\n            </div>\n        </router-link>\n\n        <router-link to=\"/account/passport\" class=\"edit_link\" v-else>\n            <div class=\"btn\">\n                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_settings\"></use></svg>\n                <span>{{ $t('message.btn_settings') }}</span>\n            </div>\n        </router-link>\n    </div>\n</template>\n\n\n<script setup>\n    import { useGlobalStore } from '@/stores'\n\n    const store = useGlobalStore()\n</script>\n\n\n<style scoped>\n    .avatar\n    {\n        position: absolute;\n        z-index: 5;\n\n        width: 200px;\n        height: 200px;\n        margin: auto;\n\n        border: 5px solid #0d0d0d;\n        border-radius: 50%;\n\n        inset: 0;\n    }\n\n\n    .avatar img\n    {\n        position: relative;\n        z-index: 10;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n        background: #141414;\n\n        object-fit: cover;\n    }\n\n\n    .avatar .edit_link\n    {\n        color: currentColor;\n        font-size: 14px;\n        line-height: 120%;\n\n        position: absolute;\n        z-index: 20;\n        top: 0;\n        left: 0;\n\n        display: flex;\n\n        width: 100%;\n        height: 100%;\n\n        transition: opacity .2s linear;\n        text-decoration: none;\n\n        opacity: 0;\n        border-radius: 50%;\n        background: rgba(0, 0, 0, .6);\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .avatar .edit_link .btn\n    {\n        display: flex;\n\n        padding: 8px;\n\n        border-radius: 10px;\n        background: #950fff;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .avatar .edit_link .icon\n    {\n        display: block;\n\n        width: 16px;\n        height: 16px;\n        margin-right: 4px;\n    }\n\n    .avatar .edit_link:hover\n    {\n        opacity: 1;\n    }\n\n</style>","import script from \"./Avatar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Avatar.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Avatar.vue?vue&type=style&index=0&id=2612afbb&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2612afbb\"]])\n\nexport default __exports__","<template>\n    <div class=\"chart_info\">\n        <div class=\"block_title\">\n            {{ $t('message.account_chart_stake_block_title') }}\n        </div>\n\n        <div class=\"block_desc\">\n            {{ $t('message.account_chart_stake_desc') }}\n        </div>\n\n\n        <div class=\"charts\">\n            <Avatar />\n\n            <div class=\"chartStake\" :class=\"{'active': props.chartActive == 1}\" @click.prevent=\"emitter.emit('changeActiveChart', 1)\">\n                <Doughnut ref=\"chartStake\" :data=\"chartDataStake\" :options=\"chartOptionsStake\" class=\"chart\" />\n            </div>\n\n            <div class=\"chartLiquide\" :class=\"{'active': props.chartActive == 2}\" @click.prevent=\"emitter.emit('changeActiveChart', 2)\">\n                <Doughnut ref=\"chartLiquide\" :data=\"chartDataLiquide\" :options=\"chartOptionsLiquide\" class=\"chart\" />\n            </div>\n        </div>\n\n        <template v-if=\"props.chartActive == 1\">\n        <div class=\"legends empty\" v-if=\"!chartTotalStake\">\n            <div class=\"legend\">\n                <div class=\"name\">\n                    <span></span>\n                </div>\n\n                <div class=\"amount\">\n                    <span></span>\n                </div>\n\n                <div class=\"progress\">\n                    <div class=\"bar\"><div></div></div>\n                </div>\n            </div>\n\n            <div class=\"legend\">\n                <div class=\"name\">\n                    <span></span>\n                </div>\n\n                <div class=\"amount\">\n                    <span></span>\n                </div>\n\n                <div class=\"progress\">\n                    <div class=\"bar\"><div></div></div>\n                </div>\n            </div>\n\n            <div class=\"legend\">\n                <div class=\"name\">\n                    <span></span>\n                </div>\n\n                <div class=\"amount\">\n                    <span></span>\n                </div>\n\n                <div class=\"progress\">\n                    <div class=\"bar\"><div></div></div>\n                </div>\n            </div>\n\n            <div class=\"legend\">\n                <div class=\"name\">\n                    <span></span>\n                </div>\n\n                <div class=\"amount\">\n                    <span></span>\n                </div>\n\n                <div class=\"progress\">\n                    <div class=\"bar\"><div></div></div>\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"legends\" v-else>\n            <div class=\"legend\" v-if=\"currentData.total.staked\" :class=\"{'active': chartActiveLegendStake == 0}\" @mouseenter=\"mouseenterLegendStake(0)\" @mouseleave=\"mouseleaveLegendStake()\">\n                <div class=\"name\">\n                    <div class=\"color\" style=\"background-color: #950FFF;\"></div>\n                    <span>{{ $t('message.account_charts_staked_label') }}</span>\n                </div>\n\n                <div class=\"amount\">\n                    <template v-if=\"(currentData.total.staked / Math.pow(10, store.networks[store.currentNetwork].exponent)) < 0.01\">&lt; 0.01</template>\n                    <template v-else>{{ $filters.toFixed(currentData.total.staked / Math.pow(10, store.networks[store.currentNetwork].exponent), 2) }}</template>\n\n                    {{ store.networks[store.currentNetwork].token_name }}\n\n                    <div class=\"price\">\n                        {{ $filters.toFixed(currencyСonversion(currentData.total.staked / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}\n                        {{ store.currentCurrency }}\n                    </div>\n                </div>\n\n                <div class=\"progress\">\n                    <div class=\"bar\"><div style=\"background-color: #950FFF;\" :style=\"setWidth(calcPercentsStake('staked'))\"></div></div>\n                </div>\n            </div>\n\n\n            <div class=\"legend\" v-if=\"currentData.total.liquid_rewards\" :class=\"{'active': chartActiveLegendStake == 1}\" @mouseenter=\"mouseenterLegendStake(1)\" @mouseleave=\"mouseleaveLegendStake()\">\n                <div class=\"name\">\n                    <div class=\"color\" style=\"background-color: #0343E8;\"></div>\n                    <span>{{ $t('message.account_charts_liquid_tokens_label') }}</span>\n                </div>\n\n                <div class=\"amount\">\n                    <template v-if=\"(currentData.total.liquid_rewards / Math.pow(10, store.networks[store.currentNetwork].exponent)) < 0.01\">&lt; 0.01</template>\n                    <template v-else>{{ $filters.toFixed(currentData.total.liquid_rewards / Math.pow(10, store.networks[store.currentNetwork].exponent), 2) }}</template>\n\n                    {{ store.networks[store.currentNetwork].token_name }}\n\n                    <div class=\"price\">\n                        {{ $filters.toFixed(currencyСonversion(currentData.total.liquid_rewards / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}\n                        {{ store.currentCurrency }}\n                    </div>\n                </div>\n\n                <div class=\"progress\">\n                    <div class=\"bar\"><div style=\"background-color: #0343E8;\" :style=\"setWidth(calcPercentsStake('liquid_rewards'))\"></div></div>\n                </div>\n            </div>\n\n\n            <div class=\"legend\" v-if=\"currentData.total.unbonding\" :class=\"{'active': chartFirstActiveLegendStake == 2}\" @mouseenter=\"mouseenterLegendStake(2)\" @mouseleave=\"mouseleaveLegendStake()\">\n                <div class=\"name\">\n                    <div class=\"color\" style=\"background-color: #EB5757;\"></div>\n                    <span>{{ $t('message.account_charts_unbonding_label') }}</span>\n                </div>\n\n                <div class=\"amount\">\n                    <template v-if=\"(currentData.total.unbonding / Math.pow(10, store.networks[store.currentNetwork].exponent)) < 0.01\">&lt; 0.01</template>\n                    <template v-else>{{ $filters.toFixed(currentData.total.unbonding / Math.pow(10, store.networks[store.currentNetwork].exponent), 2) }}</template>\n\n                    {{ store.networks[store.currentNetwork].token_name }}\n\n                    <div class=\"price\">\n                        {{ $filters.toFixed(currencyСonversion(currentData.total.unbonding / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}\n                        {{ store.currentCurrency }}\n                    </div>\n                </div>\n\n                <div class=\"progress\">\n                    <div class=\"bar\"><div style=\"background-color: #EB5757;\" :style=\"setWidth(calcPercentsStake('unbonding'))\"></div></div>\n                </div>\n            </div>\n        </div>\n        </template>\n\n\n        <template v-if=\"props.chartActive == 2\">\n        <div class=\"legends empty\" v-if=\"!chartTotalLiquide\">\n            <div class=\"legend\">\n                <div class=\"name\">\n                    <span></span>\n                </div>\n\n                <div class=\"amount\">\n                    <span></span>\n                </div>\n\n                <div class=\"progress\">\n                    <div class=\"bar\"><div></div></div>\n                </div>\n            </div>\n\n            <div class=\"legend\">\n                <div class=\"name\">\n                    <span></span>\n                </div>\n\n                <div class=\"amount\">\n                    <span></span>\n                </div>\n\n                <div class=\"progress\">\n                    <div class=\"bar\"><div></div></div>\n                </div>\n            </div>\n\n            <div class=\"legend\">\n                <div class=\"name\">\n                    <span></span>\n                </div>\n\n                <div class=\"amount\">\n                    <span></span>\n                </div>\n\n                <div class=\"progress\">\n                    <div class=\"bar\"><div></div></div>\n                </div>\n            </div>\n\n            <div class=\"legend\">\n                <div class=\"name\">\n                    <span></span>\n                </div>\n\n                <div class=\"amount\">\n                    <span></span>\n                </div>\n\n                <div class=\"progress\">\n                    <div class=\"bar\"><div></div></div>\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"legends\" v-else>\n            <div class=\"legend\" v-if=\"currentData.total.liquid\" :class=\"{'active': chartActiveLegendLiquide == 0}\" @mouseenter=\"mouseenterLegendLiquide(0)\" @mouseleave=\"mouseleaveLegendLiquide()\">\n                <div class=\"name\">\n                    <div class=\"color\" style=\"background-color: #7879F1;\"></div>\n                    <span>{{ $t('message.account_charts_liquid_tokens_label') }}</span>\n                </div>\n\n                <div class=\"amount\">\n                    <template v-if=\"(currentData.total.liquid / Math.pow(10, store.networks[store.currentNetwork].exponent)) < 0.01\">&lt; 0.01</template>\n                    <template v-else>{{ $filters.toFixed(currentData.total.liquid / Math.pow(10, store.networks[store.currentNetwork].exponent), 2) }}</template>\n\n                    {{ store.networks[store.currentNetwork].token_name }}\n\n                    <div class=\"price\">\n                        {{ $filters.toFixed(currencyСonversion(currentData.total.liquid / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}\n                        {{ store.currentCurrency }}\n                    </div>\n                </div>\n            </div>\n\n\n            <div class=\"legend\" v-if=\"currentData.total.ibc\" :class=\"{'active': chartActiveLegendLiquide == 1}\" @mouseenter=\"mouseenterLegendLiquide(1)\" @mouseleave=\"mouseleaveLegendLiquide()\">\n                <div class=\"name\" @click.prevent=\"toggleActiveClass\">\n                    <div class=\"color\" style=\"background-color: #EF5DA8;\"></div>\n                    <span>{{ $t('message.account_charts_ibc_label') }}</span>\n\n                    <!-- <svg class=\"arr\"><use xlink:href=\"@/assets/sprite.svg#ic_arr_down\"></use></svg> -->\n                </div>\n\n                <div class=\"dropdown\">\n                    <!-- <pre>{{ currentNetwork.balance.liquid.ibc }}</pre> -->\n\n                    <div class=\"tokens\">\n                        <div v-for=\"(item, index) in currentData.balance.liquid.ibc\" :key=\"index\" class=\"item\">\n                            <div class=\"logo\">\n                                <img :src=\"`${item.logo}`\" alt=\"\">\n\n                                <div class=\"on_chain_logo\">\n                                    <img :src=\"`/${store.currentNetwork}_logo.png`\" alt=\"\">\n                                </div>\n                            </div>\n\n                            <div>\n                                <div class=\"token\">{{ item.symbol }}</div>\n\n                                <div class=\"on_chain\">\n                                    {{ $t('message.account_charts_on_chain') }}\n                                    {{ store.networks[store.currentNetwork].name }}\n                                </div>\n                            </div>\n\n                            <div>\n                                <div class=\"amount\">\n                                    <template v-if=\"item.symbol == 'BOOT'\">\n                                        <span v-if=\"(item.amount / Math.pow(10, item.exponent) / 1000000) < 0.01\">&lt; 0.01</span>\n                                        <span v-else>{{ $filters.toFixed(item.amount / Math.pow(10, item.exponent) / 1000000, 2) }}</span>\n                                    </template>\n\n                                    <template v-else>\n                                        <span v-if=\"(item.amount / Math.pow(10, item.exponent)) < 0.01\">&lt; 0.01</span>\n                                        <span v-else>{{ $filters.toFixed(item.amount / Math.pow(10, item.exponent), 2) }}</span>\n                                    </template>\n\n                                    <span class=\"token\" v-if=\"item.symbol == 'BOOT'\">M{{ item.symbol }}</span>\n                                    <span class=\"token\" v-else>{{ item.symbol }}</span>\n\n                                    <div class=\"price\">\n                                        {{ $filters.toFixed(currencyСonversion(item.amount / Math.pow(10, item.exponent), item.symbol), 2) }}\n                                        {{ store.currentCurrency }}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <div class=\"legend\" v-if=\"currentData.total.rewards\" :class=\"{'active': chartActiveLegendLiquide == 2}\" @mouseenter=\"mouseenterLegendLiquide(2)\" @mouseleave=\"mouseleaveLegendLiquide()\">\n                <div class=\"name\">\n                    <div class=\"color\" style=\"background-color: #1BC562;\"></div>\n                    <span>{{ $t('message.account_charts_rewards_label') }}</span>\n                </div>\n\n                <div class=\"amount\">\n                    <template v-if=\"(currentData.total.rewards / Math.pow(10, store.networks[store.currentNetwork].exponent)) < 0.01\">&lt; 0.01</template>\n                    <template v-else>{{ $filters.toFixed(currentData.total.rewards / Math.pow(10, store.networks[store.currentNetwork].exponent), 5) }}</template>\n\n                    {{ store.networks[store.currentNetwork].token_name }}\n\n                    <div class=\"price\">\n                        {{ $filters.toFixed(currencyСonversion(currentData.total.rewards / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}\n                        {{ store.currentCurrency }}\n                    </div>\n                </div>\n            </div>\n        </div>\n        </template>\n    </div>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, computed, reactive, ref, inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { currencyСonversion } from '@/utils'\n\n    import { Chart as ChartJS, ArcElement } from 'chart.js'\n    import { Doughnut } from 'vue-chartjs'\n\n    // Components\n    import Avatar from '@/components/account/charts/Avatar.vue'\n\n    ChartJS.register(ArcElement)\n\n\n    const store = useGlobalStore(),\n        props = defineProps(['chartActive']),\n        emitter = inject('emitter'),\n\n        chartStake = ref(null),\n        chartDatasetsStake = reactive([]),\n        chartActiveLegendStake = ref(null),\n        chartTotalStake = ref(0),\n        chartDataStake = computed(() => ({\n            datasets: [{\n                data: chartDatasetsStake,\n                backgroundColor: ['#950FFF', '#0343E8', '#EB5757'],\n                borderColor: '#0d0d0d',\n                borderWidth: 4,\n                hoverBackgroundColor: ['#7700E1', '#3400D1', '#D74343'],\n                hoverBorderColor: ['#7700E1', '#3400D1', '#D74343'],\n                borderAlign: 'inner',\n                cutout: '84%',\n            }]\n        })),\n        chartOptionsStake = reactive({\n            responsive: true,\n            plugins: {\n                legend: false,\n                tooltip: false\n            },\n            animation: {\n                duration: 200\n            },\n            transitions: {\n                active: {\n                    animation: {\n                        duration: 200\n                    }\n                }\n            },\n            onHover: (e, item) => {\n                item.length\n                    ? chartActiveLegendStake.value = item[0].index\n                    : chartActiveLegendStake.value = null\n            }\n        }),\n\n        chartLiquide = ref(null),\n        chartDatasetsLiquide = reactive([]),\n        chartActiveLegendLiquide = ref(null),\n        chartTotalLiquide = ref(0),\n        chartDataLiquide = computed(() => ({\n            datasets: [{\n                data: chartDatasetsLiquide,\n                backgroundColor: ['#7879F1', '#EF5DA8', '#1BC562'],\n                borderColor: '#0d0d0d',\n                borderWidth: 4,\n                hoverBackgroundColor: ['#7879F1', '#EF5DA8', '#07B14E'],\n                hoverBorderColor: ['#7879F1', '#EF5DA8', '#07B14E'],\n                borderAlign: 'inner',\n                cutout: '80%'\n            }]\n        })),\n        chartOptionsLiquide = reactive({\n            responsive: true,\n            plugins: {\n                legend: false,\n                tooltip: false\n            },\n            animation: {\n                duration: 200\n            },\n            transitions: {\n                active: {\n                    animation: {\n                        duration: 200\n                    }\n                }\n            },\n            onHover: (e, item) => {\n                item.length\n                    ? chartActiveLegendLiquide.value = item[0].index\n                    : chartActiveLegendLiquide.value = null\n            }\n        }),\n\n        currentWallet = ref({}),\n        currentData = ref({\n            total: {\n                staked: 0,\n                unbonding: 0,\n                liquid_rewards: 0,\n                liquid: 0,\n                rewards: 0,\n                ibc: 0,\n            },\n            balance: {\n                liquid: {\n                    ibc: []\n                }\n            }\n        })\n\n\n    onBeforeMount(() => {\n        if(store.account.currentWallet != 'all') {\n            // Get current walllet data\n            currentWallet.value = store.account.wallets.find(el => el.address == store.account.currentWallet)\n\n            // Get current data\n            currentData.value = currentWallet.value.networks.find(el => el.name == 'cosmoshub')\n        } else {\n            // Sum totals\n            for (let wallet of store.account.wallets) {\n                for (let network of wallet.networks) {\n                    currentData.value.total.staked += network.total.staked,\n                    currentData.value.total.unbonding += network.total.unbonding,\n                    currentData.value.total.liquid_rewards += network.total.liquid_rewards\n\n                    currentData.value.total.liquid += network.total.liquid,\n                    currentData.value.total.ibc += network.total.ibc,\n                    currentData.value.total.rewards += network.total.rewards\n\n                    // Balance - Concat ibc tokens\n                    if(network.balance.liquid.ibc != null) {\n                        network.balance.liquid.ibc.forEach(el => {\n                            let duplicate = currentData.value.balance.liquid.ibc.find(e => e.symbol == el.symbol)\n\n                            duplicate\n                                ? duplicate.amount += el.amount\n                                : currentData.value.balance.liquid.ibc.push(el)\n                        })\n                    }\n                }\n            }\n        }\n\n        // Set chart data\n        chartDatasetsStake.push(currentData.value.total.staked)\n        chartDatasetsStake.push(currentData.value.total.liquid_rewards)\n        chartDatasetsStake.push(currentData.value.total.unbonding)\n\n        chartDatasetsLiquide.push(currentData.value.total.liquid)\n        chartDatasetsLiquide.push(currentData.value.total.ibc)\n        chartDatasetsLiquide.push(currentData.value.total.rewards)\n\n        // Sum chart total\n        chartTotalStake.value = currentData.value.total.staked + currentData.value.total.liquid_rewards + currentData.value.total.unbonding\n\n        chartTotalLiquide.value = currentData.value.total.liquid + currentData.value.total.ibc + currentData.value.total.rewards\n    })\n\n\n    // Calc percents\n    function calcPercentsStake(type) {\n        let result = 0\n\n        if(chartTotalStake.value) {\n            result = currentData.value.total[type] / chartTotalStake.value * 100\n        }\n\n        return result\n    }\n\n\n    // Mouse enter on legend\n    function mouseenterLegendStake(dataIndex) {\n        let chartInstance = chartStake.value.chart\n\n        chartActiveLegendStake.value = dataIndex\n\n        chartInstance.setActiveElements([{\n            datasetIndex: 0,\n            index: dataIndex\n        }])\n\n        chartInstance.update()\n    }\n\n\n    // Mouse leave from legend\n    function mouseleaveLegendStake() {\n        let chartInstance = chartStake.value.chart\n\n        chartActiveLegendStake.value = null\n\n        chartInstance.setActiveElements([])\n        chartInstance.update()\n    }\n\n\n    // Set width\n    function setWidth(percents) {\n        return `width: ${percents}%;`\n    }\n\n\n    // Mouse enter on legend\n    function mouseenterLegendLiquide(dataIndex) {\n        let chartInstance = chartLiquide.value.chart\n\n        chartActiveLegendLiquide.value = dataIndex\n\n        chartInstance.setActiveElements([{\n            datasetIndex: 0,\n            index: dataIndex\n        }])\n\n        chartInstance.update()\n    }\n\n\n    // Mouse leave from legend\n    function mouseleaveLegendLiquide() {\n        let chartInstance = chartLiquide.value.chart\n\n        chartActiveLegendLiquide.value = null\n\n        chartInstance.setActiveElements([])\n        chartInstance.update()\n    }\n\n\n    // Toggle active class\n    function toggleActiveClass(e) {\n        e.target.closest('.legend').classList.toggle('active')\n    }\n</script>\n\n\n<style scoped>\n    .chart_info\n    {\n        display: flex;\n\n        justify-content: space-between;\n        align-items: flex-start;\n        align-content: flex-start;\n        flex-wrap: wrap;\n    }\n\n\n    .block_title\n    {\n        font-size: 20px;\n        font-weight: 500;\n        line-height: 24px;\n\n        width: 100%;\n        margin-bottom: 8px;\n    }\n\n\n    .block_desc\n    {\n        color: #555;\n        line-height: 110%;\n\n        width: 100%;\n        margin-bottom: 24px;\n    }\n\n\n    .charts\n    {\n        position: relative;\n        z-index: 3;\n\n        width: 291px;\n        max-width: 100%;\n        height: 291px;\n\n        border-radius: 50%;\n        background: #0d0d0d;\n    }\n\n\n    .chartStake,\n    .chartLiquide\n    {\n        position: absolute;\n        z-index: 1;\n        top: 0;\n        left: 0;\n\n        width: 100%;\n        height: 100%;\n\n        cursor: pointer;\n\n        border-radius: inherit;\n    }\n\n    .chartLiquide\n    {\n        z-index: 3;\n\n        width: calc(100% - 44px);\n        height: calc(100% - 44px);\n        margin: auto;\n\n        inset: 0;\n    }\n\n    /* .chartStake:before,\n    .chartLiquide:before\n    {\n        position: absolute;\n        z-index: 1;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        content: '';\n        pointer-events: none;\n\n        border: 14px solid #282828;\n        border-radius: inherit;\n    } */\n\n    .chartStake:after,\n    .chartLiquide:after\n    {\n        position: absolute;\n        z-index: 5;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        content: '';\n\n        border-radius: inherit;\n    }\n\n\n    .chartStake.active:after,\n    .chartLiquide.active:after\n    {\n        display: none;\n    }\n\n\n    .chart\n    {\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 3;\n\n        width: 100%;\n        height: 100%;\n\n        cursor: pointer;\n        transition: opacity .2s linear;\n\n        opacity: .2;\n        border-radius: 50%;\n\n        clip-path: circle(50% at 50% 50%);\n    }\n\n    .chartStake.active .chart,\n    .chartLiquide.active .chart\n    {\n        opacity: 1;\n    }\n\n\n\n    .legends\n    {\n        width: calc(100% - 307px);\n        margin-left: auto;\n    }\n\n    .legends > * + *\n    {\n        margin-top: 8px;\n    }\n\n\n    .legends .legend\n    {\n        display: flex;\n\n        padding: 6px 8px;\n\n        transition: background .2s linear;\n\n        border-radius: 10px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .legends .legend .dropdown\n    {\n        /* display: none; */\n        width: 100%;\n        margin-top: 8px;\n    }\n\n\n    .legends .legend .name\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 100%;\n\n        display: flex;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .legends .legend .color\n    {\n        width: 10px;\n        height: 10px;\n        margin-right: 4px;\n\n        border-radius: 50%;\n    }\n\n\n    .legends .legend .amount\n    {\n        font-size: 18px;\n        font-weight: 600;\n        line-height: 100%;\n\n        margin-left: auto;\n\n        text-align: right;\n        white-space: nowrap;\n        text-transform: uppercase;\n    }\n\n    .legends .legend .amount .token\n    {\n        margin-left: 4px;\n    }\n\n\n    .legends .legend .price\n    {\n        color: #555;\n        font-size: 12px;\n        font-weight: 400;\n        line-height: 100%;\n\n        margin-top: 4px;\n\n        white-space: nowrap;\n    }\n\n\n    .legends .legend .progress\n    {\n        display: flex;\n\n        width: 100%;\n        margin-top: 8px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .legends .legend .bar\n    {\n        width: 100%;\n        height: 8px;\n\n        border-radius: 4px;\n        background: #282828;\n    }\n\n    .legends .legend .bar div\n    {\n        width: 0;\n        height: 8px;\n\n        transition: width .4s linear;\n\n        border-radius: 4px;\n    }\n\n\n    .legends .legend .tokens\n    {\n        margin-top: 8px;\n    }\n\n\n    .legends .legend .tokens .item\n    {\n        display: flex;\n\n        padding-top: 8px;\n\n        border-top: 1px solid rgba(255, 255, 255, .05);\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .legends .legend .tokens .item + .item\n    {\n        margin-top: 8px;\n    }\n\n\n    .legends .legend .tokens .item > *:last-child\n    {\n        margin-left: auto;\n    }\n\n\n    .legends .legend .tokens .token\n    {\n        font-size: 16px;\n        font-weight: 500;\n        line-height: 100%;\n\n        white-space: nowrap;\n    }\n\n\n    .legends .legend .tokens .on_chain\n    {\n        color: #555;\n        font-size: 12px;\n        line-height: 100%;\n\n        margin-top: 4px;\n    }\n\n\n    .legends .legend .tokens .logo\n    {\n        position: relative;\n\n        width: 30px;\n        height: 30px;\n        margin-right: 11px;\n\n        border-radius: 50%;\n    }\n\n    .legends .legend .tokens .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n\n    .legends .legend .tokens .on_chain_logo\n    {\n        position: absolute;\n        right: -3px;\n        bottom: -5px;\n\n        width: 16px;\n        height: 16px;\n\n        border: 1px solid #141414;\n        border-radius: 50%;\n    }\n\n\n    .legends .legend.active\n    {\n        background: #141414;\n    }\n\n\n\n    .legends.empty .legend .name span,\n    .legends.empty .legend .amount span\n    {\n        display: block;\n\n        width: 80px;\n        height: 14px;\n\n        border-radius: 8px;\n        background: #282828;\n    }\n\n</style>","import script from \"./ChartStakeLiquide.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChartStakeLiquide.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChartStakeLiquide.vue?vue&type=style&index=0&id=0de69181&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0de69181\"]])\n\nexport default __exports__","<template>\n    <div class=\"chart_info\">\n        <div class=\"block_title\">{{ $t('message.account_chart_accounts_block_title') }}</div>\n\n        <div class=\"block_desc\">{{ $t('message.account_chart_accounts_desc') }}</div>\n\n\n        <div class=\"chart\">\n            <Doughnut ref=\"chart\" :data=\"chartData\" :options=\"chartOptions\" />\n\n            <div class=\"total\">\n                <div class=\"label\">\n                    {{ $t('message.account_charts_total_assets') }}\n                </div>\n\n                <div class=\"price\" v-if=\"(typeof chartActiveLegend == 'undefined' || typeof chartActiveLegend == 'object')\">\n                    {{ $filters.toFixed(currencyСonversion(store.account.totalTokens / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}<span>{{ store.currentCurrency }}</span>\n                </div>\n\n                <template v-for=\"(wallet, index) in store.account.wallets\" :key=\"index\">\n                    <div class=\"price\" v-if=\"chartActiveLegend == index\">\n                        {{ $filters.toFixed(currencyСonversion(wallet.totalTokens / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}<span>{{ store.currentCurrency }}</span>\n                    </div>\n                </template>\n            </div>\n        </div>\n\n\n        <div class=\"legends\">\n            <div v-for=\"(wallet, index) in store.account.wallets\" :key=\"index\" class=\"legend\" :class=\"{'active': chartActiveLegend == index}\" @mouseenter=\"mouseenterLegend(index)\" @mouseleave=\"mouseleaveLegend()\">\n                <div class=\"address\">\n                    <span v-if=\"wallet.nickname\">{{ wallet.nickname }}</span>\n                    <span v-else>{{ wallet.address.slice(0, 13) + '...' + wallet.address.slice(-6) }}</span>\n                </div>\n\n                <div class=\"price\">\n                    <div>\n                        {{ $filters.toFixed(currencyСonversion(wallet.totalTokens / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}\n                        {{ store.currentCurrency }}\n                    </div>\n\n                    <div class=\"percents\">\n                        {{ $filters.toFixed(calcPercents(wallet.totalPrice), 2) }}%\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, computed, reactive, ref } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { currencyСonversion } from '@/utils'\n\n    import { Chart as ChartJS, ArcElement } from 'chart.js'\n    import { Doughnut } from 'vue-chartjs'\n\n    ChartJS.register(ArcElement)\n\n\n    const store = useGlobalStore(),\n        chart = ref(null),\n        chartDatasets = reactive([]),\n        chartActiveLegend = ref(null),\n        chartData = computed(() => ({\n            datasets: [{\n                data: chartDatasets,\n                backgroundColor: ['#4B0582', '#550694', '#6B09B7', '#800CDB', '#950FFF', '#A636FF', '#B75DFF', '#C983FF'],\n                borderColor: '#0d0d0d',\n                borderWidth: 4,\n                hoverBackgroundColor: ['#4B0582', '#550694', '#6B09B7', '#800CDB', '#950FFF', '#A636FF', '#B75DFF', '#C983FF'],\n                hoverBorderColor: ['#4B0582', '#550694', '#6B09B7', '#800CDB', '#950FFF', '#A636FF', '#B75DFF', '#C983FF'],\n                borderAlign: 'inner',\n                cutout: '84%',\n            }]\n        })),\n        chartOptions = reactive({\n            responsive: true,\n            plugins: {\n                legend: false,\n                tooltip: false\n            },\n            animation: {\n                duration: 200\n            },\n            transitions: {\n                active: {\n                    animation: {\n                        duration: 200\n                    }\n                }\n            },\n            onHover: (e, item) => {\n                item.length\n                    ? chartActiveLegend.value = item[0].index\n                    : chartActiveLegend.value = null\n            }\n        })\n\n\n    onBeforeMount(() => {\n        // Set data for chart\n        store.account.wallets.forEach(el => chartDatasets.push(el.totalTokens))\n    })\n\n\n    // Mouse enter on legend\n    function mouseenterLegend(dataIndex) {\n        let chartInstance = chart.value.chart\n\n        chartActiveLegend.value = dataIndex\n\n        chartInstance.setActiveElements([{\n            datasetIndex: 0,\n            index: dataIndex\n        }])\n\n        chartInstance.update()\n    }\n\n\n    // Mouse leave from legend\n    function mouseleaveLegend() {\n        let chartInstance = chart.value.chart\n\n        chartActiveLegend.value = null\n\n        chartInstance.setActiveElements([])\n        chartInstance.update()\n    }\n\n\n    // Calc percents\n    function calcPercents(price) {\n        let result = 0\n\n        if(store.account.totalPrice) {\n            result = price / store.account.totalPrice * 100\n        }\n\n        return result\n    }\n</script>\n\n\n<style scoped>\n    .chart_info\n    {\n        display: flex;\n\n        justify-content: space-between;\n        align-items: flex-start;\n        align-content: flex-start;\n        flex-wrap: wrap;\n    }\n\n\n    .block_title\n    {\n        font-size: 20px;\n        font-weight: 500;\n        line-height: 24px;\n\n        width: 100%;\n        margin-bottom: 8px;\n    }\n\n\n    .block_desc\n    {\n        color: #555;\n        line-height: 110%;\n\n        width: 100%;\n        margin-bottom: 24px;\n    }\n\n\n\n    .chart\n    {\n        position: relative;\n\n        width: 291px;\n        max-width: 100%;\n        height: 291px;\n\n        border-radius: 50%;\n        background: #0d0d0d;\n\n        clip-path: circle(50% at 50% 50%);\n    }\n\n    .chart:before\n    {\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        content: '';\n\n        border: 14px solid #282828;\n        border-radius: 50%;\n    }\n\n\n    .chart .total\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 100%;\n\n        position: absolute;\n        z-index: 0;\n        top: 0;\n        left: 0;\n\n        display: flex;\n\n        width: 100%;\n        height: 100%;\n\n        text-align: center;\n        white-space: nowrap;\n        pointer-events: none;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .chart .total .label\n    {\n        width: 100%;\n        margin-bottom: 8px;\n    }\n\n\n    .chart .total .price\n    {\n        color: #fff;\n        font-size: 18px;\n        font-weight: 500;\n        line-height: 100%;\n\n        width: 100%;\n    }\n\n    .chart .total .price.hide\n    {\n        display: none;\n    }\n\n    .chart .total .price span\n    {\n        font-size: 12px;\n        font-weight: 400;\n        line-height: 100%;\n\n        margin-left: 4px;\n\n        text-transform: uppercase;\n    }\n\n\n\n    .legends\n    {\n        width: calc(100% - 307px);\n        margin-left: auto;\n    }\n\n\n    .legends .legend\n    {\n        display: flex;\n\n        padding: 6px 8px;\n\n        cursor: pointer;\n        transition: background .2s linear;\n\n        border-radius: 10px;\n        background: #141414;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .legends .legend + .legend\n    {\n        margin-top: 7px;\n    }\n\n\n    .legends .legend .logo\n    {\n        width: 24px;\n        height: 24px;\n        margin-right: 8px;\n\n        border-radius: 50%;\n    }\n\n    .legends .legend .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n\n    .legends .legend .token,\n    .legends .legend .address\n    {\n        font-size: 14px;\n        line-height: 100%;\n    }\n\n    .legends .legend .address\n    {\n        overflow: hidden;\n\n        width: calc(100% - 140px);\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .legends .legend .price\n    {\n        font-size: 14px;\n        line-height: 100%;\n\n        margin-left: auto;\n\n        text-align: right;\n        white-space: nowrap;\n    }\n\n\n    .legends .legend .percents\n    {\n        color: #464646;\n        font-size: 12px;\n        line-height: 100%;\n\n        margin-top: 4px;\n    }\n\n\n    .legends .legend:hover,\n    .legends .legend.active\n    {\n        background: #212121;\n    }\n\n\n    .legends.empty .legend\n    {\n        height: 40px;\n\n        border-radius: 8px;\n        background: #282828;\n    }\n\n</style>","import script from \"./ChartAccounts.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChartAccounts.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChartAccounts.vue?vue&type=style&index=0&id=7ac942b8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7ac942b8\"]])\n\nexport default __exports__","<template>\n    <div class=\"chart_info\">\n        <div class=\"block_title\">{{ $t('message.account_chart_assets_block_title') }}</div>\n\n        <div class=\"block_desc\">{{ $t('message.account_chart_assets_desc') }}</div>\n\n\n        <div class=\"chart\">\n            <Doughnut ref=\"chart\" :data=\"chartData\" :options=\"chartOptions\" />\n\n            <div class=\"total\">\n                <div class=\"label\">\n                    {{ $t('message.account_charts_total_assets') }}\n                </div>\n\n                <div class=\"price\">\n                    {{ $filters.toFixed(currencyСonversion(currentData.totalTokens / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}<span>{{ store.currentCurrency }}</span>\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"legends\" :class=\"{ empty: !currentData.totalTokens }\">\n            <template v-if=\"!currentData.totalTokens\">\n            <div class=\"legend\"></div>\n\n            <div class=\"legend\"></div>\n\n            <div class=\"legend\"></div>\n\n            <div class=\"legend\"></div>\n            </template>\n\n            <template v-else>\n            <div v-for=\"(item, index) in currentData.balance.groupByDenom\" :key=\"index\" class=\"legend\" :class=\"{'active': chartActiveLegend == index}\" @mouseenter=\"mouseenterLegend(index)\" @mouseleave=\"mouseleaveLegend()\">\n                <div class=\"logo\">\n                    <img :src=\"item.logo\" alt=\"\">\n                </div>\n\n                <div class=\"token\">\n                    {{ item.symbol }}\n                </div>\n\n                <div class=\"price\">\n                    <div>\n                        {{ $filters.toFixed(currencyСonversion(item.amount / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}\n                        {{ store.currentCurrency }}\n                    </div>\n\n                    <div class=\"percents\">\n                        {{ $filters.toFixed(calcPercents(item.symbol), 2) }}%\n                    </div>\n                </div>\n            </div>\n            </template>\n        </div>\n    </div>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, computed, reactive, ref } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { currencyСonversion } from '@/utils'\n\n    import { Chart as ChartJS, ArcElement } from 'chart.js'\n    import { Doughnut } from 'vue-chartjs'\n\n    ChartJS.register(ArcElement)\n\n\n    const store = useGlobalStore(),\n        chart = ref(null),\n        chartDatasets = reactive([]),\n        chartActiveLegend = ref(null),\n        chartColors = reactive([]),\n        chartTotal = ref(0),\n        chartData = computed(() => ({\n            datasets: [{\n                data: chartDatasets,\n                backgroundColor: chartColors,\n                borderColor: '#0d0d0d',\n                borderWidth: 4,\n                hoverBackgroundColor: chartColors,\n                hoverBorderColor: chartColors,\n                borderAlign: 'inner',\n                cutout: '84%',\n            }]\n        })),\n        chartOptions = reactive({\n            responsive: true,\n            plugins: {\n                legend: false,\n                tooltip: false\n            },\n            animation: {\n                duration: 200\n            },\n            transitions: {\n                active: {\n                    animation: {\n                        duration: 200\n                    }\n                }\n            },\n            onHover: (e, item) => {\n                item.length\n                    ? chartActiveLegend.value = item[0].index\n                    : chartActiveLegend.value = null\n            }\n        }),\n        currentWallet = ref({}),\n        currentData = ref({\n            totalTokens: 0,\n            balance: {\n                groupByDenom: []\n            }\n        })\n\n\n    onBeforeMount(() => {\n        if(store.account.currentWallet != 'all') {\n            // Get current walllet data\n            currentWallet.value = store.account.wallets.find(el => el.address == store.account.currentWallet)\n\n            // Get current data\n            currentData.value = currentWallet.value.networks.find(el => el.name == 'cosmoshub')\n        } else {\n            let allGroupByDenom = []\n\n            // Group by denom\n            for (let wallet of store.account.wallets) {\n                for (let network of wallet.networks) {\n                    network.balance.groupByDenom.forEach(el => {\n                        let duplicate = allGroupByDenom.find(e => e.symbol == el.symbol)\n\n                        if(duplicate) {\n                            duplicate.amount += el.amount\n                        } else {\n                            allGroupByDenom.push({\n                                'amount': el.amount,\n                                'logo': el.logo,\n                                'symbol': el.symbol\n                            })\n                        }\n                    })\n                }\n            }\n\n            // Sort data\n            allGroupByDenom.sort((a, b) => {\n                if (a.amount > b.amount) { return -1 }\n                if (a.amount < b.amount) { return 1 }\n                return 0\n            })\n\n            // Set data\n            currentData.value.balance.groupByDenom = allGroupByDenom\n\n            // Total tokens\n            currentData.value.totalTokens = store.account.totalTokens\n        }\n\n\n        // Set data for chart\n        currentData.value.balance.groupByDenom.forEach(el => {\n            chartDatasets.push(el.amount)\n\n            let color = store.networkColors[el.symbol]\n\n            if(el.symbol.substring(0, 2) == 'st') {\n                color = store.networkColors.STRD\n            }\n\n            if(el.symbol.substring(0, 3) == 'stk') {\n                color = store.networkColors.XPRT\n            }\n\n            if(el.symbol.substring(0, 1) == 'q') {\n                color = store.networkColors.QCK\n            }\n\n            chartColors.push(color)\n        })\n\n\n        // Sum chart total\n        currentData.value.balance.groupByDenom.forEach(el => chartTotal.value += el.amount)\n    })\n\n\n    // Mouse enter on legend\n    function mouseenterLegend(dataIndex) {\n        let chartInstance = chart.value.chart\n\n        chartActiveLegend.value = dataIndex\n\n        chartInstance.setActiveElements([{\n            datasetIndex: 0,\n            index: dataIndex\n        }])\n\n        chartInstance.update()\n    }\n\n\n    // Mouse leave from legend\n    function mouseleaveLegend() {\n        let chartInstance = chart.value.chart\n\n        chartActiveLegend.value = null\n\n        chartInstance.setActiveElements([])\n        chartInstance.update()\n    }\n\n\n    // Calc percents\n    function calcPercents(symbol) {\n        let result = 0,\n            token = currentData.value.balance.groupByDenom.find(e => e.symbol == symbol)\n\n        if(currentData.value.totalTokens) {\n            result = token.amount / currentData.value.totalTokens * 100\n        }\n\n        return result\n    }\n</script>\n\n\n<style scoped>\n    .chart_info\n    {\n        display: flex;\n\n        justify-content: space-between;\n        align-items: flex-start;\n        align-content: flex-start;\n        flex-wrap: wrap;\n    }\n\n\n    .block_title\n    {\n        font-size: 20px;\n        font-weight: 500;\n        line-height: 24px;\n\n        width: 100%;\n        margin-bottom: 8px;\n    }\n\n\n    .block_desc\n    {\n        color: #555;\n        line-height: 110%;\n\n        width: 100%;\n        margin-bottom: 24px;\n    }\n\n\n\n    .chart\n    {\n        position: relative;\n\n        width: 291px;\n        max-width: 100%;\n        height: 291px;\n\n        border-radius: 50%;\n        background: #0d0d0d;\n\n        clip-path: circle(50% at 50% 50%);\n    }\n\n    .chart:before\n    {\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        content: '';\n\n        border: 14px solid #282828;\n        border-radius: 50%;\n    }\n\n\n    .chart .total\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 100%;\n\n        position: absolute;\n        z-index: 0;\n        top: 0;\n        left: 0;\n\n        display: flex;\n\n        width: 100%;\n        height: 100%;\n\n        text-align: center;\n        white-space: nowrap;\n        pointer-events: none;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .chart .total .label\n    {\n        width: 100%;\n        margin-bottom: 8px;\n    }\n\n\n    .chart .total .price\n    {\n        color: #fff;\n        font-size: 18px;\n        font-weight: 500;\n        line-height: 100%;\n\n        width: 100%;\n    }\n\n    .chart .total .price.hide\n    {\n        display: none;\n    }\n\n    .chart .total .price span\n    {\n        font-size: 12px;\n        font-weight: 400;\n        line-height: 100%;\n\n        margin-left: 4px;\n\n        text-transform: uppercase;\n    }\n\n\n\n    .legends\n    {\n        width: calc(100% - 307px);\n        margin-left: auto;\n    }\n\n\n    .legends .legend\n    {\n        display: flex;\n\n        padding: 6px 8px;\n\n        cursor: pointer;\n        transition: background .2s linear;\n\n        border-radius: 10px;\n        background: #141414;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .legends .legend + .legend\n    {\n        margin-top: 7px;\n    }\n\n\n    .legends .legend .logo\n    {\n        width: 24px;\n        height: 24px;\n        margin-right: 8px;\n\n        border-radius: 50%;\n    }\n\n    .legends .legend .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n\n    .legends .legend .token,\n    .legends .legend .address\n    {\n        font-size: 14px;\n        line-height: 100%;\n    }\n\n    .legends .legend .address\n    {\n        overflow: hidden;\n\n        width: calc(100% - 140px);\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .legends .legend .price\n    {\n        font-size: 14px;\n        line-height: 100%;\n\n        margin-left: auto;\n\n        text-align: right;\n        white-space: nowrap;\n    }\n\n\n    .legends .legend .percents\n    {\n        color: #464646;\n        font-size: 12px;\n        line-height: 100%;\n\n        margin-top: 4px;\n    }\n\n\n    .legends .legend:hover,\n    .legends .legend.active\n    {\n        background: #212121;\n    }\n\n\n    .legends.empty .legend\n    {\n        height: 40px;\n\n        border-radius: 8px;\n        background: #282828;\n    }\n\n</style>","import script from \"./ChartAssets.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChartAssets.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChartAssets.vue?vue&type=style&index=0&id=57526166&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-57526166\"]])\n\nexport default __exports__","<template>\n    <div class=\"chart_info\">\n        <div class=\"block_title\">{{ $t('message.account_chart_networks_block_title') }}</div>\n\n        <div class=\"block_desc\">{{ $t('message.account_chart_networks_desc') }}</div>\n\n\n        <div class=\"chart\">\n            <Doughnut ref=\"chart\" :data=\"chartData\" :options=\"chartOptions\" />\n\n            <div class=\"total\">\n                <div class=\"label\">\n                    {{ $t('message.account_charts_total_assets') }}\n                </div>\n\n                <div class=\"price\">\n                    {{ $filters.toFixed(currencyСonversion(currentData.totalTokens / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}\n                    <span>{{ store.currentCurrency }}</span>\n                </div>\n            </div>\n        </div>\n\n\n        <div class=\"legends\" :class=\"{ empty: !currentData.totalTokens }\">\n            <template v-if=\"!currentData.totalTokens\">\n            <div class=\"legend\"></div>\n\n            <div class=\"legend\"></div>\n\n            <div class=\"legend\"></div>\n\n            <div class=\"legend\"></div>\n            </template>\n\n            <template v-else>\n            <div v-for=\"(network, index) in currentData.networks\" :key=\"index\" class=\"legend\" :class=\"{'active': chartActiveLegend == index}\" @mouseenter=\"mouseenterLegend(index)\" @mouseleave=\"mouseleaveLegend()\">\n                <div class=\"logo\">\n                    <img :src=\"`/${network.name}_logo.png`\" alt=\"\">\n                </div>\n\n                <div class=\"token\">\n                    {{ store.networks[network.name].name }}\n                </div>\n\n                <div class=\"price\">\n                    <div>{{ $filters.toFixed(calcPercents(network.totalTokens), 2) }}%</div>\n\n                    <div class=\"percents\">\n                        {{ $filters.toFixed(currencyСonversion(network.totalTokens / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}\n                        {{ store.currentCurrency }}\n                    </div>\n                </div>\n            </div>\n            </template>\n        </div>\n    </div>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, computed, reactive, ref } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { currencyСonversion } from '@/utils'\n\n    import { Chart as ChartJS, ArcElement } from 'chart.js'\n    import { Doughnut } from 'vue-chartjs'\n\n    ChartJS.register(ArcElement)\n\n\n    const store = useGlobalStore(),\n        chart = ref(null),\n        chartDatasets = reactive([]),\n        chartActiveLegend = ref(null),\n        chartColors = reactive([]),\n        chartData = computed(() => ({\n            datasets: [{\n                data: chartDatasets,\n                backgroundColor: chartColors,\n                borderColor: '#0d0d0d',\n                borderWidth: 4,\n                hoverBackgroundColor: chartColors,\n                hoverBorderColor: chartColors,\n                borderAlign: 'inner',\n                cutout: '84%',\n            }]\n        })),\n        chartOptions = reactive({\n            responsive: true,\n            plugins: {\n                legend: false,\n                tooltip: false\n            },\n            animation: {\n                duration: 200\n            },\n            transitions: {\n                active: {\n                    animation: {\n                        duration: 200\n                    }\n                }\n            },\n            onHover: (e, item) => {\n                item.length\n                    ? chartActiveLegend.value = item[0].index\n                    : chartActiveLegend.value = null\n            }\n        }),\n        currentData = ref({\n            totalTokens: 0,\n            networks: []\n        })\n\n\n    onBeforeMount(() => {\n        if(store.account.currentWallet != 'all') {\n            // Get current walllet data\n            currentData.value = store.account.wallets.find(el => el.address == store.account.currentWallet)\n        } else {\n            // Sum data for chart\n            for (let wallet of store.account.wallets) {\n                for (let network of wallet.networks) {\n                    let duplicate = currentData.value.networks.find(e => e.name == network.name)\n\n                    if(duplicate) {\n                        duplicate.totalTokens += network.totalTokens\n                    } else {\n                        currentData.value.networks.push({\n                            name: network.name,\n                            color: network.color,\n                            totalTokens: network.totalTokens\n                        })\n                    }\n                }\n            }\n\n            // Total tokens\n            currentData.value.totalTokens = store.account.totalTokens\n        }\n\n        // Set data for chart\n        currentData.value.networks.forEach(network => {\n            chartDatasets.push(network.totalTokens)\n            chartColors.push(network.color)\n        })\n    })\n\n\n    // Mouse enter on legend\n    function mouseenterLegend(dataIndex) {\n        let chartInstance = chart.value.chart\n\n        chartActiveLegend.value = dataIndex\n\n        chartInstance.setActiveElements([{\n            datasetIndex: 0,\n            index: dataIndex\n        }])\n\n        chartInstance.update()\n    }\n\n\n    // Mouse leave from legend\n    function mouseleaveLegend() {\n        let chartInstance = chart.value.chart\n\n        chartActiveLegend.value = null\n\n        chartInstance.setActiveElements([])\n        chartInstance.update()\n    }\n\n\n    // Calc percents\n    function calcPercents(amount) {\n        let result = 0\n\n        if(currentData.value.totalTokens) {\n            result = amount / currentData.value.totalTokens * 100\n        }\n\n        return result\n    }\n</script>\n\n\n\n<style scoped>\n    .chart_info\n    {\n        display: flex;\n\n        justify-content: space-between;\n        align-items: flex-start;\n        align-content: flex-start;\n        flex-wrap: wrap;\n    }\n\n\n    .block_title\n    {\n        font-size: 20px;\n        font-weight: 500;\n        line-height: 24px;\n\n        width: 100%;\n        margin-bottom: 8px;\n    }\n\n\n    .block_desc\n    {\n        color: #555;\n        line-height: 110%;\n\n        width: 100%;\n        margin-bottom: 24px;\n    }\n\n\n\n    .chart\n    {\n        position: relative;\n\n        width: 291px;\n        max-width: 100%;\n        height: 291px;\n\n        border-radius: 50%;\n        background: #0d0d0d;\n\n        clip-path: circle(50% at 50% 50%);\n    }\n\n    .chart:before\n    {\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        content: '';\n\n        border: 14px solid #282828;\n        border-radius: 50%;\n    }\n\n\n    .chart .total\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 100%;\n\n        position: absolute;\n        z-index: 0;\n        top: 0;\n        left: 0;\n\n        display: flex;\n\n        width: 100%;\n        height: 100%;\n\n        text-align: center;\n        white-space: nowrap;\n        pointer-events: none;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .chart .total .label\n    {\n        width: 100%;\n        margin-bottom: 8px;\n    }\n\n\n    .chart .total .price\n    {\n        color: #fff;\n        font-size: 18px;\n        font-weight: 500;\n        line-height: 100%;\n\n        width: 100%;\n    }\n\n    .chart .total .price.hide\n    {\n        display: none;\n    }\n\n    .chart .total .price span\n    {\n        font-size: 12px;\n        font-weight: 400;\n        line-height: 100%;\n\n        margin-left: 4px;\n\n        text-transform: uppercase;\n    }\n\n\n\n    .legends\n    {\n        width: calc(100% - 307px);\n        margin-left: auto;\n    }\n\n\n    .legends .legend\n    {\n        display: flex;\n\n        padding: 6px 8px;\n\n        cursor: pointer;\n        transition: background .2s linear;\n\n        border-radius: 10px;\n        background: #141414;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .legends .legend + .legend\n    {\n        margin-top: 7px;\n    }\n\n\n    .legends .legend .logo\n    {\n        width: 24px;\n        height: 24px;\n        margin-right: 8px;\n\n        border-radius: 50%;\n    }\n\n    .legends .legend .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n\n    .legends .legend .token,\n    .legends .legend .address\n    {\n        font-size: 14px;\n        line-height: 100%;\n    }\n\n    .legends .legend .address\n    {\n        overflow: hidden;\n\n        width: calc(100% - 140px);\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .legends .legend .price\n    {\n        font-size: 14px;\n        line-height: 100%;\n\n        margin-left: auto;\n\n        text-align: right;\n        white-space: nowrap;\n    }\n\n\n    .legends .legend .percents\n    {\n        color: #464646;\n        font-size: 12px;\n        line-height: 100%;\n\n        margin-top: 4px;\n    }\n\n\n    .legends .legend:hover,\n    .legends .legend.active\n    {\n        background: #212121;\n    }\n\n\n    .legends.empty .legend\n    {\n        height: 40px;\n\n        border-radius: 8px;\n        background: #282828;\n    }\n\n</style>","import script from \"./ChartNetworks.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChartNetworks.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChartNetworks.vue?vue&type=style&index=0&id=55a3d7ce&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-55a3d7ce\"]])\n\nexport default __exports__","<template>\n    <div class=\"tabs\">\n        <button class=\"btn\" :class=\"{'active': chartActive == 1}\" @click.prevent=\"chartActive = 1\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_account_charts_tab_stake'))\">\n            {{ $t('message.account_charts_tab_stake') }}\n        </button>\n\n        <button class=\"btn\" :class=\"{'active': chartActive == 2}\" @click.prevent=\"chartActive = 2\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_account_charts_tab_liquide'))\">\n            {{ $t('message.account_charts_tab_liquide') }}\n        </button>\n\n        <button class=\"btn\" :class=\"{'active': chartActive == 3}\" @click.prevent=\"chartActive = 3\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_account_charts_tab_accounts'))\">\n            {{ $t('message.account_charts_tab_accounts') }}\n        </button>\n\n        <button class=\"btn\" :class=\"{'active': chartActive == 4}\" @click.prevent=\"chartActive = 4\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_account_charts_tab_assets'))\">\n            {{ $t('message.account_charts_tab_assets') }}\n        </button>\n\n        <button class=\"btn\" :class=\"{'active': chartActive == 5}\" @click.prevent=\"chartActive = 5\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_account_charts_tab4'))\">\n            {{ $t('message.account_charts_tab_networks') }}\n        </button>\n    </div>\n\n\n    <div class=\"loader_wrap\" v-if=\"loading\">\n        <div class=\"loader\"><span></span></div>\n    </div>\n\n\n    <template v-else>\n    <ChartStakeLiquide v-if=\"chartActive == 1 || chartActive == 2\" :chartActive=\"chartActive\" />\n    <!-- <ChartStake v-if=\"chartActive == 1\" />\n\n    <ChartLiquide v-if=\"chartActive == 2\" /> -->\n\n    <ChartAccounts v-if=\"chartActive == 3\" />\n\n    <ChartAssets v-if=\"chartActive == 4\" />\n\n    <ChartNetworks v-if=\"chartActive == 5\" />\n    </template>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, ref, inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { generateAddress } from '@/utils'\n\n    // Components\n    import ChartStakeLiquide from '@/components/account/charts/ChartStakeLiquide.vue'\n    // import ChartStake from '@/components/account/charts/ChartStake.vue'\n    // import ChartLiquide from '@/components/account/charts/ChartLiquide.vue'\n    import ChartAccounts from '@/components/account/charts/ChartAccounts.vue'\n    import ChartAssets from '@/components/account/charts/ChartAssets.vue'\n    import ChartNetworks from '@/components/account/charts/ChartNetworks.vue'\n\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter'),\n        loading = store.demo ? ref(false) : ref(true),\n        chartActive = ref(1)\n\n\n    onBeforeMount(async () => {\n        // Get data\n        if(!store.demo) {\n            await getData()\n        }\n    })\n\n\n    // Get data\n    async function getData() {\n        // Set loader\n        loading.value = true\n\n        // Get cosmos hub data\n        const cosmosNetworkPrice = store.prices.find(el => el.symbol == 'ATOM').price\n\n        for (let wallet of store.account.wallets) {\n            try {\n                await fetch(`https://rpc.bronbro.io/account/account_balance/${generateAddress(store.networks.cosmoshub.address_prefix, wallet.address)}`)\n                    .then(res => res.json())\n                    .then(response => {\n                        let totals = {\n                            liquid: 0,\n                            staked: 0,\n                            unbonding: 0,\n                            rewards: 0,\n                            outside: 0,\n                            ibc: 0,\n                            liquid_rewards: 0\n                        },\n                        groupByDenom = []\n\n\n                        // Clean data\n                        if(response.liquid && response.liquid.native) {\n                            for (let i = response.liquid.native.length - 1; i >= 0; i--) {\n                                if (response.liquid.native[i].symbol === null || response.liquid.native[i].exponent === null || response.liquid.native[i].price === null) {\n                                    response.liquid.native.splice(i, 1)\n                                }\n                            }\n                        }\n\n                        if(response.liquid && response.liquid.ibc) {\n                            for (let i = response.liquid.ibc.length - 1; i >= 0; i--) {\n                                if (response.liquid.ibc[i].symbol === null || response.liquid.ibc[i].exponent === null || response.liquid.ibc[i].price === null) {\n                                    response.liquid.ibc.splice(i, 1)\n                                }\n                            }\n                        }\n\n                        if(response.staked) {\n                            for (let i = response.staked.length - 1; i >= 0; i--) {\n                                if (response.staked[i].symbol === null || response.staked[i].exponent === null || response.staked[i].price === null) {\n                                    response.staked.splice(i, 1)\n                                }\n                            }\n                        }\n\n                        if(response.unbonding) {\n                            for (let i = response.unbonding.length - 1; i >= 0; i--) {\n                                if (response.unbonding[i].symbol === null || response.unbonding[i].exponent === null || response.unbonding[i].price === null) {\n                                    response.unbonding.splice(i, 1)\n                                }\n                            }\n                        }\n\n                        if(response.rewards) {\n                            for (let i = response.rewards.length - 1; i >= 0; i--) {\n                                if (response.rewards[i].symbol === null || response.rewards[i].exponent === null || response.rewards[i].price === null) {\n                                    response.rewards.splice(i, 1)\n                                }\n                            }\n                        }\n\n\n                        // Calc liquid tokens\n                        if(response.liquid && response.liquid.native) {\n                            response.liquid.native.forEach(el => {\n                                // Sum total\n                                totals.liquid += el.amount\n                                totals.liquid_rewards += el.amount\n\n                                // Group by denom\n                                let duplicate = groupByDenom.find(e => e.symbol == el.symbol)\n\n                                if(duplicate) {\n                                    duplicate.amount += (el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)) * Math.pow(10, store.networks.cosmoshub.exponent)\n                                } else {\n                                    groupByDenom.push({\n                                        'amount': (el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)) * Math.pow(10, store.networks.cosmoshub.exponent),\n                                        'logo': el.logo,\n                                        'symbol': el.symbol\n                                    })\n                                }\n                            })\n                        }\n\n                        // Calc ibc tokens\n                        if(response.liquid && response.liquid.ibc) {\n                            response.liquid.ibc.forEach(el => {\n                                // Convert to current denom\n                                el.amountCurrentDenom = el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)\n\n                                // Sum total\n                                totals.ibc += parseFloat(el.amountCurrentDenom * Math.pow(10, store.networks.cosmoshub.exponent))\n\n                                // Group by denom\n                                let duplicate = groupByDenom.find(e => e.symbol == el.symbol)\n\n                                if(duplicate) {\n                                    duplicate.amount += (el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)) * Math.pow(10, store.networks.cosmoshub.exponent)\n                                } else {\n                                    groupByDenom.push({\n                                        'amount': (el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)) * Math.pow(10, store.networks.cosmoshub.exponent),\n                                        'logo': el.logo,\n                                        'symbol': el.symbol\n                                    })\n                                }\n                            })\n                        }\n\n                        // Calc staked tokens\n                        if(response.staked) {\n                            response.staked.forEach(el => {\n                                // Sum total\n                                totals.staked += el.amount\n\n                                // Group by denom\n                                let duplicate = groupByDenom.find(e => e.symbol == el.symbol)\n\n                                if(duplicate) {\n                                    duplicate.amount += (el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)) * Math.pow(10, store.networks.cosmoshub.exponent)\n                                } else {\n                                    groupByDenom.push({\n                                        'amount': (el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)) * Math.pow(10, store.networks.cosmoshub.exponent),\n                                        'logo': el.logo,\n                                        'symbol': el.symbol\n                                    })\n                                }\n                            })\n                        }\n\n                        // Calc unbonding tokens\n                        if(response.unbonding) {\n                            response.unbonding.forEach(el => {\n                                // Sum total\n                                totals.unbonding += el.amount\n\n                                // Group by denom\n                                let duplicate = groupByDenom.find(e => e.symbol == el.symbol)\n\n                                if(duplicate) {\n                                    duplicate.amount += (el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)) * Math.pow(10, store.networks.cosmoshub.exponent)\n                                } else {\n                                    groupByDenom.push({\n                                        'amount': (el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)) * Math.pow(10, store.networks.cosmoshub.exponent),\n                                        'logo': el.logo,\n                                        'symbol': el.symbol\n                                    })\n                                }\n                            })\n                        }\n\n                        // Calc rewards tokens\n                        if(response.rewards) {\n                            response.rewards.forEach(el => {\n                                // Convert to current denom\n                                el.amountCurrentDenom = el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)\n\n                                // Sum total\n                                if(el.amount * Math.pow(10, el.exponent) >= 1) {\n                                    totals.rewards += parseFloat(el.amountCurrentDenom * Math.pow(10, store.networks.cosmoshub.exponent))\n                                }\n\n                                totals.liquid_rewards = totals.liquid + totals.rewards\n\n                                // Group by denom\n                                let duplicate = groupByDenom.find(e => e.symbol == el.symbol)\n\n                                if(duplicate) {\n                                    duplicate.amount += (el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)) * Math.pow(10, store.networks.cosmoshub.exponent)\n                                } else {\n                                    groupByDenom.push({\n                                        'amount': (el.amount / Math.pow(10, el.exponent) * (el.price / cosmosNetworkPrice)) * Math.pow(10, store.networks.cosmoshub.exponent),\n                                        'logo': el.logo,\n                                        'symbol': el.symbol\n                                    })\n                                }\n                            })\n                        }\n\n\n                        // Set data in network\n                        let currentNetworkInWallet = wallet.networks.find(network => network.name == 'cosmoshub')\n\n                        currentNetworkInWallet.address = response.address\n                        currentNetworkInWallet.total = totals\n\n                        currentNetworkInWallet.totalTokens = 0\n                        currentNetworkInWallet.totalTokens += totals.liquid + totals.staked + totals.unbonding + totals.rewards + totals.outside + totals.ibc\n\n                        currentNetworkInWallet.balance = {\n                            liquid: {\n                                native: response.liquid && response.liquid.native ? response.liquid.native : null,\n                                ibc: response.liquid && response.liquid.ibc ? response.liquid.ibc : null\n                            },\n                            staked: response.staked,\n                            unbonding: response.unbonding,\n                            rewards: response.rewards,\n                            groupByDenom: groupByDenom.sort((a, b) => {\n                                if (a.amount > b.amount) { return -1 }\n                                if (a.amount < b.amount) { return 1 }\n                                return 0\n                            })\n                        }\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n\n        // Sum wallet total tokens\n        for (let wallet of store.account.wallets) {\n            wallet.totalTokens = 0\n\n            for (let network of wallet.networks) {\n                wallet.totalTokens += network.totalTokens\n            }\n        }\n\n\n        // Sum account total tokens\n        store.account.totalTokens = 0\n\n        for (let wallet of store.account.wallets) {\n            store.account.totalTokens += wallet.totalTokens\n        }\n\n\n        // Hide loader\n        loading.value = false\n    }\n\n\n    // Event \"change active chart\"\n    emitter.on('changeActiveChart', chartIndex => chartActive.value = chartIndex)\n</script>\n\n\n<style scoped>\n    .tabs\n    {\n        display: flex;\n\n        width: 100%;\n        margin-bottom: 24px;\n\n        justify-content: flex-start;\n        align-items: stretch;\n        align-content: stretch;\n        flex-wrap: nowrap;\n    }\n\n\n    .tabs .btn\n    {\n        color: #555;\n        font-size: 16px;\n        line-height: 100%;\n\n        display: block;\n\n        width: 100%;\n        min-height: 62px;\n        padding: 10px 0 9px;\n\n        text-align: center;\n\n        border-bottom: 1px solid rgba(255, 255, 255, .1);\n    }\n\n    .tabs .btn + .btn\n    {\n        margin-left: 4px;\n    }\n\n    .tabs .btn:hover,\n    .tabs .btn.active\n    {\n        color: #950fff;\n\n        border-color: #950fff;\n    }\n\n\n    .loader_wrap\n    {\n        position: relative;\n\n        height: auto;\n        padding: 0;\n\n        background: none;\n    }\n\n</style>","import script from \"./Charts.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Charts.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Charts.vue?vue&type=style&index=0&id=a406e25e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-a406e25e\"]])\n\nexport default __exports__","<template>\n    <section class=\"stats\">\n        <!-- <pre>{{ data }}</pre> -->\n\n        <div class=\"row\">\n            <div class=\"item\">\n                <div class=\"label\">\n                    {{ $t('message.account_APR') }}\n                </div>\n\n                <div class=\"loader_wrap\" v-if=\"loading\">\n                    <div class=\"loader\"><span></span></div>\n                </div>\n\n                <div class=\"val\" v-else>\n                    {{ $filters.toFixed(APR * 100, 2) }}%\n                </div>\n            </div>\n\n\n            <div class=\"item\">\n                <div class=\"label\">\n                    {{ $t('message.account_rewards') }}\n                </div>\n\n                <div class=\"loader_wrap\" v-if=\"loading\">\n                    <div class=\"loader\"><span></span></div>\n                </div>\n\n                <div class=\"val\" v-else>\n                    {{ '~' + $filters.toFixed(currencyСonversion(totalRewardTokens / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}\n\n                    <div class=\"currency\">{{ store.currentCurrency }}</div>\n                </div>\n            </div>\n\n\n            <div class=\"item\">\n                <div class=\"label\">\n                    {{ $t('message.account_passport_value') }}\n                </div>\n\n                <div class=\"loader_wrap\" v-if=\"loading\">\n                    <div class=\"loader\"><span></span></div>\n                </div>\n\n                <div class=\"val\" v-else>\n                    {{ '~' + $filters.toFixed(currencyСonversion(store.account.totalTokens / Math.pow(10, store.networks[store.currentNetwork].exponent), store.networks[store.currentNetwork].token_name), 2) }}\n\n                    <div class=\"currency\">{{ store.currentCurrency }}</div>\n                </div>\n            </div>\n\n\n            <div class=\"item\">\n                <div class=\"label\">\n                    {{ $t('message.account_RPDE') }}\n                </div>\n\n                <div class=\"loader_wrap\" v-if=\"loading\">\n                    <div class=\"loader\"><span></span></div>\n                </div>\n\n                <div class=\"val\" v-else>\n                    {{ '~' + $filters.toFixed(currencyСonversion(store.account.RPDE, store.networks[store.currentNetwork].token_name), 2) }}\n\n                    <div class=\"currency\">{{ store.currentCurrency }}</div>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { ref, onBeforeMount } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { generateAddress, currencyСonversion } from '@/utils'\n\n    const store = useGlobalStore(),\n        loading = store.demo ? ref(false) : ref(true),\n        totalRewardTokens = ref(0),\n        APR = ref(0),\n        RPDE = ref(0)\n\n\n    onBeforeMount(async () => {\n        // Get data\n        if(!store.demo) {\n            await getData()\n        }\n    })\n\n\n    // Get data\n    async function getData() {\n        // Set loader\n        loading.value = true\n\n        for (const wallet of store.account.wallets) {\n            // Get cosmos hub data\n            let cosmosHubAddress = generateAddress(store.networks[store.currentNetwork].address_prefix, wallet.address)\n\n            try {\n                await fetch(`https://rpc.bronbro.io/account/account_info/${cosmosHubAddress}`)\n                    .then(res => res.json())\n                    .then(response => {\n                        // Set network info\n                        let currentNetworkInWallet = wallet.networks.find(network => network.name == 'cosmoshub')\n\n                        currentNetworkInWallet.info = response\n\n                        // Set current data\n                        APR = response.apr\n                    })\n\n                // Sum account rewards\n                for (let wallet of store.account.wallets) {\n                    for (let network of wallet.networks) {\n                        totalRewardTokens.value += network.total.rewards\n                    }\n                }\n\n                // Calc wallet info\n                wallet.RPDE = 0\n\n                for (const network of wallet.networks) {\n                    wallet.RPDE += network.info.rpde.amount / Math.pow(10, network.info.rpde.exponent)\n                }\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n\n        // Calc account info\n        store.account.RPDE = 0\n\n        for (const wallet of store.account.wallets) {\n            store.account.info.RPDE_USDT += wallet.RPDE\n        }\n\n\n        // Set current data\n        if(store.account.currentWallet != 'all') {\n            // Current wallet\n            let currentWallet = store.account.wallets.find(el => el.address == store.account.currentWallet)\n\n            RPDE.value = currentWallet.RPDE\n        } else {\n            RPDE.value = store.account.RPDE\n        }\n\n\n        // Hide loader\n        loading.value = false\n    }\n</script>\n\n\n<style scoped>\n    .row\n    {\n        margin-bottom: -20px;\n        margin-left: -20px;\n\n        align-items: stretch;\n        align-content: stretch;\n    }\n\n    .row > *\n    {\n        width: calc(25% - 20px);\n        margin-bottom: 20px;\n        margin-left: 20px;\n    }\n\n\n    .item\n    {\n        padding: 16px 8px;\n\n        text-align: center;\n\n        border-radius: 20px;\n        background: #0d0d0d;\n    }\n\n\n    .label\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 17px;\n\n        width: 100%;\n        margin-bottom: 8px;\n    }\n\n\n    .val\n    {\n        font-size: 24px;\n        font-weight: 700;\n        line-height: 100%;\n\n        white-space: nowrap;\n    }\n\n\n    .val .currency\n    {\n        color: #555;\n        font-size: 16px;\n        font-weight: 400;\n        line-height: 100%;\n\n        margin-top: 4px;\n    }\n\n\n    .loader_wrap\n    {\n        position: relative;\n\n        height: auto;\n        margin: 8px auto -4px;\n\n        background: none;\n    }\n\n    .loader\n    {\n        width: 23px;\n        height: 23px;\n    }\n\n</style>","import script from \"./Stats.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Stats.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Stats.vue?vue&type=style&index=0&id=6235f5b8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6235f5b8\"]])\n\nexport default __exports__","<template>\n    <section class=\"modal\" id=\"validator_modal\">\n        <div class=\"modal_content\" @click.self=\"emitter.emit('closeValidatorModal')\">\n            <div class=\"data\">\n                <button class=\"close_btn\" @click.prevent=\"emitter.emit('closeValidatorModal')\">\n                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n                </button>\n\n                <div class=\"modal_title\">\n                    {{ $t('message.validator_modal_title') }}\n                </div>\n\n                <div class=\"row\">\n                    <div class=\"logo\">\n                        <div class=\"power\">\n                            {{ store.validatorInfo.result[0][getValidatorInfo('validator_rank')] }}\n                            <svg><use xlink:href=\"@/assets/sprite.svg#bg_rank\"></use></svg>\n                        </div>\n\n                        <img :src=\"store.validatorInfo.result[0][getValidatorInfo('logo_path')]\" alt=\"\" @error=\"imageLoadError\">\n                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_user\"></use></svg>\n                    </div>\n\n                    <div class=\"info\">\n                        <div class=\"name\">{{ props.validator.moniker }}</div>\n\n                        <div class=\"operator_address\">\n                            <div class=\"label\">\n                                {{ $t('message.validator_modal_operator_address_label') }}\n                            </div>\n\n                            <div class=\"val\">\n                                {{ props.validator.operator_address }}\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"active_set\" :class=\"{ green: store.validatorInfo.result[0][getValidatorInfo('is_active_set')] }\">\n                        <template v-if=\"store.validatorInfo.result[0][getValidatorInfo('is_active_set')]\">\n                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                        <span>{{ $t('message.validator_modal_active_set') }}</span>\n                        </template>\n\n                        <template v-else>\n                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_notice\"></use></svg>\n                        <span>{{ $t('message.validator_modal_inactive_set') }}</span>\n                        </template>\n                    </div>\n                </div>\n\n                <div class=\"btns\">\n                    <a :href=\"`https://${props.validator.website.replace('https://', '')}`\" target=\"_blank\" rel=\"noopener nofollow\" class=\"link\">\n                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_website\"></use></svg>\n                        <span>{{ $t('message.validator_modal_website_btn') }}</span>\n                    </a>\n\n                    <a :href=\"`https://www.mintscan.io/${store.networks[store.currentNetwork].mintscanAlias}/validators/${props.validator.operator_address}`\" target=\"_blank\" rel=\"noopener nofollow\" class=\"link\" v-if=\"store.networks[store.currentNetwork].mintscanAlias\">\n                        <img src=\"@/assets/mintscan_logo.png\" alt=\"\">\n                        <span>{{ $t('message.validator_modal_mintscan_btn') }}</span>\n                    </a>\n\n                    <a :href=\"`https://score.bronbro.io/network?network=${store.currentNetwork}`\" target=\"_blank\" rel=\"noopener nofollow\" class=\"link\">\n                        <img src=\"@/assets/broscore_logo.svg\" alt=\"\">\n                        <span>{{ $t('message.validator_modal_broscore_btn') }}</span>\n                    </a>\n                </div>\n\n                <div class=\"details\">\n                    <div class=\"label\">\n                        {{ $t('message.validator_modal_details_label') }}\n                    </div>\n\n                    <div class=\"val\">\n                        {{ props.validator.details }}\n                    </div>\n                </div>\n\n                <div class=\"features\">\n                    <div class=\"row\">\n                        <div class=\"feature\" @mouseover=\"emitter.emit('setNotification', $t('message.validator_modal_col_greed_notice'))\">\n                            <div class=\"label\">\n                                {{ $t('message.validator_modal_commission_label') }}\n                            </div>\n\n                            <div class=\"val\">\n                                {{ $filters.toFixed(store.validatorInfo.result[0][getValidatorInfo('greed')] * 100, 2) }}%\n                            </div>\n                        </div>\n\n                        <div class=\"feature\" @mouseover=\"emitter.emit('setNotification', $t('message.validator_modal_col_self_bonded_ownership_notice'))\">\n                            <div class=\"label\" v-html=\"$t('message.validator_modal_ownership_label')\"></div>\n\n                            <div class=\"val\">\n                                <span>\n                                    {{ new Number($filters.toFixed(store.validatorInfo.result[0][getValidatorInfo('ownership')] * store.validatorInfo.result[0][getValidatorInfo('staked')] / store.networks[store.currentNetwork].exponent, 0)).toLocaleString() }}\n                                </span>\n                                /\n                                <span>\n                                    {{ $filters.toFixed(store.validatorInfo.result[0][getValidatorInfo('ownership')] * 100, 2) }}%\n                                </span>\n                            </div>\n                        </div>\n\n                        <div class=\"feature\" @mouseover=\"emitter.emit('setNotification', $t('message.validator_modal_col_total_delegated_notice'))\">\n                            <div class=\"label\">\n                                {{ $t('message.validator_modal_total_delegated_label') }}\n                            </div>\n\n                            <div class=\"val\">\n                                {{ new Number($filters.toFixed(store.validatorInfo.result[0][getValidatorInfo('staked')] / store.networks[store.currentNetwork].exponent, 0)).toLocaleString() }}\n                            </div>\n                        </div>\n\n                        <div class=\"feature\" @mouseover=\"emitter.emit('setNotification', $t('message.validator_modal_col_voted_notice', { voted: $filters.toFixed(store.validatorInfo.result[0][getValidatorInfo('voted')], 2) }))\">\n                            <div class=\"label\">\n                                {{ $t('message.validator_modal_voted_label') }}\n                            </div>\n\n                            <div class=\"val\">\n                                {{ $filters.toFixed(store.validatorInfo.result[0][getValidatorInfo('voted')], 0) }}\n                            </div>\n                        </div>\n\n                        <div class=\"feature\" @mouseover=\"emitter.emit('setNotification', $t('message.validator_modal_col_blurring_notice'))\">\n                            <div class=\"label\">\n                                {{ $t('message.validator_modal_blurring_label') }}\n                            </div>\n\n                            <div class=\"val\">\n                                {{ $filters.toFixed(store.validatorInfo.result[0][getValidatorInfo('blurring')] * 100, 2) }}%\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"overlay\"></div>\n    </section>\n</template>\n\n\n<script setup>\n    import { inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter'),\n        props = defineProps(['validator'])\n\n    await fetch(`https://rpc.bronbro.io/bro_score/?network=${store.currentNetwork}&validator=${props.validator.operator_address}`)\n        .then(res => res.json())\n        .then(response => {\n            store.validatorInfo = response\n\n            // Add blurring\n            store.validatorInfo.schema.push('blurring')\n\n            store.validatorInfo.result.forEach(el => {\n                el.push(el[store.validatorInfo.schema.indexOf('staked')] / el[store.validatorInfo.schema.indexOf('delegator_shares')])\n            })\n        })\n\n\n    // Replacement of the logo if it is not present\n    function imageLoadError(event) {\n        event.target.classList.add('hide')\n\n        event.target.closest('.logo').style.backgroundColor = store.colors[Math.floor((Math.random()*store.colors.length))]\n    }\n\n\n    // Get validator data from shema\n    function getValidatorInfo(columnName) {\n        return store.validatorInfo.schema.indexOf(columnName)\n    }\n</script>\n\n\n<style scoped>\n    .modal_content .data\n    {\n        width: 960px;\n        padding: 24px;\n\n        background: #0d0d0d;\n    }\n\n\n    .modal_content .modal_title\n    {\n        margin-bottom: 40px;\n    }\n\n\n    .data > .row\n    {\n        flex-wrap: nowrap;\n    }\n\n\n    .logo\n    {\n        position: relative;\n\n        display: flex;\n\n        width: 100px;\n        min-width: 100px;\n        height: 100px;\n        padding: 17px;\n\n        border-radius: 50%;\n        background: #fff;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .logo img\n    {\n        display: block;\n\n        max-width: 100%;\n        max-height: 100%;\n\n        border-radius: 50%;\n    }\n\n    .logo img.hide\n    {\n        display: none;\n    }\n\n\n    .logo .icon\n    {\n        display: none;\n\n        width: 48px;\n        height: 48px;\n    }\n\n    .logo img.hide + .icon\n    {\n        display: block;\n    }\n\n\n\n    .power\n    {\n        color: #fff;\n        font-size: 12px;\n        font-weight: 500;\n        line-height: 34px;\n\n        position: absolute;\n        z-index: 3;\n        top: -10px;\n        right: 0;\n\n        display: block;\n\n        width: 34px;\n        height: 34px;\n\n        text-align: center;\n    }\n\n    .power svg\n    {\n        color: #950fff;\n\n        position: absolute;\n        z-index: -1;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n    }\n\n\n\n    .info\n    {\n        width: 100%;\n        margin: 0 0 0 20px;\n    }\n\n\n    .info .name\n    {\n        font-size: 30px;\n        font-weight: 500;\n        line-height: 100%;\n\n        display: flex;\n\n        min-height: 44px;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .info .name > div\n    {\n        max-width: calc(100% - 124px);\n    }\n\n\n    .info .operator_address\n    {\n        margin-top: 14px;\n    }\n\n\n    .info .operator_address .label\n    {\n        font-size: 14px;\n        line-height: 100%;\n\n        margin-bottom: 10px;\n\n        opacity: .4;\n    }\n\n    .info .operator_address .val\n    {\n        font-size: 14px;\n        line-height: 100%;\n\n        overflow: hidden;\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .active_set\n    {\n        line-height: 100%;\n\n        display: flex;\n\n        padding: 10px 14px;\n\n        white-space: nowrap;\n\n        border-radius: 24px;\n        background: #353535;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: nowrap;\n    }\n\n    .active_set.green\n    {\n        padding: 9px 14px 11px;\n\n        opacity: 1;\n        background: #1bc562;\n    }\n\n    .active_set .icon\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n        margin-right: 4px;\n    }\n\n\n\n    .btns\n    {\n        display: flex;\n\n        margin-top: 30px;\n        margin-bottom: -8px;\n        margin-left: -8px;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .btns > *\n    {\n        margin-bottom: 8px;\n        margin-left: 8px;\n    }\n\n\n    .btns .link\n    {\n        color: currentColor;\n        font-size: 14px;\n        line-height: 100%;\n\n        display: flex;\n\n        min-height: 32px;\n        padding: 4px 6px;\n\n        transition: background .2s linear;\n        text-decoration: none;\n\n        border-radius: 10px;\n        background: #191919;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .btns .link .icon\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n        margin-right: 8px;\n    }\n\n    .btns .link img\n    {\n        display: block;\n\n        width: 24px;\n        height: 20px;\n        margin-right: 8px;\n    }\n\n\n    .btns .link:hover\n    {\n        background: #950fff;\n    }\n\n\n\n    .details\n    {\n        margin-top: 30px;\n    }\n\n\n    .details .label\n    {\n        font-size: 14px;\n        line-height: 100%;\n\n        margin-bottom: 8px;\n\n        opacity: .4;\n    }\n\n\n    .details .val\n    {\n        font-size: 14px;\n        line-height: 120%;\n    }\n\n\n\n    .features\n    {\n        margin-top: 30px;\n    }\n\n\n    .features .row\n    {\n        margin-bottom: -24px;\n        margin-left: -24px;\n\n        align-items: stretch;\n        align-content: stretch;\n    }\n\n    .features .row > *\n    {\n        width: calc(20% - 24px);\n        margin-bottom: 24px;\n        margin-left: 24px;\n    }\n\n\n    .features .feature\n    {\n        padding: 10px;\n\n        border-radius: 12px;\n        background: #141414;\n    }\n\n\n    .features .label\n    {\n        line-height: 120%;\n\n        min-height: 52px;\n        margin-bottom: 10px;\n\n        opacity: .4;\n    }\n\n\n    .features .val\n    {\n        font-weight: 500;\n        line-height: 120%;\n\n        white-space: nowrap;\n    }\n</style>\n","import script from \"./ValidatorModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ValidatorModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ValidatorModal.vue?vue&type=style&index=0&id=47ad97eb&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-47ad97eb\"]])\n\nexport default __exports__","<template>\n    <section class=\"validators\">\n        <div class=\"title\">\n            {{ $t('message.account_validators_title') }}\n        </div>\n\n        <div class=\"titles\">\n            <div class=\"col_account_name\">\n                {{ $t('message.account_validators_col_account_name') }}\n            </div>\n\n            <div class=\"col_network\">\n                {{ $t('message.account_validators_col_network') }}\n            </div>\n\n            <div class=\"col_validator\">\n                {{ $t('message.account_validators_col_validator') }}\n            </div>\n\n            <div class=\"col_percent\">\n                {{ $t('message.account_validators_col_account_percent') }}\n            </div>\n\n            <div class=\"col_percent\">\n                {{ $t('message.account_validators_col_passport_percent') }}\n            </div>\n        </div>\n\n        <div class=\"loader_wrap\" v-if=\"loading\">\n            <div class=\"loader\"><span></span></div>\n        </div>\n\n        <div class=\"items\" v-else>\n            <!-- <pre>{{ wallets }}</pre> -->\n\n            <template v-for=\"(wallet, index) in wallets\" :key=\"index\" v-if=\"wallets.length\">\n            <div class=\"item\" :class=\"{ 'hide': index >= 3 && !showAll }\" :style=\"{ order: wallet.totalTokens * -1 }\">\n                <div class=\"col_account_name\">\n                    <span v-if=\"wallet.nickname\">{{ wallet.nickname }}</span>\n                    <span v-else>{{ wallet.address.slice(0, 8) + '...' + wallet.address.slice(-5) }}</span>\n                </div>\n\n                <div class=\"col_network\">\n                    <div class=\"logo\">\n                        <img :src=\"`@/assets/${store.currentNetwork}_logo.png`\" alt=\"\">\n                    </div>\n\n                    <div>{{ store.networks[store.currentNetwork].name }}</div>\n                </div>\n\n                <div class=\"col_validator\" @click.prevent=\"toggleActiveClass\" v-if=\"wallet.validators.length\">\n                    <div class=\"logo\" v-for=\"(validator, validators_index) in wallet.validators\" :key=\"validators_index\">\n                        <img :src=\"validator.mintscan_avatar\" :alt=\"validator.moniker\" @error=\"imageLoadError\">\n                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_user\"></use></svg>\n                    </div>\n\n                    <svg class=\"arr\"><use xlink:href=\"@/assets/sprite.svg#ic_arr_down\"></use></svg>\n                </div>\n\n                <div class=\"col_validator empty\" v-else>\n                    {{ $t('message.account_validators_empty_text') }}\n                </div>\n\n                <div class=\"col_percent\"></div>\n\n                <div class=\"col_percent\">\n                    {{ $filters.toFixed(wallet.totalTokens / totalPassportTokens * 100, 2) }} %\n                </div>\n\n                <div class=\"list\">\n                    <div class=\"item sub_item\" v-for=\"(validator, validators_index) in wallet.validators\" :key=\"validators_index\" :style=\"{ order: validator.coin.amount * -1 }\">\n                        <div class=\"col_account_name\"></div>\n                        <div class=\"col_network\"></div>\n\n                        <div class=\"col_validator\">\n                            <div class=\"logo\">\n                                <img :src=\"validator.mintscan_avatar\" :alt=\"validator.moniker\" @error=\"imageLoadError\">\n                                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_user\"></use></svg>\n                            </div>\n\n                            <div class=\"name\" @click.prevent=\"openValidatorModal(validator)\">\n                                <span>{{ validator.moniker }}</span>\n\n                                <div class=\"tooltip\">\n                                    {{ validator.moniker }}\n                                </div>\n                            </div>\n\n                            <div class=\"amount\">\n                                <span>{{ $filters.toFixed(validator.coin.amount / Math.pow(10, store.networks[store.currentNetwork].exponent), 3) }}</span>\n                                {{ store.networks[store.currentNetwork].token_name }}\n                            </div>\n                        </div>\n\n                        <div class=\"col_percent\">\n                            {{ $filters.toFixed(validator.coin.amount / wallet.totalTokens * 100, 2) }} %\n                        </div>\n\n                        <div class=\"col_percent\">\n                            {{ $filters.toFixed(validator.coin.amount / totalPassportTokens * 100, 2) }} %\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </template>\n\n            <div class=\"empty_text\" v-else>\n                {{ $t('message.account_validators_empty_text') }}\n            </div>\n        </div>\n\n        <button class=\"spoler_btn\" :class=\"{ 'active': showAll }\" @click.prevent=\"showAll = !showAll\" v-if=\"wallets.length > 3\">\n            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_arr_down\"></use></svg>\n        </button>\n\n\n        <!-- Validator modal -->\n        <Suspense>\n        <ValidatorModal v-if=\"showValidatorModal\" :validator=\"validatorInfo\" />\n        </Suspense>\n    </section>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, reactive, ref, inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { generateAddress } from '@/utils'\n\n    // Components\n    import ValidatorModal from '@/components/modal/ValidatorModal.vue'\n\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter'),\n        loading = store.demo ? ref(false) : ref(true),\n        showValidatorModal = ref(false),\n        validatorInfo = ref({})\n\n    var wallets = reactive([]),\n        totalPassportTokens = 0,\n        showAll = ref(false)\n\n\n    onBeforeMount(async () => {\n        // Clear data\n        wallets = reactive([])\n\n        // Get data\n        if(!store.demo) {\n            store.account.currentWallet == 'all'\n                ? await getAllData()\n                : await getAddressData()\n        }\n    })\n\n\n    // Replacement of the logo if it is not present\n    function imageLoadError(event) {\n        event.target.classList.add('hide')\n    }\n\n\n    // Get address data\n    async function getAddressData() {\n        // Set loader\n        loading.value = true\n\n        // Get validators for current wallet\n        try {\n            let currentAddress = generateAddress(store.networks[store.currentNetwork].address_prefix, store.account.currentWallet)\n\n            await fetch(`https://rpc.bronbro.io/account/validators/${currentAddress}`)\n                .then(res => res.json())\n                .then(response => {\n                    if(response.validators.length) {\n                        let totalTokens = 0,\n                            nickname = store.account.wallets.find(wallet => wallet.address == generateAddress('bostrom', currentAddress)).nickname\n\n                        // Calc total totalTokens\n                        response.validators.forEach(validator => totalTokens += validator.coin.amount)\n\n                        // Calc total passport tokens\n                        response.validators.forEach(validator => totalPassportTokens += validator.coin.amount)\n\n                        // Sort and set\n                        wallets.push({\n                            nickname,\n                            address: currentAddress,\n                            totalTokens,\n                            validators: response.validators.sort((a, b) => {\n                                if (a.coin.amount > b.coin.amount) { return 1 }\n                                if (a.coin.amount < b.coin.amount) { return -1 }\n                                return 0\n                            })\n                        })\n                    }\n\n                    // Hide loader\n                    loading.value = false\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    // Get all data\n    async function getAllData() {\n        // Set loader\n        loading.value = true\n\n        // Get validators other wallets\n        store.account.wallets.forEach(async address => {\n            let generatedAddress = generateAddress(store.networks[store.currentNetwork].address_prefix, address.address)\n\n            if(generatedAddress != store.account.moonPassportOwnerAddress && !wallets[generatedAddress]) {\n                try {\n                    await fetch(`https://rpc.bronbro.io/account/validators/${generatedAddress}`)\n                        .then(res => res.json())\n                        .then(response => {\n                            let totalTokens = 0,\n                                nickname = store.account.wallets.find(wallet => wallet.address == generateAddress('bostrom', generatedAddress)).nickname\n\n                            // Calc total total tokens\n                            response.validators.forEach(validator => totalTokens += validator.coin.amount)\n\n                            // Calc total passport tokens\n                            response.validators.forEach(validator => totalPassportTokens += validator.coin.amount)\n\n                            // Sort\n                            wallets.push({\n                                nickname,\n                                address: generatedAddress,\n                                totalTokens,\n                                validators: response.validators.sort((a, b) => {\n                                    if (a.coin.amount > b.coin.amount) { return -1 }\n                                    if (a.coin.amount < b.coin.amount) { return 1 }\n                                    return 0\n                                })\n                            })\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n            }\n        })\n\n        // Hide loader\n        loading.value = false\n    }\n\n\n    // Toggle active class\n    function toggleActiveClass(e) {\n        e.target.closest('.item').classList.toggle('active')\n    }\n\n\n    // Open validator modal\n    function openValidatorModal(validator) {\n        validatorInfo.value = validator\n        showValidatorModal.value = true\n\n        document.body.classList.add('lock')\n    }\n\n\n    // Event \"close validator modal\"\n    emitter.on('closeValidatorModal', () => {\n        showValidatorModal.value = false\n\n        document.body.classList.remove('lock')\n    })\n</script>\n\n\n<style scoped>\n    .validators\n    {\n        position: relative;\n\n        padding: 14px 14px 24px;\n\n        border-radius: 20px;\n        background: #0d0d0d;\n    }\n\n\n    .validators .title\n    {\n        font-size: 30px;\n        font-weight: 600;\n        line-height: 36px;\n\n        margin-bottom: 16px;\n    }\n\n\n    .validators .col_account_name,\n    .validators .col_network\n    {\n        width: 140px;\n        min-width: 140px;\n    }\n\n    .validators .col_validator\n    {\n        width: calc(100% - 464px);\n    }\n\n    .validators .col_percent\n    {\n        width: 92px;\n        min-width: 92px;\n\n        text-align: right;\n    }\n\n\n    .validators .titles\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 17px;\n\n        display: flex;\n\n        margin-bottom: 8px;\n        padding-bottom: 7px;\n\n        border-bottom: 1px solid rgba(255, 255, 255, .05);\n\n        justify-content: space-between;\n        align-items: flex-start;\n        align-content: flex-start;\n        flex-wrap: wrap;\n    }\n\n    .validators .titles > *\n    {\n        padding: 8px;\n    }\n\n\n    .validators .loader_wrap\n    {\n        position: relative;\n\n        height: auto;\n        padding: 20px 0 0;\n\n        background: none;\n    }\n\n\n    .validators .empty_text\n    {\n        color: #555;\n        line-height: 110%;\n\n        margin-top: 20px;\n\n        text-align: center;\n    }\n\n\n    .validators .items\n    {\n        display: flex;\n        flex-direction: column;\n\n        margin: -2px 0 -3px;\n    }\n\n\n    .validators .items .hide\n    {\n        display: none;\n    }\n\n\n    .validators .item\n    {\n        font-size: 14px;\n        font-weight: 500;\n        line-height: 17px;\n\n        position: relative;\n\n        display: flex;\n\n        width: 100%;\n        margin: 2px 0 3px;\n\n        transition: background .2s linear;\n\n        border-radius: 8px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .validators .item:before\n    {\n        position: absolute;\n        bottom: -3px;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 1px;\n\n        content: '';\n        pointer-events: none;\n\n        background: rgba(255, 255, 255, .05);\n    }\n\n    .validators .item > *\n    {\n        display: flex;\n\n        padding: 8px;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: nowrap;\n    }\n\n\n    .validators .item .list\n    {\n        display: flex;\n        flex-direction: column;\n\n        width: 100%;\n        margin-bottom: -3px;\n        padding: 0;\n\n        transition: border-color .2s linear;\n\n        border-top: 1px solid transparent;\n\n        flex-wrap: wrap;\n    }\n\n    .validators .item.active .list\n    {\n        border-color: rgba(255, 255, 255, .05);\n    }\n\n\n    .validators .sub_item\n    {\n        display: none;\n\n        width: 100%;\n        padding: 0;\n\n        border-radius: 0;\n    }\n\n    .validators .sub_item:last-child\n    {\n        border-radius: 0 0 8px 8px;\n    }\n\n\n    .validators .item > *.col_account_name\n    {\n        overflow: hidden;\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .validators .item > *.col_validator\n    {\n        flex-direction: row-reverse;\n\n        cursor: pointer;\n\n        justify-content: flex-end;\n    }\n\n    .validators .item > *.col_validator.empty\n    {\n        color: #555;\n        font-size: 13px;\n        line-height: 17px;\n\n        cursor: default;\n    }\n\n    .validators .sub_item > *.col_validator\n    {\n        flex-direction: row;\n\n        justify-content: flex-start;\n    }\n\n    .validators .sub_item > *.col_validator > *\n    {\n        cursor: default;\n\n        order: 0 !important;\n    }\n\n\n    .validators .item > *.col_percent\n    {\n        justify-content: flex-end;\n    }\n\n\n    .validators .item .logo\n    {\n        position: relative;\n        z-index: 1;\n\n        display: flex;\n        overflow: hidden;\n\n        width: 24px;\n        min-width: 24px;\n        height: 24px;\n\n        border: 1px solid #0d0d0d;\n        border-radius: 50%;\n        background: #282828;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n        order: 2;\n    }\n\n    .validators .item .logo + .logo\n    {\n        z-index: 2;\n\n        margin-right: -6px;\n    }\n\n    .validators .item .col_network .logo + *\n    {\n        width: calc(100% - 32px);\n        margin-left: auto;\n\n        transition: opacity .2s linear;\n        pointer-events: none;\n\n        opacity: 0;\n\n        order: 5;\n    }\n\n    .validators .item .logo img\n    {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: inherit;\n\n        object-fit: cover;\n    }\n\n    .validators .item .logo img.hide\n    {\n        display: none;\n    }\n\n    .validators .item .logo .icon\n    {\n        display: block;\n\n        width: 18px;\n        height: 18px;\n    }\n\n\n    .validators .item .arr\n    {\n        color: #555;\n\n        display: block;\n\n        width: 16px;\n        height: 16px;\n        margin-left: auto;\n\n        transition: transform .2s linear;\n    }\n\n\n    .validators .item .name\n    {\n        position: relative;\n\n        width: calc(100% - 127px);\n        margin-left: auto;\n\n        cursor: pointer;\n        transition: color .2s linear;\n    }\n\n    .validators .item .name span\n    {\n        display: block;\n        overflow: hidden;\n\n        width: 100%;\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n    .validators .item .name:hover\n    {\n        color: #950fff;\n    }\n\n\n    .validators .item .tooltip\n    {\n        color: #fff;\n        font-size: 12px;\n        line-height: 100%;\n\n        position: absolute;\n        z-index: 9;\n        bottom: 100%;\n        left: -8px;\n\n        display: none;\n\n        margin-bottom: 8px;\n        padding: 8px;\n\n        white-space: nowrap;\n\n        border-radius: 8px;\n        background: #282828;\n        box-shadow: 0 6px 12px rgba(0, 0, 0, .2);\n    }\n\n    .validators .item .tooltip:before\n    {\n        position: absolute;\n        top: 100%;\n        right: 0;\n        left: 0;\n\n        display: block;\n\n        width: 29px;\n        height: 7px;\n        margin: 0 auto;\n\n        content: '';\n\n        background: url(@/assets/images/tooltip_tail.svg) 50% 0/100% 100% no-repeat;\n    }\n\n    .validators .item .name:hover .tooltip\n    {\n        display: block;\n    }\n\n\n    .validators .item .amount\n    {\n        color: #555;\n        font-size: 10px;\n        line-height: 12px;\n\n        width: 87px;\n        margin-left: auto;\n\n        text-align: right;\n        white-space: nowrap;\n    }\n\n    .validators .item .amount span\n    {\n        color: #fff;\n    }\n\n\n    .validators .item:hover\n    {\n        background: #191919;\n    }\n\n\n    .validators .item.active .col_network .logo + *\n    {\n        opacity: 1;\n    }\n\n    .validators .item.active .arr\n    {\n        transform: rotate(180deg);\n    }\n\n    .validators .item.active .sub_item\n    {\n        display: flex;\n    }\n\n\n    .validators .spoler_btn\n    {\n        position: absolute;\n        right: 0;\n        bottom: -18px;\n        left: 0;\n\n        display: flex;\n\n        width: 36px;\n        height: 36px;\n        margin: auto;\n\n        transition: background .2s linear;\n\n        border-radius: 50%;\n        background: #141414;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .validators .spoler_btn .icon\n    {\n        display: block;\n\n        width: 20px;\n        height: 20px;\n\n        transition: transform .2s linear;\n    }\n\n\n    .validators .spoler_btn:hover\n    {\n        background: #950fff;\n    }\n\n    .validators .spoler_btn.active .icon\n    {\n        transform: rotate(180deg);\n    }\n\n</style>","import script from \"./Validators.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Validators.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Validators.vue?vue&type=style&index=0&id=00baf386&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-00baf386\"]])\n\nexport default __exports__","<template>\n    <section class=\"proposals\">\n        <div class=\"head\">\n            <div class=\"title\">\n                {{ $t('message.account_proposals_title') }}\n            </div>\n\n            <div class=\"all_link\">\n                <router-link :to=\"`/proposals/${store.currentNetwork}?demo=true`\" class=\"link\" v-if=\"store.demo\">\n                    {{ $t('message.btn_see_more') }} &rarr;\n                </router-link>\n\n                <router-link :to=\"`/proposals/${store.currentNetwork}`\" class=\"link\" v-else>\n                    {{ $t('message.btn_see_more') }} &rarr;\n                </router-link>\n            </div>\n        </div>\n\n        <div class=\"titles\">\n            <div class=\"col_network\">\n                {{ $t('message.account_proposals_col_network') }}\n            </div>\n\n            <div class=\"col_name\">\n                {{ $t('message.account_proposals_col_name') }}\n            </div>\n\n            <div class=\"col_number\"></div>\n\n            <div class=\"col_type\">\n                {{ $t('message.account_proposals_col_type') }}\n            </div>\n\n            <div class=\"col_status\">\n                {{ $t('message.account_proposals_col_status') }}\n            </div>\n        </div>\n\n        <div class=\"loader_wrap\" v-if=\"!loading\">\n            <div class=\"loader\"><span></span></div>\n        </div>\n\n        <div class=\"items\" v-else>\n            <!-- <pre>{{ data.proposals }}</pre> -->\n\n            <template v-for=\"(proposal, index) in proposals\" :key=\"index\">\n            <!-- <router-link :to=\"`/proposal/${proposal.id}`\" class=\"item\" :class=\"{'hide': index >= 5 && !data.showAll}\" v-if=\"proposal.id != '796' || proposal.status != 'PROPOSAL_STATUS_VOTING_PERIOD'\"> -->\n            <router-link :to=\"`/${store.currentNetwork}/proposal/${proposal.id}`\" class=\"item\" :class=\"{ 'hide': index >= 5 && !showAll }\">\n                <div class=\"col_network\">\n                    <template v-if=\"index < 1\">\n                    <div class=\"logo\">\n                        <img :src=\"`/${store.currentNetwork}_logo.png`\" alt=\"\">\n                    </div>\n\n                    <div>{{ store.networks[store.currentNetwork].name }}</div>\n                    </template>\n                </div>\n\n                <div class=\"col_name\">\n                    <div class=\"name\">{{ proposal.title }}</div>\n                </div>\n\n                <div class=\"col_number\">№{{ proposal.id }}</div>\n\n                <div class=\"col_type\">\n                    <svg class=\"icon\"><use :xlink:href=\"`/sprite.svg#ic_proposal_${proposal.proposal_type}`\"></use></svg>\n                </div>\n\n                <div class=\"col_status\">\n                    <span v-if=\"proposal.status == 'PROPOSAL_STATUS_DEPOSIT_PERIOD'\">{{ $t('message.account_proposals_status_deposite') }}</span>\n                    <span v-if=\"proposal.status == 'PROPOSAL_STATUS_VOTING_PERIOD'\" class=\"blue\">{{ $t('message.account_proposals_status_voting') }}</span>\n                    <span v-if=\"proposal.status == 'PROPOSAL_STATUS_PASSED'\" class=\"green\">{{ $t('message.account_proposals_status_passed') }}</span>\n                    <span v-if=\"proposal.status == 'PROPOSAL_STATUS_REJECTED'\" class=\"red\">{{ $t('message.account_proposals_status_rejected') }}</span>\n                </div>\n            </router-link>\n            </template>\n        </div>\n\n        <button class=\"spoler_btn\" :class=\"{ 'active': showAll }\" @click.prevent=\"showAll = !showAll\" v-if=\"proposals.length > 5\">\n            <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_arr_down\"></use></svg>\n        </button>\n    </section>\n</template>\n\n\n<script setup>\n    import { onBeforeMount, ref } from 'vue'\n    import { useGlobalStore } from '@/stores'\n\n\n    const store = useGlobalStore(),\n        loading = ref(false),\n        proposals = ref([]),\n        showAll = ref(false)\n\n\n    onBeforeMount(() => {\n        // Get proposals\n        try {\n            fetch('https://rpc.bronbro.io/gov/proposals')\n                .then(res => res.json())\n                .then(response => {\n                    proposals.value = response.proposals\n\n                    // Hide loader\n                    loading.value = true\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    })\n</script>\n\n\n<style scoped>\n    .proposals\n    {\n        position: relative;\n\n        padding: 14px 14px 24px;\n\n        border-radius: 20px;\n        background: #0d0d0d;\n    }\n\n\n    .proposals .col_network\n    {\n        width: 148px;\n        min-width: 148px;\n    }\n\n    .proposals .col_name\n    {\n        width: 100%;\n    }\n\n    .proposals .col_number\n    {\n        width: 56px;\n        min-width: 56px;\n    }\n\n    .proposals .col_type\n    {\n        width: 52px;\n        min-width: 52px;\n    }\n\n    .proposals .col_status\n    {\n        width: 124px;\n        min-width: 124px;\n    }\n\n\n    .proposals .head\n    {\n        display: flex;\n\n        margin-bottom: 16px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .proposals .title\n    {\n        font-size: 30px;\n        font-weight: 600;\n        line-height: 36px;\n    }\n\n\n    .proposals .all_link\n    {\n        color: #950fff;\n        font-size: 14px;\n        line-height: 100%;\n\n        margin-left: auto;\n    }\n\n\n    .proposals .all_link .link\n    {\n        color: currentColor;\n\n        white-space: nowrap;\n        text-decoration: none;\n    }\n\n\n    .proposals .titles\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 17px;\n\n        display: flex;\n\n        margin-bottom: 8px;\n        padding-bottom: 7px;\n\n        border-bottom: 1px solid rgba(255, 255, 255, .05);\n\n        justify-content: space-between;\n        align-items: flex-start;\n        align-content: flex-start;\n        flex-wrap: nowrap;\n    }\n\n    .proposals .titles > *\n    {\n        padding: 8px 10px;\n    }\n\n\n    .proposals .loader_wrap\n    {\n        position: relative;\n\n        height: auto;\n        padding: 20px 0 0;\n\n        background: none;\n    }\n\n\n    .proposals .items > * + *\n    {\n        margin-top: 5px;\n    }\n\n    .proposals .items > * + *:before\n    {\n        position: absolute;\n        top: -3px;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 1px;\n\n        content: '';\n        pointer-events: none;\n\n        background: rgba(255, 255, 255, .05);\n    }\n\n\n    .proposals .item\n    {\n        color: currentColor;\n        font-size: 14px;\n        font-weight: 500;\n        line-height: 20px;\n\n        position: relative;\n\n        display: flex;\n\n        transition: background .2s linear;\n        text-decoration: none;\n\n        border-radius: 8px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: nowrap;\n    }\n\n    .proposals .item.hide\n    {\n        display: none;\n    }\n\n    .proposals .item > *\n    {\n        display: flex;\n\n        padding: 8px 10px;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: nowrap;\n    }\n\n\n    .proposals .item .logo\n    {\n        position: relative;\n\n        overflow: hidden;\n\n        width: 24px;\n        height: 24px;\n        margin-right: 8px;\n\n        border-radius: 50%;\n    }\n\n    .proposals .item .logo img\n    {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: inherit;\n\n        object-fit: cover;\n    }\n\n    .proposals .item .logo + *\n    {\n        width: calc(100% - 32px);\n    }\n\n\n    .proposals .item .name\n    {\n        overflow: hidden;\n\n        width: 100%;\n\n        text-overflow: ellipsis;\n    }\n\n\n    .proposals .item .col_number\n    {\n        color: #484747;\n        font-size: 12px;\n        font-weight: 500;\n        line-height: 15px;\n\n        transition: color .2s linear;\n        white-space: nowrap;\n    }\n\n\n    .proposals .item .col_type .icon\n    {\n        color: #950fff;\n\n        display: block;\n\n        width: 20px;\n        height: 20px;\n\n        transition: color .2s linear;\n    }\n\n\n    .proposals .item .col_status > *\n    {\n        color: #950fff;\n\n        transition: color .2s linear;\n    }\n\n    .proposals .item .col_status .blue\n    {\n        color: #0343e8;\n    }\n\n    .proposals .item .col_status .green\n    {\n        color: #1bc562;\n    }\n\n    .proposals .item .col_status .red\n    {\n        color: #eb5757;\n    }\n\n\n    .proposals .item:hover\n    {\n        background: #191919;\n    }\n\n    .proposals .item:hover .col_number,\n    .proposals .item:hover .col_type .icon,\n    .proposals .item:hover .col_status > *\n    {\n        color: #fff !important;\n    }\n\n\n    .proposals .spoler_btn\n    {\n        position: absolute;\n        right: 0;\n        bottom: -18px;\n        left: 0;\n\n        display: flex;\n\n        width: 36px;\n        height: 36px;\n        margin: auto;\n\n        transition: background .2s linear;\n\n        border-radius: 50%;\n        background: #141414;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .proposals .spoler_btn .icon\n    {\n        display: block;\n\n        width: 20px;\n        height: 20px;\n\n        transition: transform .2s linear;\n    }\n\n    .proposals .spoler_btn:hover\n    {\n        background: #950fff;\n    }\n\n    .proposals .spoler_btn.active .icon\n    {\n        transform: rotate(180deg);\n    }\n\n</style>","import script from \"./Proposals.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Proposals.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Proposals.vue?vue&type=style&index=0&id=f2f33dce&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-f2f33dce\"]])\n\nexport default __exports__","<template>\n    <section class=\"modal\" id=\"add_address_modal\">\n        <div class=\"modal_content\">\n            <div class=\"data\">\n                <button class=\"close_btn\" @click.prevent=\"emitter.emit('closeAddAddressModal')\">\n                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n                </button>\n\n                <template v-if=\"!store.demo && duplicateError || !store.demo && store.account.moonPassport && activeStep == 1\">\n                <div class=\"error\">\n                    <div class=\"title\">\n                        {{ $t('message.add_address_modal_title') }}\n                    </div>\n\n                    <img src=\"@/assets/images/add_address_different_account.svg\" alt=\"\">\n\n                    <div class=\"desc\">\n                        <span v-if=\"!duplicateError && !hasPassportError\">{{ $t('message.add_address_modal_error_desc') }}</span>\n\n                        <span v-if=\"duplicateError && !hasPassportError\">{{ $t('message.add_address_modal_error_desc2') }}</span>\n\n                        <span v-if=\"hasPassportError\">{{ $t('message.add_address_modal_error_desc3') }}</span>\n                    </div>\n\n                    <button class=\"btn\" v-if=\"hasPassportError\" @click.prevent=\"reloadPage()\">\n                        {{ $t('message.btn_use_new_passport') }}\n                    </button>\n\n                    <div class=\"loader_wrap\" v-if=\"loading\">\n                        <div class=\"loader\"><span></span></div>\n                    </div>\n                </div>\n                </template>\n\n\n                <template v-else>\n                <div class=\"steps\">\n                    <div class=\"title\">\n                        {{ $t('message.add_address_modal_title') }}\n                    </div>\n\n                    <div class=\"names\">\n                        <div :class=\"{'active': activeStep == 1, 'completed': activeStep > 1, 'disabled': activeStep == 5}\" @click.prevent=\"activeStep = 1\">\n                            <span>{{ $t('message.add_address_modal_step1_name') }}</span>\n                            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                        </div>\n\n                        <div :class=\"{'active': activeStep == 2, 'completed': activeStep > 2, 'disabled': activeStep == 5}\">\n                            <span>{{ $t('message.add_address_modal_step2_name') }}</span>\n                            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                        </div>\n\n                        <div :class=\"{'active': activeStep == 3, 'completed': activeStep > 3, 'disabled': activeStep == 5}\" @click.prevent=\"activeStep = 3\">\n                            <span>{{ $t('message.add_address_modal_step3_name') }}</span>\n                            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                        </div>\n\n                        <div :class=\"{'active': activeStep == 4, 'completed': activeStep > 4, 'disabled': activeStep == 5}\" @click.prevent=\"activeStep = 4\">\n                            <span>{{ $t('message.add_address_modal_step4_name') }}</span>\n                            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                        </div>\n                    </div>\n\n\n                    <div class=\"step step1\" v-if=\"activeStep == 1\">\n                        <div class=\"title\">\n                            {{ $t('message.add_address_modal_step1_title') }}\n                        </div>\n\n                        <div class=\"current_account\" :class=\"{'editing': editForm, 'error': !tempAddressName.length}\">\n                            <div class=\"logo\">\n                                <img :src=\"`/${addedNetwork}_logo.png`\" alt=\"\" v-if=\"!duplicate\">\n                                <svg class=\"icon\" v-else><use xlink:href=\"@/assets/sprite.svg#ic_duplicate\"></use></svg>\n                            </div>\n\n                            <div>\n                                <div class=\"name\" :class=\"{'error': duplicate}\">\n                                    <template v-if=\"tempAddressName.length\">{{ tempAddressName }}</template>\n                                    <template v-else>{{ store.account.userName }}</template>\n\n                                    <span v-if=\"duplicate\">{{ $t('message.add_address_duplicated_label') }}</span>\n                                </div>\n\n                                <form class=\"edit_name_form\" @submit.prevent=\"hideEditForm\">\n                                    <input type=\"text\" v-model=\"tempAddressName\" class=\"input\" id=\"temp_name\" maxlength=\"16\">\n\n                                    <button type=\"submit\" class=\"submit_btn\">\n                                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                                    </button>\n\n                                    <button type=\"button\" class=\"cancel_btn\" @click.prevent=\"cancelEditForm\">\n                                        <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n                                    </button>\n                                </form>\n\n                                <div class=\"address\">\n                                    <template v-if=\"addedNetwork == 'evmos'\">\n                                    {{ store.wallets.evmos.slice(0, 13) + '...' + store.wallets.evmos.slice(-6) }}\n                                    </template>\n\n                                    <template v-else-if=\"addedNetwork == 'desmos'\">\n                                    {{ store.wallets.desmos.slice(0, 13) + '...' + store.wallets.desmos.slice(-6) }}\n                                    </template>\n\n                                    <template v-else>\n                                    {{ generateAddress(store.networks[addedNetwork].address_prefix, store.Keplr.account.address).slice(0, 13) + '...' + generateAddress(store.networks[addedNetwork].address_prefix, store.Keplr.account.address).slice(-6) }}\n                                    </template>\n                                </div>\n\n                                <button class=\"edit_btn\" @click.prevent=\"showEditForm\">\n                                    <svg><use xlink:href=\"@/assets/sprite.svg#ic_edit\"></use></svg>\n                                </button>\n                            </div>\n                        </div>\n\n                        <div class=\"networks\">\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'cosmoshub', 'added': checkAddress('cosmos')}\" @click.prevent=\"selectNetwork('cosmoshub')\">\n                                <div class=\"logo\">\n                                    <img src=\"/cosmoshub_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.cosmoshub.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">\n                                    {{ $t('message.add_address_added_label') }}\n                                </div>\n                            </button></div>\n\n                            <!-- <div><button class=\"network\" :class=\"{'active': addedNetwork == 'desmos'}\" @click.prevent=\"selectNetwork('desmos')\">\n                                <div class=\"logo\">\n                                    <img src=\"/desmos_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.desmos.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">{{ $t('message.add_address_added_label') }}</div>\n                            </button></div> -->\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'juno', 'added': checkAddress('juno')}\" @click.prevent=\"selectNetwork('juno')\">\n                                <div class=\"logo\">\n                                    <img src=\"/juno_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.juno.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">\n                                    {{ $t('message.add_address_added_label') }}\n                                </div>\n                            </button></div>\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'stargaze', 'added': checkAddress('stars')}\" @click.prevent=\"selectNetwork('stargaze')\">\n                                <div class=\"logo\">\n                                    <img src=\"/stargaze_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.stargaze.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">\n                                    {{ $t('message.add_address_added_label') }}\n                                </div>\n                            </button></div>\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'gravity', 'added': checkAddress('gravity')}\" @click.prevent=\"selectNetwork('gravity')\">\n                                <div class=\"logo\">\n                                    <img src=\"/gravity_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.gravity.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">\n                                    {{ $t('message.add_address_added_label') }}\n                                </div>\n                            </button></div>\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'stride', 'added': checkAddress('stride')}\" @click.prevent=\"selectNetwork('stride')\">\n                                <div class=\"logo\">\n                                    <img src=\"/stride_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.stride.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">\n                                    {{ $t('message.add_address_added_label') }}\n                                </div>\n                            </button></div>\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'omniflix', 'added': checkAddress('omniflix')}\" @click.prevent=\"selectNetwork('omniflix')\">\n                                <div class=\"logo\">\n                                    <img src=\"/omniflix_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.omniflix.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">\n                                    {{ $t('message.add_address_added_label') }}\n                                </div>\n                            </button></div>\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'osmosis', 'added': checkAddress('osmo')}\" @click.prevent=\"selectNetwork('osmosis')\">\n                                <div class=\"logo\">\n                                    <img src=\"/osmosis_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.osmosis.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">\n                                    {{ $t('message.add_address_added_label') }}\n                                </div>\n                            </button></div>\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'bostrom', 'added': checkAddress('bostrom')}\" @click.prevent=\"selectNetwork('bostrom')\">\n                                <div class=\"logo\">\n                                    <img src=\"/bostrom_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.bostrom.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">\n                                    {{ $t('message.add_address_added_label') }}\n                                </div>\n                            </button></div>\n\n                            <div><button class=\"network\" :class=\"{'active': addedNetwork == 'crescent', 'added': checkAddress('cre')}\" @click.prevent=\"selectNetwork('crescent')\">\n                                <div class=\"logo\">\n                                    <img src=\"/crescent_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.crescent.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">\n                                    {{ $t('message.add_address_added_label') }}\n                                </div>\n                            </button></div>\n\n                            <!-- <div><button class=\"network\" :class=\"{'active': addedNetwork == 'emoney', 'added': checkAddress('emoney')}\" @click.prevent=\"selectNetwork('emoney')\">\n                                <div class=\"logo\">\n                                    <img src=\"/emoney_logo.png\" alt=\"\">\n                                </div>\n\n                                <div>{{ store.networks.emoney.name }}</div>\n\n                                <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n\n                                <div class=\"added_label\">\n                                    {{ $t('message.add_address_added_label') }}\n                                </div>\n                            </button></div> -->\n                        </div>\n\n                        <button class=\"btn\" :class=\"{'disabled': duplicate}\" @click.prevent=\"setActiveKeplrAddress\">\n                            {{ $t('message.btn_next') }}\n                        </button>\n                    </div>\n\n\n                    <div class=\"step step2\" v-if=\"activeStep == 2\">\n                        <div class=\"title\">\n                            {{ $t('message.add_address_modal_step2_title') }}\n                        </div>\n\n                        <img src=\"@/assets/images/add_address_step2.svg\" alt=\"\" class=\"img\">\n\n                        <button class=\"btn\" @click.prevent=\"createSignature\">\n                            {{ $t('message.btn_sign') }}\n                        </button>\n                    </div>\n\n\n                    <div class=\"step step3\" v-if=\"activeStep == 3\">\n                        <div class=\"title\">\n                            {{ $t('message.add_address_modal_step3_title') }}\n                        </div>\n\n                        <img src=\"@/assets/images/add_address_step3.svg\" alt=\"\" class=\"img\">\n\n                        <button class=\"btn\" :class=\"{'disabled': !store.demo && !ownerAccount}\" @click.prevent=\"activeStep += 1\">\n                            {{ $t('message.btn_next') }}\n                        </button>\n\n                        <div class=\"loader_wrap\" v-if=\"loading\">\n                            <div class=\"loader\"><span></span></div>\n                        </div>\n                    </div>\n\n\n                    <div class=\"step step4\" v-if=\"activeStep == 4\">\n                        <div class=\"title\">\n                            {{ $t('message.add_address_modal_step4_title') }}\n                        </div>\n\n                        <img src=\"@/assets/images/add_address_step4.svg\" alt=\"\" class=\"img\">\n\n                        <button class=\"btn\" @click.prevent=\"addAddress\">\n                            {{ $t('message.btn_sing_broadcast') }}\n                        </button>\n\n                        <div class=\"loader_wrap\" v-if=\"loading\">\n                            <div class=\"loader\"><span></span></div>\n                        </div>\n                    </div>\n\n\n                    <div class=\"step step5\" v-if=\"activeStep == 5\">\n                        <div class=\"title\">\n                            {{ $t('message.add_address_modal_step5_title') }}\n                        </div>\n\n                        <img src=\"@/assets/images/add_address_step5.svg\" alt=\"\" class=\"img\">\n\n                        <button class=\"btn\" @click.prevent=\"emitter.emit('closeAddAddressModal')\">\n                            {{ $t('message.btn_done') }}\n                        </button>\n                    </div>\n                </div>\n                </template>\n            </div>\n        </div>\n\n        <div class=\"overlay\"></div>\n    </section>\n</template>\n\n\n<script setup>\n    import { ref, inject, onBeforeMount, watchEffect } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { useNotification } from '@kyvg/vue3-notification'\n    import { preparePassportTx, sendTx, generateAddress } from '@/utils'\n    import { toAscii, toBase64 } from '@cosmjs/encoding'\n\n    const store = useGlobalStore(),\n        i18n = inject('i18n'),\n        notification = useNotification(),\n        emitter = inject('emitter'),\n        activeStep = ref(1),\n        activeKeplrAddress = ref(store.Keplr.account.address),\n        addedNetwork = ref(),\n        addedAddress = ref(''),\n        ownerAccount = ref(false),\n        loading = ref(false),\n        signature = store.demo ? 'demo:signature' : ref(''),\n        duplicate = ref(false),\n        editForm = ref(false),\n        duplicateError = ref(false),\n        hasPassportError = ref(false),\n        tempAddressName = ref('')\n\n\n    onBeforeMount(() => {\n        // Select network\n        selectNetwork('cosmoshub')\n    })\n\n\n    watchEffect(() => {\n        // Set tooltip\n        if(activeStep.value == 0) {\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_step1')\n        }\n\n        if(activeStep.value == 1) {\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_step2')\n        }\n\n        if(activeStep.value == 2) {\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_step3')\n        }\n\n        if(activeStep.value == 3) {\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_step4')\n        }\n\n        if(activeStep.value == 4) {\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_step5')\n        }\n\n        if(activeStep.value == 5) {\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_success')\n        }\n    })\n\n\n    // Checking if the address was previously added\n    function checkAddress(prefix) {\n        if(store.account.moonPassportOwner.extension.addresses) {\n            let addresses = []\n\n            store.account.moonPassportOwner.extension.addresses.forEach(el => {\n                addresses.push(el.address)\n            })\n\n            return addresses.includes(generateAddress(prefix, store.Keplr.account.address))\n        }\n    }\n\n    // Checking if the wallet was previously added\n    function checkAllAddress() {\n        if(store.account.moonPassportOwner.extension.addresses) {\n            let addresses = []\n\n            store.account.moonPassportOwner.extension.addresses.forEach(el => {\n                addresses.push(generateAddress(store.networks.cosmoshub.address_prefix, el.address))\n            })\n\n            return addresses.includes(store.Keplr.account.address)\n        }\n    }\n\n\n    // Select network\n    async function selectNetwork(network) {\n        addedNetwork.value = network\n\n        // Checking if the address was previously added\n        let result = checkAddress(store.networks[network].address_prefix)\n\n        if(result) {\n            duplicate.value = true\n\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_step2_error')\n        } else {\n            duplicate.value = false\n\n            // Set notification\n            store.tooltip = i18n.global.t('message.notice_add_address_step2')\n        }\n\n        // Set new singer\n        if (!store.demo) {\n            await setNewSinger()\n        }\n    }\n\n\n    // Show edit form\n    function showEditForm() {\n        editForm.value = true\n\n        // Focus on input\n        setTimeout(() => document.getElementById('temp_name').focus())\n    }\n\n\n    // Hide edit form\n    function hideEditForm() {\n        editForm.value = false\n    }\n\n\n    // Cancel edit form\n    function cancelEditForm() {\n        hideEditForm()\n\n        // Set default name\n        tempAddressName.value = ''\n    }\n\n\n    // Set active Keplr address\n    async function setActiveKeplrAddress() {\n        activeKeplrAddress.value = store.Keplr.account.address\n\n        // Confirm address label\n        if(!tempAddressName.value.length) {\n            tempAddressName.value = store.account.userName\n        }\n\n        // Set new singer\n        if (!store.demo) {\n            await setNewSinger()\n        }\n\n        // Go to next step\n        activeStep.value += 1\n    }\n\n\n    // Set new singer\n    async function setNewSinger() {\n        await window.keplr.enable(store.networks[addedNetwork.value].chainId)\n\n        let offlineSigner = await window.getOfflineSignerAuto(store.networks[addedNetwork.value].chainId),\n            accounts = await offlineSigner.getAccounts()\n\n        addedAddress.value = accounts[0].address\n    }\n\n\n    // Create signature\n    async function createSignature() {\n        if (!store.demo) {\n            try {\n                let res = await window.keplr.signArbitrary(\n                    store.networks[addedNetwork.value].chainId,\n                    addedAddress.value,\n                    `${store.account.moonPassportOwnerAddress}:${store.CONSTITUTION_HASH}`\n                )\n\n                signature.value = toBase64(toAscii(JSON.stringify({\n                    pub_key: res.pub_key.value,\n                    signature: res.signature\n                })))\n\n                // Show notification\n                notification.notify({\n                    group: 'default',\n                    title: i18n.global.t('message.notification_passport_signature'),\n                    type: 'success'\n                })\n\n                // Hide loader\n                loading.value = false\n\n                // Go to next step\n                activeStep.value += 1\n            } catch (error) {\n                console.log(error)\n            }\n        } else {\n            // Show notification\n            notification.notify({\n                group: 'default',\n                title: i18n.global.t('message.notification_passport_signature'),\n                type: 'success'\n            })\n\n            // Hide loader\n            loading.value = false\n\n            // Go to next step\n            activeStep.value += 1\n        }\n    }\n\n\n    // Reload page\n    function reloadPage() {\n        store.needReload = true\n\n        emitter.emit('closeAddAddressModal')\n    }\n\n\n    // Sign a nd broadcast\n    async function addAddress() {\n        // Show loader\n        loading.value = true\n\n        // Show notification\n        notification.notify({\n            group: 'default',\n            duration: -100,\n            title: i18n.global.t('message.notification_address_adding_process')\n        })\n\n        try{\n            if (!store.demo) {\n                // Prepare Tx\n                var prepareResult = await preparePassportTx([\n                    {\n                        proof_address: {\n                            address: addedAddress.value,\n                            nickname: store.account.moonPassportOwner.extension.nickname,\n                            signature: signature.value\n                        }\n                    },\n                    {\n                        set_address_label: {\n                            address: addedAddress.value,\n                            label: tempAddressName.value,\n                            nickname: store.account.moonPassportOwner.extension.nickname\n                        }\n                    }\n                ])\n\n                // Send Tx\n                var result = await sendTx(prepareResult)\n            } else {\n                var result = { code: 0 }\n            }\n\n            if (result.code === 0) {\n                // Set TXS\n                store.lastTXS = result.transactionHash\n\n                // Show notification\n                notification.notify({\n                    group: 'default',\n                    clean: true\n                })\n\n                notification.notify({\n                    group: 'default',\n                    title: i18n.global.t('message.notification_success_address_added_title'),\n                    type: 'success',\n                    data: {\n                        chain: 'bostrom',\n                        tx_type: i18n.global.t('message.notification_action_address_add')\n                    }\n                })\n\n                // Hide loader\n                loading.value = false\n\n                // Go to next step\n                activeStep.value += 1\n\n                // Need reload page\n                store.needReload = true\n            }\n\n            if (result.code) {\n                // Show notification\n                notification.notify({\n                    group: 'default',\n                    clean: true\n                })\n\n                notification.notify({\n                    group: 'default',\n                    title: i18n.global.t('message.notification_failed_title'),\n                    text: i18n.global.t('message.notification_tx_error_rejected'),\n                    type: 'error',\n                    data: {\n                        chain: 'passport',\n                        tx_type: i18n.global.t('message.notification_action_address_add')\n                    }\n                })\n\n                // Hide loader\n                loading.value = false\n            }\n        } catch (error) {\n            console.log(error)\n\n            // Show notification\n            notification.notify({\n                group: 'default',\n                clean: true\n            })\n\n            notification.notify({\n                group: 'default',\n                title: i18n.global.t('message.notification_failed_title'),\n                text: i18n.global.t('message.notification_tx_error_rejected'),\n                type: 'error',\n                data: {\n                    chain: 'passport',\n                    tx_type: i18n.global.t('message.notification_action_address_add')\n                }\n            })\n\n            // Hide loader\n            loading.value = false\n        }\n    }\n\n\n    // Change Keplr account\n    if (!store.demo) {\n        window.addEventListener('keplr_keystorechange', async () => {\n            // Check account\n            if(store.showAddAddressModal) {\n                // Show loader\n                loading.value = true\n\n                // Set condition\n                ownerAccount.value = false\n\n                // New keplr connect\n                await store.connectWallet(false, false)\n\n                // Step 0 and Step 2\n                if (activeStep.value == 1 || activeStep.value == 2) {\n                    if(store.account.moonPassport) {\n                        // Hide loader\n                        loading.value = false\n\n                        // Go to zero step\n                        activeStep.value = 1\n\n                        // Has passport error\n                        hasPassportError.value = true\n                    }\n\n                    // Check duplicate\n                    if(checkAllAddress()) {\n                        // Hide loader\n                        loading.value = false\n\n                        // Go to zero step\n                        activeStep.value = 1\n\n                        // Duplicate error\n                        duplicateError.value = true\n                    }\n                }\n\n                // Step 3\n                if (activeStep.value == 3) {\n                    if(store.wallets.bostrom == store.account.moonPassportOwnerAddress) {\n                        // Set condition\n                        ownerAccount.value = true\n\n                        // Go to next step\n                        activeStep.value += 1\n                    }\n\n                    // Hide loader\n                    loading.value = false\n                }\n\n                // Step 4\n                if (activeStep.value == 4) {\n                    if(store.wallets.bostrom != store.account.moonPassportOwnerAddress) {\n                        // Go to next step\n                        activeStep.value -= 1\n                    }\n\n                    // Hide loader\n                    loading.value = false\n                }\n            }\n        })\n    }\n</script>\n\n\n<style scoped>\n    .loader_wrap\n    {\n        border-radius: 36px;\n    }\n\n\n\n    .title\n    {\n        line-height: 36px;\n\n        margin-bottom: 8px;\n        padding: 4px 60px 4px 0;\n    }\n\n\n\n    .error img\n    {\n        display: block;\n\n        width: 180px;\n        max-width: 100%;\n        margin: 0 auto 24px;\n    }\n\n\n    .error .desc\n    {\n        font-size: 24px;\n        font-weight: 500;\n        line-height: 110%;\n\n        text-align: center;\n    }\n\n\n    .error .btn\n    {\n        color: #fff;\n        font-weight: 500;\n        line-height: 19px;\n\n        width: 200px;\n        max-width: 100%;\n        margin: 16px auto 0;\n\n        border-radius: 14px;\n        background: #950fff;\n    }\n\n\n\n    .names\n    {\n        display: flex;\n\n        margin-bottom: 24px;\n\n        justify-content: flex-start;\n        align-items: stretch;\n        align-content: stretch;\n        flex-wrap: nowrap;\n    }\n\n\n    .names > *\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 100%;\n\n        display: flex;\n\n        width: 100%;\n        padding: 10px 0;\n\n        transition: .2s linear;\n        pointer-events: none;\n\n        border-bottom: 1px solid rgba(255, 255, 255, .1);\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .names > * + *\n    {\n        margin-left: 4px;\n    }\n\n\n    .names span\n    {\n        width: calc(100% - 24px);\n    }\n\n\n    .names .icon\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n        margin-left: auto;\n\n        transition: opacity .2s linear;\n\n        opacity: 0;\n    }\n\n\n    .names > *.active,\n    .names > *.completed\n    {\n        color: #950fff;\n\n        cursor: pointer;\n        pointer-events: auto;\n\n        border-color: #950fff;\n    }\n\n    .names > *.disabled\n    {\n        pointer-events: none;\n    }\n\n    .names > *.completed .icon\n    {\n        opacity: 1;\n    }\n\n\n\n    .step .title\n    {\n        font-size: 24px;\n        line-height: 110%;\n\n        margin-bottom: 8px;\n        padding: 0;\n    }\n\n\n    .step .desc\n    {\n        color: #555;\n        line-height: 110%;\n    }\n\n\n    .step .img\n    {\n        display: block;\n\n        height: 150px;\n        margin: 24px auto 0;\n    }\n\n\n    .step1 .current_account\n    {\n        position: relative;\n\n        display: flex;\n\n        margin-top: 16px;\n        padding: 11px 9px;\n\n        transition: border-color .2s linear;\n\n        border: 1px solid transparent;\n        border-radius: 12px;\n        background: #191919;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .step1 .current_account .logo\n    {\n        width: 24px;\n        height: 24px;\n\n        border-radius: 50%;\n    }\n\n    .step1 .current_account .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n    .step1 .current_account .logo + *\n    {\n        width: calc(100% - 32px);\n        margin-left: auto;\n    }\n\n\n    .step1 .current_account .logo .icon\n    {\n        color: #eb5757;\n\n        display: block;\n\n        width: 24px;\n        height: 24px;\n    }\n\n\n    .step1 .current_account .name\n    {\n        font-weight: 500;\n        line-height: 100%;\n\n        display: flex;\n\n        padding-right: 40px;\n\n        transition: color .2s linear;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: nowrap;\n    }\n\n    .step1 .current_account .name.error\n    {\n        color: #eb5757;\n    }\n\n    .step1 .current_account .name span\n    {\n        color: #555;\n        font-size: 14px;\n        font-weight: 400;\n\n        margin-left: 8px;\n    }\n\n\n    .step1 .current_account .edit_name_form\n    {\n        position: relative;\n\n        display: none;\n\n        width: 100%;\n    }\n\n\n    .step1 .current_account .edit_name_form .input\n    {\n        color: var(--text_color);\n        font-family: var(--font-family);\n        font-size: var(--font_size);\n        font-weight: 500;\n\n        display: block;\n\n        width: 100%;\n        height: 16px;\n        padding-right: 60px;\n\n        border: none;\n        background: none;\n    }\n\n\n    .step1 .current_account .edit_name_form .submit_btn\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 30px;\n        bottom: 0;\n\n        display: flex;\n\n        width: 16px;\n        height: 16px;\n        margin: auto;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .step1 .current_account .edit_name_form .submit_btn .icon\n    {\n        display: block;\n\n        width: 16px;\n        height: 16px;\n    }\n\n\n    .step1 .current_account .edit_name_form .cancel_btn\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 10px;\n        bottom: 0;\n\n        display: flex;\n\n        width: 16px;\n        height: 16px;\n        margin: auto;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .step1 .current_account .edit_name_form .cancel_btn .icon\n    {\n        display: block;\n\n        width: 16px;\n        height: 16px;\n    }\n\n\n    .step1 .current_account .address\n    {\n        color: #555;\n        font-size: 14px;\n        line-height: 16px;\n\n        overflow: hidden;\n\n        margin-top: 6px;\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .step1 .current_account .edit_btn\n    {\n        color: #555;\n\n        position: absolute;\n        top: 12px;\n        right: 10px;\n\n        display: flex;\n\n        width: 16px;\n        height: 16px;\n\n        transition: color .2s linear;\n        pointer-events: auto;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .step1 .current_account .edit_btn svg\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n    }\n\n    .step1 .current_account .edit_btn:hover\n    {\n        color: #fff;\n    }\n\n\n\n    .step1 .current_account.editing\n    {\n        border-color: #950fff;\n    }\n\n    .step1 .current_account.editing.error\n    {\n        border: 1px solid #eb5757;\n        background: rgba(235, 87, 87, .1);\n    }\n\n    .step1 .current_account.editing .name,\n    .step1 .current_account.editing .edit_btn\n    {\n        display: none;\n    }\n\n    .step1 .current_account.editing .edit_name_form\n    {\n        display: block;\n    }\n\n\n    .step1 .networks\n    {\n        display: flex;\n\n        margin-top: 24px;\n        margin-bottom: -8px;\n        margin-left: -8px;\n\n        justify-content: flex-start;\n        align-items: stretch;\n        align-content: stretch;\n        flex-wrap: wrap;\n    }\n\n    .step1 .networks > *\n    {\n        width: calc(50% - 8px);\n        margin-bottom: 8px;\n        margin-left: 8px;\n    }\n\n\n    .step1 .networks .network\n    {\n        font-size: 14px;\n        line-height: 100%;\n\n        display: flex;\n\n        width: 100%;\n        padding: 7px;\n\n        transition: .2s linear;\n        text-align: left;\n\n        border: 1px solid transparent;\n        border-radius: 8px;\n        background: #191919;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: nowrap;\n    }\n\n\n    .step1 .networks .logo\n    {\n        width: 24px;\n        min-width: 24px;\n        height: 24px;\n\n        border-radius: 50%;\n    }\n\n    .step1 .networks .logo img\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n\n        border-radius: 50%;\n\n        object-fit: cover;\n    }\n\n    .step1 .networks .logo + *\n    {\n        width: 100%;\n        margin-left: 8px;\n    }\n\n\n    .step1 .networks .icon\n    {\n        color: #950fff;\n\n        display: block;\n\n        width: 16px;\n        min-width: 16px;\n        height: 16px;\n        margin-left: 8px;\n\n        transition: opacity .2s linear;\n\n        opacity: 0;\n    }\n\n\n    .step1 .networks .added_label\n    {\n        font-size: 12px;\n        line-height: 100%;\n\n        display: none;\n\n        margin-left: 8px;\n\n        white-space: nowrap;\n\n        opacity: .5;\n    }\n\n    .step1 .networks .network.added:not(.active) .added_label\n    {\n        display: block;\n    }\n\n\n    .step1 .networks .network:hover,\n    .step1 .networks .network.active\n    {\n        background: #212121;\n    }\n\n    .step1 .networks .network.active .icon\n    {\n        opacity: 1;\n    }\n\n\n    .step1 .networks .network.added\n    {\n        border-color: #950fff;\n        background: rgba(149, 15, 255, .1);\n    }\n\n    .step1 .networks .network.added .icon\n    {\n        display: none;\n    }\n\n\n    .step1 .networks .network.added.active\n    {\n        border: 1px solid #eb5757;\n        background: rgba(235, 87, 87, .1);\n    }\n\n    .step1 .networks .network.added.active .icon\n    {\n        color: #fff;\n\n        display: block;\n    }\n\n\n\n    .btn\n    {\n        font-weight: 500;\n        line-height: 100%;\n\n        display: block;\n\n        width: 100%;\n        height: 46px;\n        margin-top: 24px;\n        padding: 15px;\n\n        transition: background .2s linear;\n\n        border-radius: 12px;\n        background: #950fff;\n    }\n\n    .btn.disabled\n    {\n        pointer-events: none;\n\n        background: #353535;\n    }\n\n    .btn:hover\n    {\n        background: #7700e1;\n    }\n\n</style>","import script from \"./AddAddressModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddAddressModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AddAddressModal.vue?vue&type=style&index=0&id=1974a026&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1974a026\"]])\n\nexport default __exports__","<template>\n    <section class=\"modal\" id=\"add_address_modal\">\n        <div class=\"modal_content\" @click.self=\"emitter.emit('closeDeleteAddressModal')\">\n            <div class=\"data\">\n                <button class=\"close_btn\" @click.prevent=\"emitter.emit('closeDeleteAddressModal')\">\n                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n                </button>\n\n                <div class=\"image\">\n                    <img src=\"@/assets/images/confirm_delete.svg\" alt=\"\">\n                </div>\n\n                <div class=\"title\">Do you want to delete your adress?</div>\n\n                <div class=\"btns\">\n                    <button class=\"btn no_btn\" @click.prevent=\"emitter.emit('closeDeleteAddressModal')\">\n                        {{ $t('message.btn_no') }}\n                    </button>\n\n                    <button class=\"btn yes_btn\" @click.prevent=\"deleteAddress()\">\n                        {{ $t('message.btn_yes') }}\n                    </button>\n                </div>\n\n                <div class=\"loader_wrap\" v-if=\"loading\">\n                    <div class=\"loader\"><span></span></div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"overlay\" @click.prevent=\"emitter.emit('closeDeleteAddressModal')\"></div>\n    </section>\n</template>\n\n\n<script setup>\n    import { inject, ref } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { useNotification } from '@kyvg/vue3-notification'\n    import { preparePassportTx, sendTx } from '@/utils'\n\n\n    const emitter = inject('emitter'),\n        i18n = inject('i18n'),\n        store = useGlobalStore(),\n        notification = useNotification(),\n        loading = ref(false)\n\n\n    // Delete address\n    async function deleteAddress() {\n        // Show loader\n        loading.value = true\n\n        // Show notification\n        notification.notify({\n            group: 'default',\n            duration: -100,\n            title: i18n.global.t('message.notification_address_deleting_process')\n        })\n\n        try{\n            if (!store.demo) {\n                // Prepare Tx\n                var prepareResult = await preparePassportTx({\n                    remove_address: {\n                        address: store.currentDeleteAddress,\n                        nickname: store.account.moonPassportOwner.extension.nickname\n                    }\n                })\n\n                // Send Tx\n                var result = await sendTx(prepareResult)\n            } else {\n                var result = { code: 0 }\n            }\n\n            if (result.code === 0) {\n                // Set TXS\n                store.lastTXS = result.transactionHash\n\n                // Show notification\n                notification.notify({\n                    group: 'default',\n                    clean: true\n                })\n\n                notification.notify({\n                    group: 'default',\n                    title: i18n.global.t('message.notification_success_address_delete_title'),\n                    type: 'success',\n                    data: {\n                        chain: 'bostrom',\n                        tx_type: i18n.global.t('message.notification_action_address_delete')\n                    }\n                })\n\n                if (!store.demo) {\n                    // Reload page\n                    setTimeout(() => window.location.reload(), 100)\n                } else {\n                    setTimeout(() => {\n                        // Hide loader\n                        loading.value = false\n\n                        // Close delete address modal\n                        store.currentDeleteAddress = ''\n                        store.showDeleteAddressModal = false\n\n                        document.body.classList.remove('lock')\n                    }, 200)\n                }\n            }\n\n            if (result.code) {\n                // Show notification\n                notification.notify({\n                    group: 'default',\n                    clean: true\n                })\n\n                notification.notify({\n                    duration: -100,\n                    group: 'default',\n                    title: i18n.global.t('message.notification_failed_title'),\n                    text: result?.rawLog.toString(),\n                    type: 'error',\n                    data: {\n                        chain: 'bostrom',\n                        tx_type: i18n.global.t('message.notification_action_address_delete')\n                    }\n                })\n\n                // Hide loader\n                loading.value = false\n            }\n        } catch (error) {\n            console.log(error)\n\n            // Show notification\n            notification.notify({\n                group: 'default',\n                clean: true\n            })\n\n            notification.notify({\n                group: 'default',\n                title: i18n.global.t('message.notification_failed_title'),\n                text: i18n.global.t('message.notification_tx_error_rejected'),\n                type: 'error',\n                data: {\n                    chain: 'bostrom',\n                    tx_type: i18n.global.t('message.notification_action_address_delete')\n                }\n            })\n\n            // Hide loader\n            loading.value = false\n        }\n    }\n</script>\n\n\n<style scoped>\n    .modal_content .data\n    {\n        padding-top: 96px;\n    }\n\n\n    .image\n    {\n        display: flex;\n\n        height: 240px;\n        margin-bottom: 40px;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .image img\n    {\n        display: block;\n\n        max-width: 100%;\n        max-height: 100%;\n    }\n\n\n    .title\n    {\n        font-size: 30px;\n        font-weight: 600;\n        line-height: 130%;\n\n        text-align: center;\n    }\n\n\n    .btns\n    {\n        display: flex;\n\n        margin-top: 40px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .btns .btn\n    {\n        font-size: 16px;\n        font-weight: 500;\n        line-height: 19px;\n\n        display: block;\n\n        width: calc(50% - 5px);\n        padding: 14px;\n\n        transition: background .2s linear;\n\n        border-radius: 14px;\n        background: #353535;\n    }\n\n    .btns .btn:hover\n    {\n        background: #282828;\n    }\n\n\n    .btns .btn.yes_btn\n    {\n        background: #950fff;\n    }\n\n    .btns .btn.yes_btn:hover\n    {\n        background: #7700e1;\n    }\n\n</style>","import script from \"./DeleteAddressModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DeleteAddressModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DeleteAddressModal.vue?vue&type=style&index=0&id=1cac6918&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1cac6918\"]])\n\nexport default __exports__","<template>\n    <form @submit.prevent=\"onSubmit\">\n        <input type=\"text\" v-model=\"name\" class=\"input\" maxlength=\"16\">\n\n        <button type=\"submit\" class=\"submit_btn\">\n            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n        </button>\n\n        <button type=\"button\" class=\"cancel_btn\" @click.prevent=\"e => e.target.closest('.item').classList.remove('editing')\">\n            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n        </button>\n\n        <div class=\"loader_wrap\" v-if=\"loading\">\n            <div class=\"loader\"><span></span></div>\n        </div>\n    </form>\n</template>\n\n\n<script setup>\n    import { inject, onBeforeMount, ref } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { useNotification } from '@kyvg/vue3-notification'\n    import { preparePassportTx, sendTx } from '@/utils'\n\n\n    const props = defineProps(['address', 'name']),\n        store = useGlobalStore(),\n        notification = useNotification(),\n        i18n = inject('i18n'),\n        name = ref(''),\n        loading = ref(false)\n\n\n    onBeforeMount(() => {\n        name.value = props.name\n    })\n\n\n    // Submit form\n    async function onSubmit() {\n        // Show loader\n        loading.value = true\n\n        // Show notification\n        notification.notify({\n            group: 'default',\n            duration: -100,\n            title: i18n.global.t('message.notification_address_renaming_process')\n        })\n\n        try{\n            if (!store.demo) {\n                // Prepare Tx\n                var prepareResult = await preparePassportTx({\n                    set_address_label: {\n                        address: props.address,\n                        label: name.value,\n                        nickname: store.account.moonPassportOwner.extension.nickname\n                    }\n                })\n\n                // Send Tx\n                var result = await sendTx(prepareResult)\n            } else {\n                var result = { code: 0 }\n            }\n\n            if (result.code === 0) {\n                // Set TXS\n                store.lastTXS = result.transactionHash\n\n                // Show notification\n                notification.notify({\n                    group: 'default',\n                    clean: true\n                })\n\n                notification.notify({\n                    group: 'default',\n                    title: i18n.global.t('message.notification_success_address_rename_title'),\n                    type: 'success',\n                    data: {\n                        chain: 'bostrom',\n                        tx_type: i18n.global.t('message.notification_action_address_rename')\n                    }\n                })\n\n                // Get moon passport\n                if (!store.demo) {\n                    await store.getMoonPassport()\n                    await store.getOwnerMoonPassport()\n                }\n\n                // Hide loader\n                loading.value = false\n\n                // Hide form\n                document.querySelectorAll('.connected_addresses .item').forEach(el => el.classList.remove('editing'))\n            }\n        } catch (error) {\n            console.log(error)\n\n            // Show notification\n            notification.notify({\n                group: 'default',\n                clean: true\n            })\n\n            notification.notify({\n                group: 'default',\n                title: i18n.global.t('message.notification_failed_title'),\n                text: i18n.global.t('message.notification_tx_error_rejected'),\n                type: 'error',\n                data: {\n                    chain: 'bostrom',\n                    tx_type: i18n.global.t('message.notification_action_address_rename')\n                }\n            })\n\n            // Hide loader\n            loading.value = false\n        }\n    }\n</script>\n\n\n<style scoped>\n    form\n    {\n        position: absolute;\n        z-index: 5;\n        top: 0;\n        left: 0;\n\n        width: 100%;\n        height: 100%;\n\n        pointer-events: auto;\n    }\n\n\n    form .input\n    {\n        color: var(--text_color);\n        font-family: var(--font-family);\n        font-size: 14px;\n\n        display: block;\n\n        width: 100%;\n        height: 100%;\n        padding-right: 55px;\n        padding-bottom: 21px;\n        padding-left: 9px;\n\n        border: 1px solid #950fff;\n        border-radius: 14px;\n        background: #141414;\n    }\n\n\n    form .submit_btn\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 30px;\n        bottom: 0;\n\n        display: flex;\n\n        width: 16px;\n        height: 16px;\n        margin: auto;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    form .submit_btn .icon\n    {\n        display: block;\n\n        width: 16px;\n        height: 16px;\n    }\n\n\n    form .cancel_btn\n    {\n        position: absolute;\n        z-index: 3;\n        top: 0;\n        right: 10px;\n        bottom: 0;\n\n        display: flex;\n\n        width: 16px;\n        height: 16px;\n        margin: auto;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    form .cancel_btn .icon\n    {\n        display: block;\n\n        width: 16px;\n        height: 16px;\n    }\n\n\n    form .loader_wrap\n    {\n        border-radius: 13px;\n    }\n\n    form .loader\n    {\n        width: 24px;\n        height: 24px;\n    }\n\n</style>","import script from \"./EditAddressName.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditAddressName.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./EditAddressName.vue?vue&type=style&index=0&id=8ba777b2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-8ba777b2\"]])\n\nexport default __exports__","<template>\n    <section class=\"connected_addresses\">\n        <div class=\"title\">\n            <span>{{ $t('message.account_connected_addresses_title') }}</span>\n\n            <button class=\"all_btn\" v-if=\"store.account.moonPassportOwner.extension.addresses\" :class=\"{ active: store.account.currentWallet == 'all' }\" @click.prevent=\"selectWallet('all')\">\n                <div class=\"check\">\n                    <svg><use xlink:href=\"@/assets/sprite.svg#ic_check\"></use></svg>\n                </div>\n                <span>{{ $t('message.account_connected_addresses_all') }}</span>\n            </button>\n        </div>\n\n        <div class=\"list\">\n            <div><div class=\"item\"\n                :class=\"{'active': store.account.currentWallet == 'all' || store.account.moonPassportOwnerAddress == generateAddress('bostrom', store.account.currentWallet)}\"\n                @click.prevent=\"selectWallet(store.account.moonPassportOwnerAddress)\"\n            >\n                <div class=\"name\">\n                    {{ store.account.moonPassportOwner.extension.nickname }}\n                </div>\n\n                <button class=\"copy_btn\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_copy_address'))\" @click=\"onCopy(store.account.moonPassportOwnerAddress)\" v-if=\"store.currentNetwork == 'all'\">\n                    <div class=\"tooltip copy_tooltip\">\n                        {{ $t('message.account_copy_tooltip') }}\n                    </div>\n\n                    <svg><use xlink:href=\"@/assets/sprite.svg#ic_copy\"></use></svg>\n                </button>\n\n                <button class=\"copy_btn\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_copy_address'))\" @click=\"onCopy(generateAddress(store.networks[store.currentNetwork].address_prefix, store.account.moonPassportOwnerAddress))\" v-else>\n                    <div class=\"tooltip copy_tooltip\">\n                        {{ $t('message.account_copy_tooltip') }}\n                    </div>\n\n                    <svg><use xlink:href=\"@/assets/sprite.svg#ic_copy\"></use></svg>\n                </button>\n\n                <div class=\"address\">\n                <template v-if=\"store.currentNetwork == 'all'\">\n                {{ store.account.moonPassportOwnerAddress.slice(0, 13) + '...' + store.account.moonPassportOwnerAddress.slice(-6) }}\n                </template>\n\n                <template v-else>\n                {{ generateAddress(store.networks[store.currentNetwork].address_prefix, store.account.moonPassportOwnerAddress).slice(0, 13) + '...' + generateAddress(store.networks[store.currentNetwork].address_prefix, store.account.moonPassportOwnerAddress).slice(-6) }}\n                </template>\n                </div>\n            </div></div>\n\n            <template v-for=\"(item, index) in store.account.moonPassportOwner.extension.addresses\" :key=\"index\" v-if=\"store.account.moonPassportOwner.extension.addresses\">\n            <div v-if=\"item.address.substring(0, 2) != '0x' && item.address.substring(0, 5) != 'terra'\">\n                <div class=\"item\" @click.self=\"selectWallet(item.address)\" :class=\"{\n                    'duplicate': isDuplicate(item.address),\n                    'active': store.account.currentWallet == 'all' || store.account.currentWallet == generateAddress('bostrom', item.address)\n                }\">\n                    <div class=\"tooltip\">\n                        {{ $t('message.account_duplicate_ext') }}\n                    </div>\n\n                    <div class=\"name\">\n                        <span v-if=\"item.label\">{{ item.label }}</span>\n                        <span v-else>{{ item.address.slice(0, 13) + '...' + item.address.slice(-6) }}</span>\n                    </div>\n\n                    <button class=\"copy_btn\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_copy_address'))\" @click=\"onCopy(item.address)\" v-if=\"store.currentNetwork == 'all'\">\n                        <div class=\"tooltip copy_tooltip\">\n                            {{ $t('message.account_copy_tooltip') }}\n                        </div>\n\n                        <svg><use xlink:href=\"@/assets/sprite.svg#ic_copy\"></use></svg>\n                    </button>\n\n                    <button class=\"copy_btn\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_copy_address'))\" @click=\"onCopy(generateAddress(store.networks[store.currentNetwork].address_prefix, item.address))\" v-else>\n                        <div class=\"tooltip copy_tooltip\">\n                            {{ $t('message.account_copy_tooltip') }}\n                        </div>\n\n                        <svg><use xlink:href=\"@/assets/sprite.svg#ic_copy\"></use></svg>\n                    </button>\n\n                    <button class=\"edit_btn\" @click.prevent=\"showEditForm\" v-if=\"store.account.moonPassportOwnerAddress == generateAddress('bostrom', store.Keplr.account.address)\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_edit_address'))\">\n                        <svg><use xlink:href=\"@/assets/sprite.svg#ic_edit\"></use></svg>\n                    </button>\n\n                    <button class=\"remove_btn\" @click.prevent=\"openDeleteAddressModal(item.address)\" v-if=\"store.account.moonPassportOwnerAddress == generateAddress('bostrom', store.Keplr.account.address)\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_delete_address'))\">\n                        <svg><use xlink:href=\"@/assets/sprite.svg#ic_remove\"></use></svg>\n                    </button>\n\n                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_duplicate\"></use></svg>\n\n                    <EditAddressName :address=\"item.address\" :name=\"item.label ? item.label : `${item.address.slice(0, 13)}...${item.address.slice(-6)}`\"/>\n\n                    <div class=\"address\">\n                        <template v-if=\"store.currentNetwork == 'all'\">\n                        {{ item.address.slice(0, 13) + '...' + item.address.slice(-6) }}\n                        </template>\n\n                        <template v-else>\n                        {{ generateAddress(store.networks[store.currentNetwork].address_prefix, store.account.moonPassportOwnerAddress).slice(0, 13) + '...' + generateAddress(store.networks[store.currentNetwork].address_prefix, item.address).slice(-6) }}\n                        </template>\n                    </div>\n                </div>\n            </div>\n\n            <div v-else>\n                <div class=\"item not_supported\">\n                    <div class=\"tooltip\">\n                        {{ $t('message.account_not_supported_ext') }}\n                    </div>\n\n                    <div class=\"name\">\n                        <span>{{ item.address.slice(0, 13) + '...' + item.address.slice(-6) }}</span>\n                    </div>\n\n                    <button class=\"copy_btn\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_copy_address'))\" @click=\"onCopy(item.address)\">\n                        <div class=\"tooltip copy_tooltip\">\n                            {{ $t('message.account_copy_tooltip') }}\n                        </div>\n\n                        <svg><use xlink:href=\"@/assets/sprite.svg#ic_copy\"></use></svg>\n                    </button>\n\n                    <button class=\"remove_btn\" @click.prevent=\"openDeleteAddressModal(item.address)\" v-if=\"store.account.moonPassportOwnerAddress == generateAddress('bostrom', store.Keplr.account.address)\" @mouseover=\"emitter.emit('setNotification', $t('message.notice_delete_address'))\">\n                        <svg><use xlink:href=\"@/assets/sprite.svg#ic_remove\"></use></svg>\n                    </button>\n\n                    <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_duplicate\"></use></svg>\n                </div>\n            </div>\n            </template>\n        </div>\n\n        <button class=\"add_btn\" @click.prevent=\"openAddAddressModal\" :class=\"{'disabled': store.account.moonPassportOwner.extension.addresses && store.account.moonPassportOwner.extension.addresses.length >= 8}\">\n            <span>{{ $t('message.btn_add_address') }}</span>\n            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_plus\"></use></svg>\n        </button>\n\n\n        <!-- Add address modal -->\n        <AddAddressModal v-if=\"store.showAddAddressModal\" />\n\n\n        <!-- Delete address modal -->\n        <DeleteAddressModal v-if=\"store.showDeleteAddressModal\" />\n    </section>\n</template>\n\n\n<script setup>\n    import { inject, onBeforeMount, onBeforeUpdate } from 'vue'\n    import { useGlobalStore } from '@/stores'\n    import { generateAddress } from '@/utils'\n    import { useClipboard } from '@vueuse/core'\n\n    // Components\n    import AddAddressModal from '@/components/modal/AddAddressModal.vue'\n    import DeleteAddressModal from '@/components/modal/DeleteAddressModal.vue'\n    import EditAddressName from '@/components/account/EditAddressName.vue'\n\n\n    const store = useGlobalStore(),\n        emitter = inject('emitter'),\n        { copy } = useClipboard()\n\n    var uniqWallets = []\n\n\n    onBeforeMount(() => {\n        // Create uniq wallets array\n        createUniwWalletsArray()\n    })\n\n\n    onBeforeUpdate(() => {\n        // Clear array\n        uniqWallets = []\n\n        // Create uniq wallets array\n        createUniwWalletsArray()\n    })\n\n\n    // Create uniq wallets array\n    function createUniwWalletsArray() {\n        uniqWallets[store.account.moonPassportOwnerAddress] = true\n\n        if(store.account.moonPassportOwner.extension.addresses) {\n            store.account.moonPassportOwner.extension.addresses.forEach(address => {\n                // Drop eth and terra addresses\n                if(address.address.substring(0, 2) != '0x' && address.address.substring(0, 5) != 'terra') {\n                    let tempBostromAddress = generateAddress('bostrom', address.address)\n\n                    if (!uniqWallets[tempBostromAddress]) {\n                        uniqWallets[tempBostromAddress] = false\n                    }\n                }\n            })\n        }\n    }\n\n\n    // Check address\n    function isDuplicate(address) {\n        if(address.substring(0, 2) != '0x' && address.substring(0, 5) != 'terra') {\n            let result = false\n\n            !uniqWallets[generateAddress('bostrom', address)]\n                ? uniqWallets[generateAddress('bostrom', address)] = true\n                : result = true\n\n            return result\n        }\n    }\n\n\n    // Select wallet\n    function selectWallet(address) {\n        if(address == 'all') {\n            store.account.currentWallet == 'all'\n                ? store.account.currentWallet = store.account.moonPassportOwnerAddress\n                : store.account.currentWallet = address\n        } else {\n            store.account.currentWallet = generateAddress('bostrom', address)\n        }\n    }\n\n\n    // Show edit form\n    function showEditForm() {\n        let _self = event.target\n\n        _self.closest('.item').classList.add('editing')\n\n        // Focus on input\n        setTimeout(() => _self.closest('.item').querySelector('.input').focus())\n    }\n\n\n    // Open add address modal\n    function openAddAddressModal() {\n        store.showAddAddressModal = true\n\n        document.body.classList.add('lock')\n    }\n\n\n    // Open delete address modal\n    function openDeleteAddressModal(address) {\n        store.currentDeleteAddress = address\n        store.showDeleteAddressModal = true\n\n        document.body.classList.add('lock')\n    }\n\n\n    // Copy address\n    function onCopy(address) {\n        // Copy\n        copy(address)\n\n        // Show message\n        let _self = event.target\n\n        _self.closest('.item').querySelector('.copy_tooltip').classList.add('show')\n\n        setTimeout(() => _self.closest('.item').querySelector('.copy_tooltip').classList.remove('show'), 2000)\n    }\n\n\n    // Event \"close add address modal\"\n    emitter.on('closeAddAddressModal', () => {\n        if(!store.demo && store.needReload) {\n            // Reload page\n            window.location.reload()\n        } else {\n            store.showAddAddressModal = false\n\n            document.body.classList.remove('lock')\n        }\n    })\n\n\n    // Event \"close delete address modal\"\n    emitter.on('closeDeleteAddressModal', () => {\n        store.showDeleteAddressModal = false\n\n        document.body.classList.remove('lock')\n    })\n</script>\n\n\n<style scoped>\n    .connected_addresses\n    {\n        position: relative;\n\n        padding: 14px 14px 24px;\n\n        border-radius: 20px;\n        background: #0d0d0d;\n    }\n\n\n    .connected_addresses .title\n    {\n        font-size: 30px;\n        font-weight: 600;\n        line-height: 36px;\n\n        display: flex;\n\n        margin-bottom: 20px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .connected_addresses .all_btn\n    {\n        font-size: 14px;\n        line-height: 17px;\n\n        display: flex;\n\n        margin-left: auto;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .connected_addresses .all_btn .check\n    {\n        display: flex;\n\n        width: 20px;\n        height: 20px;\n        margin-right: 8px;\n\n        transition: background .2s linear;\n\n        border-radius: 7px;\n        background: #464646;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .connected_addresses .all_btn .check svg\n    {\n        display: block;\n\n        width: 16px;\n        height: 16px;\n\n        transition: opacity .2s linear;\n\n        opacity: 0;\n    }\n\n\n    .connected_addresses .all_btn.active .check\n    {\n        background: #950fff;\n    }\n    .connected_addresses .all_btn.active .check svg\n    {\n        opacity: 1;\n    }\n\n\n    .connected_addresses .list\n    {\n        display: flex;\n        flex-direction: column;\n    }\n\n\n    .connected_addresses .list > *\n    {\n        position: relative;\n    }\n\n    .connected_addresses .list > * + *\n    {\n        margin-top: 8px;\n    }\n\n\n    .connected_addresses .item\n    {\n        color: rgba(255,255,255,.7);\n\n        position: relative;\n\n        display: flex;\n\n        min-height: 42px;\n        padding: 10px;\n\n        cursor: pointer;\n        transition: .2s linear;\n\n        border-radius: 14px;\n        background: #141414;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .connected_addresses .item.hide\n    {\n        display: none;\n    }\n\n    .connected_addresses .item > *\n    {\n        pointer-events: none;\n    }\n\n\n    .connected_addresses .tooltip\n    {\n        font-size: 12px;\n        line-height: 100%;\n\n        position: absolute;\n        z-index: 9;\n        right: -41px;\n        bottom: 100%;\n\n        display: none;\n\n        margin-bottom: 8px;\n        padding: 8px;\n\n        pointer-events: none;\n\n        border-radius: 8px;\n        background: #282828;\n        box-shadow: 0 6px 12px rgba(0, 0, 0, .2);\n    }\n\n\n    .connected_addresses .tooltip.show\n    {\n        display: block;\n    }\n\n    .connected_addresses .tooltip:before\n    {\n        position: absolute;\n        top: 100%;\n        right: 0;\n        left: 0;\n\n        display: block;\n\n        width: 29px;\n        height: 7px;\n        margin: 0 auto;\n\n        content: '';\n\n        background: url(@/assets/images/tooltip_tail.svg) 50% 0/100% 100% no-repeat;\n    }\n\n\n    .connected_addresses .name\n    {\n        font-size: 14px;\n        line-height: 20px;\n\n        overflow: hidden;\n\n        width: calc(100% - 120px);\n        margin-right: auto;\n        padding-right: 8px;\n\n        white-space: nowrap;\n        text-overflow: ellipsis;\n    }\n\n\n    .connected_addresses .address\n    {\n        color: #555;\n        font-size: 12px;\n        line-height: 100%;\n\n        position: relative;\n        z-index: 5;\n\n        width: 100%;\n        margin-top: 8px;\n    }\n\n\n    .connected_addresses .item > .icon\n    {\n        color: #eb5757;\n\n        display: none;\n\n        width: 16px;\n        min-width: 16px;\n        height: 16px;\n        margin-left: 8px;\n    }\n\n\n    .connected_addresses .copy_btn\n    {\n        color: #555;\n\n        position: relative;\n\n        display: none;\n\n        width: 16px;\n        min-width: 16px;\n        height: 16px;\n        margin-left: 8px;\n\n        transition: color .2s linear;\n        pointer-events: auto;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .connected_addresses .copy_btn .tooltip\n    {\n        color: #fff;\n\n        right: auto;\n        left: 50%;\n\n        margin-bottom: 20px;\n\n        transform: translateX(-50%);\n        white-space: nowrap;\n    }\n\n    .connected_addresses .copy_btn svg\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n    }\n\n    .connected_addresses .copy_btn:hover\n    {\n        color: #fff;\n    }\n\n\n    .connected_addresses .edit_btn\n    {\n        color: #555;\n\n        display: none;\n\n        width: 16px;\n        min-width: 16px;\n        height: 16px;\n        margin-left: 8px;\n\n        transition: color .2s linear;\n        pointer-events: auto;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .connected_addresses .edit_btn svg\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n    }\n\n    .connected_addresses .edit_btn:hover\n    {\n        color: #fff;\n    }\n\n\n    .connected_addresses .remove_btn\n    {\n        color: #555;\n\n        display: none;\n\n        width: 18px;\n        min-width: 18px;\n        height: 18px;\n        margin-left: 8px;\n\n        transition: color .2s linear;\n        pointer-events: auto;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .connected_addresses .remove_btn svg\n    {\n        display: block;\n\n        width: 100%;\n        height: 100%;\n    }\n\n    .connected_addresses .remove_btn:hover\n    {\n        color: #fff;\n    }\n\n\n    .connected_addresses .item form\n    {\n        display: none;\n\n        pointer-events: auto;\n    }\n\n    .connected_addresses .item.editing form\n    {\n        display: block;\n    }\n\n\n    .connected_addresses .list > *:hover .item\n    {\n        color: #fff;\n\n        background: #212121;\n    }\n\n    .connected_addresses .list > *:hover .item .remove_btn,\n    .connected_addresses .list > *:hover .item .edit_btn,\n    .connected_addresses .list > *:hover .item .copy_btn\n    {\n        display: flex;\n    }\n\n\n    .connected_addresses .item.active\n    {\n        color: #fff;\n\n        background: #141414;\n        box-shadow: inset 0 0 0 1px #950fff;\n    }\n\n\n    .connected_addresses .item.duplicate\n    {\n        color: #fff;\n\n        cursor: default;\n        pointer-events: none;\n\n        box-shadow: none;\n    }\n\n\n    .connected_addresses .item.not_supported\n    {\n        box-shadow: inset 0 0 0 1px #eb5757;\n    }\n\n    .connected_addresses .item.not_supported .tooltip\n    {\n        right: -31px;\n    }\n\n\n    .connected_addresses .item.duplicate > .icon,\n    .connected_addresses .list > *:hover .item.duplicate > .tooltip,\n    .connected_addresses .item.not_supported > .icon,\n    .connected_addresses .list > *:hover .item.not_supported > .tooltip\n    {\n        display: block;\n    }\n\n\n    .connected_addresses .add_btn\n    {\n        font-size: 14px;\n        line-height: 110%;\n\n        display: flex;\n\n        width: 100%;\n        margin-top: 16px;\n        padding: 8px;\n\n        transition: background .2s linear;\n\n        border-radius: 14px;\n        background: #950fff;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .connected_addresses .add_btn .icon\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n        margin-left: 8px;\n    }\n\n    .connected_addresses .add_btn.disabled\n    {\n        pointer-events: none;\n\n        opacity: .3;\n    }\n\n    .connected_addresses .add_btn:hover\n    {\n        background: #7700e1;\n    }\n\n\n\n    @media print, (max-width: 1899px)\n    {\n        .connected_addresses .title\n        {\n            font-size: 27px;\n            line-height: 33px;\n        }\n    }\n\n</style>","import script from \"./ConnectedAddresses.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ConnectedAddresses.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ConnectedAddresses.vue?vue&type=style&index=0&id=c82b0bec&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c82b0bec\"]])\n\nexport default __exports__","<template>\n    <div class=\"tour\" v-if=\"tourShow\" :class=\"[tourPosition]\" :style=\"{\n        top: tourCoordinates.top + 'px',\n        right: tourCoordinates.right + 'px',\n        bottom: tourCoordinates.bottom + 'px',\n        left: tourCoordinates.left + 'px',\n        margin: tourCoordinates.margin\n    }\">\n        <button class=\"close_btn\" @click.prevent=\"closeTour()\">\n            <svg class=\"icon\"><use xlink:href=\"@/assets/sprite.svg#ic_close\"></use></svg>\n        </button>\n\n        <div class=\"step step0\" :class=\"{'show': currentStep == 0}\">\n            <div class=\"title\">Let's get to know each other</div>\n\n            <div class=\"desc\">Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut al</div>\n        </div>\n\n        <div class=\"step step1\" :class=\"{'show': currentStep == 1}\">\n            <div class=\"title\">Let's get to know each other</div>\n\n            <div class=\"desc\">Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut al</div>\n        </div>\n\n        <div class=\"step step2\" :class=\"{'show': currentStep == 2}\">\n            <div class=\"title\">Let's get to know each other</div>\n\n            <div class=\"desc\">Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut al</div>\n        </div>\n\n        <div class=\"step step2\" :class=\"{'show': currentStep == 3}\">\n            <div class=\"title\">Let's get to know each other</div>\n\n            <div class=\"desc\">Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut al</div>\n        </div>\n\n        <div class=\"step step2\" :class=\"{'show': currentStep == 4}\">\n            <div class=\"title\">Let's get to know each other</div>\n\n            <div class=\"desc\">Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut al</div>\n        </div>\n\n        <div class=\"step step2\" :class=\"{'show': currentStep == 5}\">\n            <div class=\"title\">Let's get to know each other</div>\n\n            <div class=\"desc\">Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut al</div>\n        </div>\n\n        <div class=\"bullets\">\n            <div v-for=\"(step, index) in steps\" :key=\"index\" :class=\"{'active': currentStep == index}\" @click.prevent=\"selectStep(currentStep = index)\"></div>\n        </div>\n\n        <div class=\"btns\">\n            <button class=\"btn prev_btn\" @click.prevent=\"selectStep(currentStep--)\">\n                {{ $t('message.btn_back') }}\n            </button>\n\n            <button class=\"btn next_btn\" @click.prevent=\"selectStep(currentStep++)\" v-if=\"currentStep < (steps.length - 1)\">\n                {{ $t('message.btn_next') }}\n            </button>\n\n            <button class=\"btn done_btn\" @click.prevent=\"closeTour()\" v-else>\n                {{ $t('message.btn_done') }}\n            </button>\n        </div>\n    </div>\n\n    <div class=\"tour_overlay\" @click.prevent=\"closeTour()\"></div>\n</template>\n\n\n<script setup>\n    import { onMounted, ref, reactive } from 'vue'\n    import { useGlobalStore } from '@/stores'\n\n\n    const store = useGlobalStore(),\n        currentStep = ref(0),\n        tourShow = ref(false),\n        tourPosition = ref(''),\n        tourCoordinates = reactive({\n            top: 'auto',\n            right: 'auto',\n            bottom: 'auto',\n            left: 'auto',\n            margin: 'auto',\n        }),\n        steps = [\n            {\n                selector: '.networks',\n                position: 'right-start'\n            },\n            {\n                selector: '.connected_addresses',\n                position: 'left-start'\n            },\n            {\n                selector: '.main_data',\n                position: 'bottom'\n            },\n            {\n                selector: '.stats',\n                position: 'bottom'\n            },\n            {\n                selector: '.validators',\n                position: 'bottom'\n            },\n            {\n                selector: '.proposals',\n                position: 'right-start'\n            },\n        ]\n\n\n    onMounted(() => {\n        // Start tour\n        selectStep()\n    })\n\n\n    function selectStep() {\n        // Get current element\n        let block = document.querySelector(steps[currentStep.value].selector),\n            blockCoordinates = block.getBoundingClientRect()\n\n        // Remove tour_selected class\n        steps.forEach(el => document.querySelector(el.selector).classList.remove('tour_selected'))\n\n        // Bring element to first layer\n        block.classList.add('tour_selected')\n\n        // Set coordinates for tour block\n        tourPosition.value = steps[currentStep.value].position\n\n        switch (steps[currentStep.value].position) {\n            case 'right-start':\n                tourCoordinates.top = blockCoordinates.top + window.scrollY\n                tourCoordinates.right = 'auto'\n                tourCoordinates.bottom = 'auto'\n                tourCoordinates.left = blockCoordinates.left + window.scrollX + block.offsetWidth,\n                tourCoordinates.margin = 'auto auto auto 15px'\n                break;\n\n            case 'left-start':\n                tourCoordinates.top = blockCoordinates.top + window.scrollY\n                tourCoordinates.right = 'auto'\n                tourCoordinates.bottom = 'auto'\n                tourCoordinates.left = blockCoordinates.left + window.scrollX - 280,\n                tourCoordinates.margin = 'auto auto auto -15px'\n                break;\n\n            case 'bottom':\n                tourCoordinates.top = blockCoordinates.top + window.scrollY + block.offsetHeight\n                tourCoordinates.right = 0\n                tourCoordinates.bottom = 'auto'\n                tourCoordinates.left = 0,\n                tourCoordinates.margin = '15px auto auto auto'\n                break;\n\n            default:\n                tourCoordinates.top = 'auto'\n                tourCoordinates.right = 'auto'\n                tourCoordinates.bottom = 'auto'\n                tourCoordinates.left = 'auto',\n                tourCoordinates.margin = 'auto'\n                break;\n        }\n\n        block.scrollIntoView({\n            behavior: 'smooth',\n            block: 'start'\n        })\n\n        // Show tour block\n        tourShow.value = true\n    }\n\n\n    // Tour done\n    function closeTour() {\n        // Hide tour\n        store.tour = false\n        tourShow.value = false\n\n        // Scroll on top\n        document.querySelector('.wrap').scrollIntoView({\n            behavior: 'smooth',\n            block: 'start'\n        })\n    }\n</script>\n\n\n<style scoped>\n    .tour_overlay\n    {\n        position: fixed;\n        z-index: 1000;\n        top: 0;\n        left: 0;\n\n        width: 100%;\n        height: 100%;\n\n        background: rgba(0, 0, 0, .8);\n    }\n\n\n\n    .tour\n    {\n        position: absolute;\n        z-index: 1010;\n\n        width: 280px;\n        padding: 11px;\n\n        border: 1px solid rgba(255, 255, 255, .1);\n        border-radius: 12px;\n        background: #141414;\n    }\n\n\n    .tour:before\n    {\n        position: absolute;\n\n        display: none;\n\n        width: 9px;\n        height: 22px;\n        margin: auto;\n\n        content: '';\n\n        background: url(@/assets/images/tourguide_tail.svg) 0 0 no-repeat;\n    }\n\n    .tour.right-start:before\n    {\n        top: 0;\n        right: 100%;\n        bottom: 0;\n\n        display: block;\n\n        transform: rotate(180deg);\n    }\n\n    .tour.left-start:before\n    {\n        top: 0;\n        bottom: 0;\n        left: 100%;\n\n        display: block;\n    }\n\n    .tour.bottom:before\n    {\n        top: 0;\n        right: 0;\n        bottom: 100%;\n        left: 0;\n\n        display: block;\n\n        margin-top: -15px;\n\n        transform: rotate(-90deg);\n    }\n\n\n    .tour .close_btn\n    {\n        position: absolute;\n        top: 11px;\n        right: 11px;\n\n        display: flex;\n\n        width: 24px;\n        height: 24px;\n\n        transition: color .2s linear;\n\n        justify-content: center;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .tour .close_btn .icon\n    {\n        display: block;\n\n        width: 24px;\n        height: 24px;\n    }\n\n    .tour .close_btn:hover\n    {\n        color: #950fff;\n    }\n\n\n    .tour .step\n    {\n        display: none;\n    }\n\n    .tour .step.show\n    {\n        display: block;\n    }\n\n\n    .tour .step .title\n    {\n        font-size: 18px;\n        font-weight: 600;\n\n        padding-right: 31px;\n    }\n\n\n    .tour .step .desc\n    {\n        font-size: 14px;\n        line-height: 120%;\n\n        margin-top: 8px;\n\n        opacity: .8;\n    }\n\n\n    .tour .bullets\n    {\n        display: flex;\n\n        margin-top: 16px;\n\n        justify-content: flex-start;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n    .tour .bullets > *\n    {\n        width: 6px;\n        height: 6px;\n\n        cursor: pointer;\n        transition: background .2s linear;\n\n        border-radius: 50%;\n        background: #353535;\n    }\n\n    .tour .bullets > * + *\n    {\n        margin-left: 8px;\n    }\n\n\n    .tour .bullets > *:hover,\n    .tour .bullets > *.active\n    {\n        background: #950fff;\n    }\n\n\n    .tour .btns\n    {\n        display: flex;\n\n        margin-top: 16px;\n\n        justify-content: space-between;\n        align-items: center;\n        align-content: center;\n        flex-wrap: wrap;\n    }\n\n\n    .tour .btns .btn\n    {\n        font-size: 12px;\n\n        display: block;\n\n        width: calc(50% - 4px);\n\n        transition: .2s linear;\n\n        border-radius: 140px;\n    }\n\n\n    .tour .btns .btn.prev_btn\n    {\n        color: #555;\n\n        padding: 9px 15px;\n\n        border: 1px solid #282828;\n    }\n\n    .tour .btns .btn.prev_btn:hover\n    {\n        color: #fff;\n\n        border-color: #fff;\n    }\n\n\n    .tour .btns .btn.next_btn,\n    .tour .btns .btn.done_btn\n    {\n        color: #fff;\n\n        padding: 10px 16px;\n\n        background: #950fff;\n    }\n\n    .tour .btns .btn.next_btn:hover,\n    .tour .btns .btn.done_btn:hover\n    {\n        background: #7700e1;\n        box-shadow: 2px 5px 15px rgba(149, 15, 255, .45);\n    }\n\n</style>","import script from \"./AccountPageTour.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AccountPageTour.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AccountPageTour.vue?vue&type=style&index=0&id=63d80538&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-63d80538\"]])\n\nexport default __exports__","<template>\n    <section class=\"account_info\">\n        <div class=\"cont middle\">\n            <div class=\"grid row\">\n                <section class=\"col\">\n                    <!-- Networks -->\n                    <Networks />\n                </section>\n\n\n                <section class=\"col_main\">\n                    <section class=\"main_data\">\n                        <!-- Charts -->\n                        <Charts :key=\"chartsKey\" />\n                    </section>\n\n\n                    <!-- Stats -->\n                    <Stats :key=\"statsKey\" />\n\n                    <!-- Validators -->\n                    <Validators :key=\"validatorsKey\" />\n\n                    <!-- Proposals -->\n                    <Proposals />\n                </section>\n\n\n                <section class=\"col\">\n                    <!-- Connected addresses -->\n                    <ConnectedAddresses />\n                </section>\n            </div>\n        </div>\n    </section>\n\n\n    <!-- Account Page Tour -->\n    <AccountPageTour v-if=\"store.demo && store.tour\" />\n</template>\n\n\n<script setup>\n    import { onBeforeMount, inject, ref, watch } from 'vue'\n    import { useGlobalStore } from '@/stores'\n\n    // Components\n    import Networks from '../components/account/Networks.vue'\n    import Charts from '../components/account/Charts.vue'\n    import Stats from '../components/account/Stats.vue'\n    import Validators from '../components/account/Validators.vue'\n    import Proposals from '../components/account/Proposals.vue'\n    import ConnectedAddresses from '../components/account/ConnectedAddresses.vue'\n    import AccountPageTour from '../components/tour/AccountPageTour.vue'\n\n\n    const store = useGlobalStore(),\n        i18n = inject('i18n'),\n        chartsKey = ref(0),\n        statsKey = ref(0),\n        validatorsKey = ref(0)\n\n\n    onBeforeMount(() => {\n        // Set default notification\n        store.tooltip = i18n.global.t('message.notice_default_account_page')\n    })\n\n\n    watch(() => store.account.currentWallet, () => {\n        chartsKey.value += 1\n        statsKey.value += 1\n        validatorsKey.value += 1\n    })\n</script>\n\n\n<style scoped>\n    .grid\n    {\n        justify-content: space-between;\n    }\n\n\n    .col\n    {\n        width: 353px;\n        max-width: 100%;\n    }\n\n\n    .col_main\n    {\n        width: calc(100% - 746px);\n    }\n\n    .col_main > * + *\n    {\n        margin-top: 24px;\n    }\n\n\n\n    .main_data\n    {\n        padding: 20px;\n\n        border-radius: 20px;\n        background: #0d0d0d;\n    }\n\n</style>","import script from \"./Account.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Account.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Account.vue?vue&type=style&index=0&id=92a4f78c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-92a4f78c\"]])\n\nexport default __exports__"],"names":["store","useGlobalStore","__exports__","ChartJS","register","ArcElement","emitter","inject","chartStake","ref","chartDatasetsStake","reactive","chartActiveLegendStake","chartTotalStake","chartDataStake","computed","datasets","data","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","borderAlign","cutout","chartOptionsStake","responsive","plugins","legend","tooltip","animation","duration","transitions","active","onHover","e","item","length","value","index","chartLiquide","chartDatasetsLiquide","chartActiveLegendLiquide","chartTotalLiquide","chartDataLiquide","chartOptionsLiquide","currentWallet","currentData","total","staked","unbonding","liquid_rewards","liquid","rewards","ibc","balance","calcPercentsStake","type","result","mouseenterLegendStake","dataIndex","chartInstance","chart","setActiveElements","datasetIndex","update","mouseleaveLegendStake","setWidth","percents","mouseenterLegendLiquide","mouseleaveLegendLiquide","toggleActiveClass","target","closest","classList","toggle","onBeforeMount","account","wallets","find","el","address","networks","name","wallet","network","forEach","duplicate","symbol","amount","push","chartDatasets","chartActiveLegend","chartData","chartOptions","mouseenterLegend","mouseleaveLegend","calcPercents","price","totalPrice","totalTokens","chartColors","chartTotal","groupByDenom","token","allGroupByDenom","logo","sort","a","b","color","networkColors","substring","STRD","XPRT","QCK","loading","demo","chartActive","async","getData","cosmosNetworkPrice","prices","fetch","generateAddress","cosmoshub","address_prefix","then","res","json","response","totals","outside","native","i","exponent","splice","Math","pow","amountCurrentDenom","parseFloat","currentNetworkInWallet","error","console","log","on","chartIndex","totalRewardTokens","APR","RPDE","cosmosHubAddress","currentNetwork","info","apr","rpde","RPDE_USDT","imageLoadError","event","add","style","colors","floor","random","getValidatorInfo","columnName","validatorInfo","schema","indexOf","props","validator","operator_address","showValidatorModal","totalPassportTokens","showAll","getAddressData","currentAddress","validators","nickname","coin","getAllData","generatedAddress","moonPassportOwnerAddress","openValidatorModal","document","body","remove","proposals","i18n","notification","useNotification","activeStep","activeKeplrAddress","Keplr","addedNetwork","addedAddress","ownerAccount","signature","editForm","duplicateError","hasPassportError","tempAddressName","checkAddress","prefix","moonPassportOwner","extension","addresses","includes","checkAllAddress","selectNetwork","global","t","setNewSinger","showEditForm","setTimeout","getElementById","focus","hideEditForm","cancelEditForm","setActiveKeplrAddress","userName","window","keplr","enable","chainId","offlineSigner","getOfflineSignerAuto","accounts","getAccounts","createSignature","notify","group","title","signArbitrary","CONSTITUTION_HASH","toBase64","toAscii","JSON","stringify","pub_key","reloadPage","needReload","emit","addAddress","code","prepareResult","preparePassportTx","proof_address","set_address_label","label","sendTx","lastTXS","transactionHash","clean","chain","tx_type","text","watchEffect","addEventListener","showAddAddressModal","connectWallet","moonPassport","bostrom","deleteAddress","remove_address","currentDeleteAddress","showDeleteAddressModal","location","reload","rawLog","toString","onSubmit","getMoonPassport","getOwnerMoonPassport","querySelectorAll","copy","useClipboard","uniqWallets","createUniwWalletsArray","tempBostromAddress","isDuplicate","selectWallet","_self","querySelector","openAddAddressModal","openDeleteAddressModal","onCopy","onBeforeUpdate","currentStep","tourShow","tourPosition","tourCoordinates","top","right","bottom","left","margin","steps","selector","position","selectStep","block","blockCoordinates","getBoundingClientRect","scrollY","scrollX","offsetWidth","offsetHeight","scrollIntoView","behavior","closeTour","tour","onMounted","chartsKey","statsKey","validatorsKey","watch"],"sourceRoot":""}