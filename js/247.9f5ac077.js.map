{"version":3,"file":"js/247.9f5ac077.js","mappings":"8lkEA+nBI,MAAMA,GAAUC,EAAAA,EAAAA,IAAO,WACnBC,GAAQC,EAAAA,EAAAA,K,svrBC1nBhB,MAAMC,IAA2B,QAAgB,GAAQ,CAAC,CAAC,YAAY,qBAEvE,S","sources":["webpack://bro_app/./src/views/Dashboard.vue","webpack://bro_app/./src/views/Dashboard.vue?040e"],"sourcesContent":["<template>\n    <section class=\"dashboard\">\n        <div class=\"cont\">\n            <div class=\"row\">\n                <div class=\"network\" :class=\"{ empty: !store.auth, disabled: !store.networks.evmos.status && store.auth}\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/evmos_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.evmos.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/evmos_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.evmos.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\">\n                            {{ $filters.toFixed(store.networks.evmos.tokens_sum, 2) }}\n                            {{ store.networks.evmos.token_name }}\n                        </div>\n\n                        <div class=\"progress\">\n                            <div class=\"bar\" :style=\"{'width': $filters.toFixed(store.networks.evmos.delegations_percents, 2) + '%'}\"></div>\n                            <div class=\"bar orange\" :style=\"{'width': $filters.toFixed(store.networks.evmos.rewards_percents, 2) + '%'}\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div>\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.evmos.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div>\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.evmos.RPDE, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.evmos.status && store.auth\">{{ $t('message.details') }}</a>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'evmos' })\">{{ $t('message.delegate_btn') }}</button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.evmos.health_color]\" :style=\"{'--speed': store.networks.evmos.speed + 's'}\"></div>\n                </div>\n\n\n                <div class=\"network\" :class=\"{ empty: !store.auth, disabled: !store.networks.juno.status && store.auth}\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/juno_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.juno.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/juno_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.juno.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\">\n                            {{ $filters.toFixed(store.networks.juno.tokens_sum, 2) }}\n                            {{ store.networks.juno.token_name }}\n                        </div>\n\n                        <div class=\"progress\">\n                            <div class=\"bar\" :style=\"{'width': $filters.toFixed(store.networks.juno.delegations_percents, 2) + '%'}\"></div>\n                            <div class=\"bar orange\" :style=\"{'width': $filters.toFixed(store.networks.juno.rewards_percents, 2) + '%'}\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div>\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.juno.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div>\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.juno.RPDE, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.juno.status && store.auth\">{{ $t('message.details') }}</a>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'juno' })\">{{ $t('message.delegate_btn') }}</button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.juno.health_color]\" :style=\"{'--speed': store.networks.juno.speed + 's'}\"></div>\n                </div>\n\n\n                <div class=\"network\" :class=\"{ empty: !store.auth, disabled: !store.networks.cosmoshub.status && store.auth}\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/cosmos_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.cosmoshub.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/cosmos_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.cosmoshub.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\">\n                            {{ $filters.toFixed(store.networks.cosmoshub.tokens_sum, 2) }}\n                            {{ store.networks.cosmoshub.token_name }}\n                        </div>\n\n                        <div class=\"progress\">\n                            <div class=\"bar\" :style=\"{'width': $filters.toFixed(store.networks.cosmoshub.delegations_percents, 2) + '%'}\"></div>\n                            <div class=\"bar orange\" :style=\"{'width': $filters.toFixed(store.networks.cosmoshub.rewards_percents, 2) + '%'}\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div>\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.cosmoshub.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div>\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.cosmoshub.RPDE, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.cosmoshub.status && store.auth\">{{ $t('message.details') }}</a>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'cosmoshub' })\">{{ $t('message.delegate_btn') }}</button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.cosmoshub.health_color]\" :style=\"{'--speed': store.networks.cosmoshub.speed + 's'}\"></div>\n                </div>\n\n\n                <div class=\"network\" :class=\"{ empty: !store.auth, disabled: !store.networks.bostrom.status && store.auth}\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/bostrom_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.bostrom.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/bostrom_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.bostrom.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\">\n                            {{ $filters.toFixed(store.networks.bostrom.tokens_sum / store.networks.bostrom.exponent, 2) }}\n                            {{ store.networks.bostrom.token_name }}\n                        </div>\n\n                        <div class=\"progress\">\n                            <div class=\"bar\" :style=\"{'width': $filters.toFixed(store.networks.bostrom.delegations_percents, 2) + '%'}\"></div>\n                            <div class=\"bar orange\" :style=\"{'width': $filters.toFixed(store.networks.bostrom.rewards_percents, 2) + '%'}\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div>\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.bostrom.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div>\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.bostrom.RPDE / store.networks.bostrom.exponent, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.bostrom.status && store.auth\">{{ $t('message.details') }}</a>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'bostrom' })\">{{ $t('message.delegate_btn') }}</button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.bostrom.health_color]\" :style=\"{'--speed': store.networks.bostrom.speed + 's'}\"></div>\n                </div>\n            </div>\n\n\n            <div class=\"row\">\n                <div class=\"network\" :class=\"{ empty: !store.auth, disabled: !store.networks.emoney.status && store.auth}\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/e-money_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.emoney.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/e-money_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.emoney.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\">\n                            {{ $filters.toFixed(store.networks.emoney.tokens_sum, 2) }}\n                            {{ store.networks.emoney.token_name }}\n                        </div>\n\n                        <div class=\"progress\">\n                            <div class=\"bar\" :style=\"{'width': $filters.toFixed(store.networks.emoney.delegations_percents, 2) + '%'}\"></div>\n                            <div class=\"bar orange\" :style=\"{'width': $filters.toFixed(store.networks.emoney.rewards_percents, 2) + '%'}\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div>\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.emoney.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div>\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.emoney.RPDE, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.emoney.status && store.auth\">{{ $t('message.details') }}</a>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'emoney' })\">{{ $t('message.delegate_btn') }}</button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.emoney.health_color]\" :style=\"{'--speed': store.networks.emoney.speed + 's'}\"></div>\n                </div>\n\n\n                <div class=\"network\" :class=\"{ empty: !store.auth, disabled: !store.networks.desmos.status && store.auth}\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/desmos_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.desmos.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/desmos_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.desmos.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\">\n                            {{ $filters.toFixed(store.networks.desmos.tokens_sum, 2) }}\n                            {{ store.networks.desmos.token_name }}\n                        </div>\n\n                        <div class=\"progress\">\n                            <div class=\"bar\" :style=\"{'width': $filters.toFixed(store.networks.desmos.delegations_percents, 2) + '%'}\"></div>\n                            <div class=\"bar orange\" :style=\"{'width': $filters.toFixed(store.networks.desmos.rewards_percents, 2) + '%'}\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div>\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.desmos.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div>\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.desmos.RPDE, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.desmos.status && store.auth\">{{ $t('message.details') }}</a>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'desmos' })\">{{ $t('message.delegate_btn') }}</button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.desmos.health_color]\" :style=\"{'--speed': store.networks.desmos.speed + 's'}\"></div>\n                </div>\n\n\n                <div class=\"account\">\n                    <button class=\"connect_wallet_btn\" @click.prevent=\"emitter.emit('connectWallet')\" v-if=\"!store.auth\">\n                        {{ $t('message.connect_wallet') }}\n                    </button>\n\n                    <template v-else>\n                        <div class=\"user_name\">{{ store.userName }}</div>\n\n                        <div class=\"balance\" v-if=\"store.currency == 'USDT'\">{{ $filters.toFixed(store.account.balance_usdt, 2) }} {{ store.currency }}</div>\n                        <div class=\"balance\" v-if=\"store.currency == 'ATOM'\">{{ $filters.toFixed(store.account.balance_atom, 2) }} {{ store.currency }}</div>\n                        <div class=\"balance\" v-if=\"store.currency == 'ETH'\">{{ $filters.toFixed(store.account.balance_eth, 4) }} {{ store.currency }}</div>\n                        <div class=\"balance\" v-if=\"store.currency == 'BTC'\">{{ $filters.toFixed(store.account.balance_btc, 5) }} {{ store.currency }}</div>\n\n                        <div class=\"stats\">\n                            <div>\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n                                <div class=\"val\" v-if=\"store.currency == 'USDT'\">{{ $filters.toFixed(store.account.RPDE_usdt, 3) }}</div>\n                                <div class=\"val\" v-if=\"store.currency == 'ATOM'\">{{ $filters.toFixed(store.account.RPDE_atom, 3) }}</div>\n                                <div class=\"val\" v-if=\"store.currency == 'ETH'\">{{ $filters.toFixed(store.account.RPDE_eth, 3) }}</div>\n                                <div class=\"val\" v-if=\"store.currency == 'BTC'\">{{ $filters.toFixed(store.account.RPDE_btc, 3) }}</div>\n                            </div>\n\n                            <div>\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.account.personal_APR, 2) }}%</div>\n                            </div>\n                        </div>\n\n                        <a href=\"/\" class=\"details_btn\">{{ $t('message.details') }}</a>\n                    </template>\n\n                    <div class=\"shadow\"></div>\n                </div>\n\n\n                <div class=\"network\" :class=\"{ empty: !store.auth, disabled: !store.networks.osmosis.status && store.auth}\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/osmosis_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.osmosis.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/osmosis_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.osmosis.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\">\n                            {{ $filters.toFixed(store.networks.osmosis.tokens_sum, 2) }}\n                            {{ store.networks.osmosis.token_name }}\n                        </div>\n\n                        <div class=\"progress\">\n                            <div class=\"bar\" :style=\"{'width': $filters.toFixed(store.networks.osmosis.delegations_percents, 2) + '%'}\"></div>\n                            <div class=\"bar orange\" :style=\"{'width': $filters.toFixed(store.networks.osmosis.rewards_percents, 2) + '%'}\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div>\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.osmosis.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div>\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.osmosis.RPDE, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.osmosis.status && store.auth\">{{ $t('message.details') }}</a>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'osmosis' })\">{{ $t('message.delegate_btn') }}</button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.osmosis.health_color]\" :style=\"{'--speed': store.networks.osmosis.speed + 's'}\"></div>\n                </div>\n\n\n                <div class=\"network\" :class=\"{ empty: !store.auth, disabled: !store.networks.crescent.status && store.auth}\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/crescent_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.crescent.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/crescent_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.crescent.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\">\n                            {{ $filters.toFixed(store.networks.crescent.tokens_sum, 2) }}\n                            {{ store.networks.crescent.token_name }}\n                        </div>\n\n                        <div class=\"progress\">\n                            <div class=\"bar\" :style=\"{'width': $filters.toFixed(store.networks.crescent.delegations_percents, 2) + '%'}\"></div>\n                            <div class=\"bar orange\" :style=\"{'width': $filters.toFixed(store.networks.crescent.rewards_percents, 2) + '%'}\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div>\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.crescent.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div>\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.crescent.RPDE, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.crescent.status && store.auth\">{{ $t('message.details') }}</a>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'crescent' })\">{{ $t('message.delegate_btn') }}</button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.crescent.health_color]\" :style=\"{'--speed': store.networks.crescent.speed + 's'}\"></div>\n                </div>\n            </div>\n\n\n            <div class=\"row\">\n                <div class=\"network\" :class=\"{ empty: !store.auth, disabled: !store.networks.gravity.status && store.auth}\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/g-bridge_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.gravity.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/g-bridge_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.gravity.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\">\n                            {{ $filters.toFixed(store.networks.gravity.tokens_sum, 2) }}\n                            {{ store.networks.gravity.token_name }}\n                        </div>\n\n                        <div class=\"progress\">\n                            <div class=\"bar\" :style=\"{'width': $filters.toFixed(store.networks.gravity.delegations_percents, 2) + '%'}\"></div>\n                            <div class=\"bar orange\" :style=\"{'width': $filters.toFixed(store.networks.gravity.rewards_percents, 2) + '%'}\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div>\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.gravity.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div>\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.gravity.RPDE, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.gravity.status && store.auth\">{{ $t('message.details') }}</a>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'gravity' })\">{{ $t('message.delegate_btn') }}</button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.gravity.health_color]\" :style=\"{'--speed': store.networks.gravity.speed + 's'}\"></div>\n                </div>\n\n\n                <div class=\"network\" :class=\"{ empty: !store.auth, disabled: !store.networks.stargaze.status && store.auth}\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/stargaze_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.stargaze.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/stargaze_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.stargaze.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\">\n                            {{ $filters.toFixed(store.networks.stargaze.tokens_sum, 2) }}\n                            {{ store.networks.stargaze.token_name }}\n                        </div>\n\n                        <div class=\"progress\">\n                            <div class=\"bar\" :style=\"{'width': $filters.toFixed(store.networks.stargaze.delegations_percents, 2) + '%'}\"></div>\n                            <div class=\"bar orange\" :style=\"{'width': $filters.toFixed(store.networks.stargaze.rewards_percents, 2) + '%'}\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div>\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.stargaze.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div>\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.stargaze.RPDE, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.stargaze.status && store.auth\">{{ $t('message.details') }}</a>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'stargaze' })\">{{ $t('message.delegate_btn') }}</button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.stargaze.health_color]\" :style=\"{'--speed': store.networks.stargaze.speed + 's'}\"></div>\n                </div>\n\n\n                <div class=\"network\" :class=\"{ empty: !store.auth, disabled: !store.networks.omniflix.status && store.auth}\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/omniflix_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.omniflix.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/omniflix_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.omniflix.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\">\n                            {{ $filters.toFixed(store.networks.omniflix.tokens_sum, 2) }}\n                            {{ store.networks.omniflix.token_name }}\n                        </div>\n\n                        <div class=\"progress\">\n                            <div class=\"bar\" :style=\"{'width': $filters.toFixed(store.networks.omniflix.delegations_percents, 2) + '%'}\"></div>\n                            <div class=\"bar orange\" :style=\"{'width': $filters.toFixed(store.networks.omniflix.rewards_percents, 2) + '%'}\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div>\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.omniflix.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div>\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.omniflix.RPDE, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.omniflix.status && store.auth\">{{ $t('message.details') }}</a>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'omniflix' })\">{{ $t('message.delegate_btn') }}</button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.omniflix.health_color]\" :style=\"{'--speed': store.networks.omniflix.speed + 's'}\"></div>\n                </div>\n\n\n                <div class=\"network\" :class=\"{ empty: !store.auth, disabled: !store.networks.stride.status && store.auth}\">\n                    <template v-if=\"!store.auth\">\n                        <div class=\"logo\">\n                            <img src=\"../assets/images/stride_logo.png\" alt=\"\">\n                        </div>\n\n                        <div>{{ store.networks.stride.name }}</div>\n                    </template>\n\n                    <template v-else>\n                        <div class=\"head\">\n                            <div class=\"logo\">\n                                <img src=\"../assets/images/stride_logo.png\" alt=\"\">\n                            </div>\n\n                            <div class=\"name\">{{ store.networks.stride.name }}</div>\n                        </div>\n\n                        <div class=\"tokens\">\n                            {{ $filters.toFixed(store.networks.stride.tokens_sum, 2) }}\n                            {{ store.networks.stride.token_name }}\n                        </div>\n\n                        <div class=\"progress\">\n                            <div class=\"bar\" :style=\"{'width': $filters.toFixed(store.networks.stride.delegations_percents, 2) + '%'}\"></div>\n                            <div class=\"bar orange\" :style=\"{'width': $filters.toFixed(store.networks.stride.rewards_percents, 2) + '%'}\"></div>\n                        </div>\n\n                        <div class=\"stats\">\n                            <div>\n                                <div class=\"label\">{{ $t('message.personal_apr') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.stride.personal_APR, 2) }}%</div>\n                            </div>\n\n                            <div>\n                                <div class=\"label\">{{ $t('message.RPDE') }}</div>\n                                <div class=\"val\">{{ $filters.toFixed(store.networks.stride.RPDE, 2) }}</div>\n                            </div>\n                        </div>\n\n                        <a href=\"/\" class=\"details_btn\" v-if=\"store.networks.stride.status && store.auth\">{{ $t('message.details') }}</a>\n\n                        <button class=\"delegate_btn\" v-else @click.prevent=\"emitter.emit('open_manage_modal', { network: 'stride' })\">{{ $t('message.delegate_btn') }}</button>\n                    </template>\n\n                    <div class=\"shadow\" :class=\"[store.networks.stride.health_color]\" :style=\"{'--speed': store.networks.stride.speed + 's'}\"></div>\n                </div>\n            </div>\n        </div>\n    </section>\n</template>\n\n\n<script setup>\n    import { inject } from 'vue'\n    import { useGlobalStore } from '@/stores'\n\n    const emitter = inject('emitter'),\n        store = useGlobalStore()\n</script>\n\n\n<style scoped>\n.dashboard\n{\n    padding-bottom: 24px;\n}\n\n\n.dashboard .row\n{\n    justify-content: center;  margin-bottom: -7px;  margin-left: -7px;\n}\n\n.dashboard .row + .row\n{\n    margin-top: -82px;\n}\n\n\n.dashboard .row > *\n{\n    width: calc(20% - 7px);  margin-bottom: 7px;  margin-left: 7px;\n}\n\n\n.dashboard .row > *\n{\n    position: relative;  z-index: 3;  display: flex;  flex-direction: column;  width: 280px;  height: 324px;  padding: 40px 38px 52px;  pointer-events: none;  color: #fff;\n}\n\n.dashboard .row > *:before\n{\n    position: absolute;  z-index: -1;  top: 0;  left: 0;  display: block;  width: 100%;  height: 100%;  content: '';  background: #141414;  clip-path: polygon(50% 0, 100% 25%, 100% 75%, 50% 100%, 0 75%, 0 25%);\n}\n\n.dashboard .row > *.hidden:before\n{\n    display: none;\n}\n\n\n.dashboard .shadow\n{\n    position: absolute;  z-index: -2;  top: -3px;  left: -3px;  display: block;  width: calc(100% + 6px);  height: calc(100% + 6px);  --speed: 10s;  clip-path: polygon(50% 0, 100% 25%, 100% 75%, 50% 100%, 0 75%, 0 25%);\n}\n\n\n.dashboard .shadow:after\n{\n    position: absolute;  top: -24px;  left: -24px;  display: block;  width: calc(100% + 48px);  height: calc(100% + 48px);  content: '';          -webkit-animation: spin var(--speed) linear infinite;             -moz-animation: spin var(--speed) linear infinite;                  animation: spin var(--speed) linear infinite;\n}\n\n.dashboard .shadow.green:after\n{\n      background:    -moz-linear-gradient(top, rgba(92, 255, 15, 1) 0%, rgba(0, 47, 5, .3) 100%);      background: -webkit-linear-gradient(top, rgba(92, 255, 15, 1) 0%, rgba(0, 47, 5, .3) 100%);      background:         linear-gradient(to bottom, rgba(92, 255, 15, 1) 0%, rgba(0, 47, 5, .3) 100%);\n}\n\n.dashboard .shadow.orange:after\n{\n      background:    -moz-linear-gradient(top, rgba(255, 101, 15, 1) 0%, rgba(96, 24, 2, .3) 100%);      background: -webkit-linear-gradient(top, rgba(255, 101, 15, 1) 0%, rgba(96, 24, 2, .3) 100%);      background:         linear-gradient(to bottom, rgba(255, 101, 15, 1) 0%, rgba(96, 24, 2, .3) 100%);\n}\n\n.dashboard .shadow.red:after\n{\n      background:    -moz-linear-gradient(top, rgba(255, 15, 15, 1) 0%, rgba(87, 0, 0, .3) 100%);      background: -webkit-linear-gradient(top, rgba(255, 15, 15, 1) 0%, rgba(87, 0, 0, .3) 100%);      background:         linear-gradient(to bottom, rgba(255, 15, 15, 1) 0%, rgba(87, 0, 0, .3) 100%);\n}\n\n.dashboard .shadow.grey:after\n{\n    background: #212121;\n}\n\n\n.dashboard .head\n{\n    display: flex;  align-content: center;  align-items: center;  flex-wrap: wrap;  justify-content: center;  width: 100%;  margin-bottom: 20px;\n}\n\n\n.dashboard .logo\n{\n    position: relative;  display: flex;  align-content: center;  align-items: center;  flex-wrap: wrap;  justify-content: center;  width: 30px;  height: 30px;  border-radius: 50%;\n}\n\n\n.dashboard .logo img\n{\n    display: block;  max-width: 100%;  max-height: 100%;\n    border-radius: inherit;\n}\n\n\n.dashboard .name\n{\n    font-size: 18px;  font-weight: 500;  line-height: 22px;  max-width: calc(100% - 40px);  margin-left: 10px;\n}\n\n\n.dashboard .tokens\n{\n    font-size: 18px;  font-weight: 600;  line-height: 22px;  margin-bottom: 10px;  text-align: center;  white-space: nowrap;  font-feature-settings: 'pnum' on, 'lnum' on;\n}\n\n\n.dashboard .progress\n{\n    display: flex;  overflow: hidden;  align-content: stretch;  align-items: stretch;  flex-wrap: wrap;  justify-content: flex-start;  height: 13px;  margin-bottom: 12px;  border-radius: 20px;  background: #0b2272;\n}\n\n.dashboard .progress .bar\n{\n    height: 13px;  transition: width .2s linear;  background: #4075fd;\n}\n\n.dashboard .progress .bar.orange\n{\n    background: orange;\n}\n\n\n.dashboard .stats\n{\n    font-size: 12px;  line-height: 15px;  width: 100%;  margin-bottom: 20px;\n}\n\n\n.dashboard .stats > *\n{\n    display: flex;  align-content: center;  align-items: center;  flex-wrap: nowrap;  justify-content: space-between;\n}\n\n.dashboard .stats > * + *\n{\n    margin-top: 7px;  padding-top: 6px;  border-top: 1px solid rgba(255, 255, 255, .05);\n}\n\n\n.dashboard .stats .label\n{\n    position: relative;  margin-right: 10px;\n}\n\n\n.dashboard .stats .val\n{\n    font-weight: 500;\n}\n\n\n.dashboard .details_btn,\n.dashboard .delegate_btn\n{\n    font-size: 12px;  font-weight: 600;  line-height: 15px;  display: block;  margin: auto auto 0;  padding: 9px 29px 10px;  transition: .2s linear;  text-decoration: none;  pointer-events: auto;  color: currentColor;  border: 1px solid #353535;  border-radius: 40px;\n}\n\n.dashboard .delegate_btn,\n.dashboard .details_btn:hover\n{\n    color: #fff;  border-color: #950fff;  background: #950fff;\n}\n\n\n\n.dashboard .network.empty\n{\n    font-size: 30px;  font-weight: 700;  line-height: 36px;  align-content: center;  align-items: center;  flex-direction: row;  flex-wrap: wrap;  justify-content: center;  text-align: center;  color: #464646;\n}\n\n.dashboard .network.empty .shadow:after\n{\n    background: #212121;\n}\n\n\n.dashboard .network.empty .logo\n{\n    position: relative;  display: flex;  align-content: center;  align-items: center;  flex-wrap: wrap;  justify-content: center;  width: 60px;  height: 60px;  margin: 0 auto 10px;\n}\n\n.dashboard .network.empty .logo + div\n{\n    width: 100%;\n}\n\n.dashboard .network.empty .logo img\n{\n    display: block;  max-width: 100%;  max-height: 100%;  border-radius: 50%;\n}\n\n.dashboard .network.empty .logo:after\n{\n    position: absolute;  z-index: 2;  top: -1px;  left: -1px;  display: block;  width: calc(100% + 2px);  height: calc(100% + 2px);  content: '';  border-radius: 50%;  background: rgba(20, 20, 20, .8);\n}\n\n\n\n.dashboard .row > *.disabled\n{\n    color: #464646;\n}\n\n.dashboard .disabled .logo:after\n{\n    position: absolute;  z-index: 2;  top: 0;  left: 0;  display: block;  width: 100%;  height: 100%;  content: '';  opacity: .8;  border-radius: inherit;  background: #141414;\n}\n\n.dashboard .disabled .progress,\n.dashboard .disabled .progress .bar\n{\n    background: #282828;\n}\n\n.dashboard .network.disabled .shadow:after\n{\n    background: #212121;\n}\n\n\n\n.dashboard .row > *.account:before\n{\n    background: #3c0666;\n}\n\n\n.dashboard .account\n{\n    position: relative;\n}\n\n\n.dashboard .account .user_name\n{\n    font-size: 18px;  font-weight: 500;  line-height: 22px;  overflow: hidden;  width: 102px;  margin: 0 auto 20px;  text-align: center;  white-space: nowrap;  text-overflow: ellipsis;\n}\n\n\n.dashboard .account .balance\n{\n    font-size: 30px;  font-weight: 700;  line-height: 36px;  margin-bottom: 18px;  text-align: center;  font-feature-settings: 'pnum' on, 'lnum' on;\n}\n\n\n.dashboard .account .connect_wallet_btn\n{\n    font-size: 12px;  font-weight: 600;  line-height: 15px;  position: absolute;  top: 0;  right: 0;  bottom: 0;  left: 0;  display: block;  width: 128px;  height: 35px;  margin: auto;  transition: .2s linear;  pointer-events: auto;  color: #000;  border-radius: 50px;  background: #fff;\n}\n\n.dashboard .account .connect_wallet_btn:hover\n{\n    color: #fff;  background: #950fff;\n}\n\n\n.dashboard .account .shadow:after\n{\n    background: #950fff;\n}\n\n\n\n@-moz-keyframes spin\n{\n    100%\n    {\n        -moz-transform: rotate(360deg);\n    }\n}\n\n@-webkit-keyframes spin\n{\n    100%\n    {\n        -webkit-transform: rotate(360deg);\n    }\n}\n\n@keyframes spin\n{\n    100%\n    {\n                      -webkit-transform: rotate(360deg);                              transform: rotate(360deg);\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</style>\n","import script from \"./Dashboard.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Dashboard.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Dashboard.vue?vue&type=style&index=0&id=0b71bb4a&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/runner/work/bro.app/bro.app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0b71bb4a\"]])\n\nexport default __exports__"],"names":["emitter","inject","store","useGlobalStore","__exports__"],"sourceRoot":""}